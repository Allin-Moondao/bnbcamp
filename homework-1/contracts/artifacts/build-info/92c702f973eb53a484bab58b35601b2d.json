{
	"id": "92c702f973eb53a484bab58b35601b2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP20Token.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2020-09-09\r\n*/\r\n\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20TOKEN is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n\r\n  constructor() public {\r\n    _name = \"BEP20TOKEN\";\r\n    _symbol = \"BEP20TOKEN\";\r\n    _decimals = 18;\r\n    _totalSupply = 2250000 * 10**18;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Burn `amount` tokens and decreasing the total supply.\r\n   */\r\n  function burn(uint256 amount) public returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP20Token.sol": {
				"BEP20TOKEN": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20Token.sol\":11377:19387  contract BEP20TOKEN is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20Token.sol\":11704:11949  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/BEP20Token.sol\":11704:11949  constructor() public {\r... */\n  pop\n    /* \"contracts/BEP20Token.sol\":9886:9903  address msgSender */\n  0x00\n    /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n  tag_7\n    /* \"contracts/BEP20Token.sol\":9906:9916  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/BEP20Token.sol\":9886:9918  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/BEP20Token.sol\":9934:9943  msgSender */\n  dup1\n    /* \"contracts/BEP20Token.sol\":9925:9931  _owner */\n  0x00\n  dup1\n    /* \"contracts/BEP20Token.sol\":9925:9943  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":9988:9997  msgSender */\n  dup1\n    /* \"contracts/BEP20Token.sol\":9955:9998  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP20Token.sol\":9984:9985  0 */\n  0x00\n    /* \"contracts/BEP20Token.sol\":9955:9998  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP20Token.sol\":9855:10004  constructor () internal {\r... */\n  pop\n    /* \"contracts/BEP20Token.sol\":11732:11752  _name = \"BEP20TOKEN\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4245503230544f4b454e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/BEP20Token.sol\":11732:11737  _name */\n  0x06\n    /* \"contracts/BEP20Token.sol\":11732:11752  _name = \"BEP20TOKEN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/BEP20Token.sol\":11759:11781  _symbol = \"BEP20TOKEN\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4245503230544f4b454e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/BEP20Token.sol\":11759:11766  _symbol */\n  0x05\n    /* \"contracts/BEP20Token.sol\":11759:11781  _symbol = \"BEP20TOKEN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20Token.sol\":11800:11802  18 */\n  0x12\n    /* \"contracts/BEP20Token.sol\":11788:11797  _decimals */\n  0x04\n  0x00\n    /* \"contracts/BEP20Token.sol\":11788:11802  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":11824:11840  2250000 * 10**18 */\n  0x01dc74be914d16aa400000\n    /* \"contracts/BEP20Token.sol\":11809:11821  _totalSupply */\n  0x03\n    /* \"contracts/BEP20Token.sol\":11809:11840  _totalSupply = 2250000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":11871:11883  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP20Token.sol\":11847:11856  _balances */\n  0x01\n    /* \"contracts/BEP20Token.sol\":11847:11868  _balances[msg.sender] */\n  0x00\n    /* \"contracts/BEP20Token.sol\":11857:11867  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":11847:11868  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BEP20Token.sol\":11847:11883  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":11918:11928  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":11897:11943  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP20Token.sol\":11914:11915  0 */\n  0x00\n    /* \"contracts/BEP20Token.sol\":11897:11943  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/BEP20Token.sol\":11930:11942  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP20Token.sol\":11897:11943  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP20Token.sol\":11377:19387  contract BEP20TOKEN is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"contracts/BEP20Token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"contracts/BEP20Token.sol\":3819:3834  address payable */\n  0x00\n    /* \"contracts/BEP20Token.sol\":3850:3860  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":3843:3860  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/BEP20Token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/BEP20Token.sol\":11377:19387  contract BEP20TOKEN is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20Token.sol\":11377:19387  contract BEP20TOKEN is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/BEP20Token.sol\":11377:19387  contract BEP20TOKEN is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20Token.sol\":12419:12498  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_30:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":12419:12498  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":13459:13603  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"contracts/BEP20Token.sol\":13459:13603  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12554:12641  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":14048:14340  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"contracts/BEP20Token.sol\":14048:14340  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12147:12226  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":11625:11647  uint8 public _decimals */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":14722:14922  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/BEP20Token.sol\":14722:14922  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":16050:16160  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contracts/BEP20Token.sol\":16050:16160  function burn(uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12695:12801  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/BEP20Token.sol\":12695:12801  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":10679:10809  function renounceOwnership() public onlyOwner {\r... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/BEP20Token.sol\":12009:12088  function getOwner() external view returns (address) {\r... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":10077:10150  function owner() public view returns (address) {\r... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12283:12366  function symbol() external view returns (string memory) {\r... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_61:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":12283:12366  function symbol() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":15845:15965  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/BEP20Token.sol\":15845:15965  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":15394:15645  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contracts/BEP20Token.sol\":15394:15645  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12995:13145  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"contracts/BEP20Token.sol\":12995:13145  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":11652:11673  string public _symbol */\n    tag_19:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_78:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":11652:11673  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":11678:11697  string public _name */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_82:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_82)\n    tag_84:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":11678:11697  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_85:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":13199:13329  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_21:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"contracts/BEP20Token.sol\":13199:13329  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"contracts/BEP20Token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/BEP20Token.sol\":12419:12498  function name() external view returns (string memory) {\r... */\n    tag_27:\n        /* \"contracts/BEP20Token.sol\":12458:12471  string memory */\n      0x60\n        /* \"contracts/BEP20Token.sol\":12487:12492  _name */\n      0x06\n        /* \"contracts/BEP20Token.sol\":12480:12492  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12419:12498  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":13459:13603  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_34:\n        /* \"contracts/BEP20Token.sol\":13527:13531  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13540:13579  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":13549:13561  _msgSender() */\n      tag_98\n        /* \"contracts/BEP20Token.sol\":13549:13559  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":13549:13561  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BEP20Token.sol\":13563:13570  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13572:13578  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13540:13548  _approve */\n      tag_100\n        /* \"contracts/BEP20Token.sol\":13540:13579  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/BEP20Token.sol\":13593:13597  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":13586:13597  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":13459:13603  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12554:12641  function totalSupply() external view returns (uint256) {\r... */\n    tag_36:\n        /* \"contracts/BEP20Token.sol\":12600:12607  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12623:12635  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":12616:12635  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12554:12641  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":14048:14340  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_39:\n        /* \"contracts/BEP20Token.sol\":14139:14143  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14152:14188  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"contracts/BEP20Token.sol\":14162:14168  sender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14170:14179  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14181:14187  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14152:14161  _transfer */\n      tag_104\n        /* \"contracts/BEP20Token.sol\":14152:14188  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/BEP20Token.sol\":14195:14316  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_105\n        /* \"contracts/BEP20Token.sol\":14204:14210  sender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14212:14224  _msgSender() */\n      tag_106\n        /* \"contracts/BEP20Token.sol\":14212:14222  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":14212:14224  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/BEP20Token.sol\":14226:14315  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_107\n        /* \"contracts/BEP20Token.sol\":14264:14270  amount */\n      dup6\n        /* \"contracts/BEP20Token.sol\":14226:14315  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":14226:14237  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":14226:14245  _allowances[sender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14238:14244  sender */\n      dup12\n        /* \"contracts/BEP20Token.sol\":14226:14245  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":14226:14259  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14246:14258  _msgSender() */\n      tag_108\n        /* \"contracts/BEP20Token.sol\":14246:14256  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":14246:14258  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/BEP20Token.sol\":14226:14259  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":14226:14263  _allowances[sender][_msgSender()].sub */\n      tag_109\n      swap1\n        /* \"contracts/BEP20Token.sol\":14226:14315  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/BEP20Token.sol\":14195:14203  _approve */\n      tag_100\n        /* \"contracts/BEP20Token.sol\":14195:14316  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/BEP20Token.sol\":14330:14334  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":14323:14334  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":14048:14340  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12147:12226  function decimals() external view returns (uint8) {\r... */\n    tag_41:\n        /* \"contracts/BEP20Token.sol\":12190:12195  uint8 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12211:12220  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20Token.sol\":12204:12220  return _decimals */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12147:12226  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11625:11647  uint8 public _decimals */\n    tag_43:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":14722:14922  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_46:\n        /* \"contracts/BEP20Token.sol\":14802:14806  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14815:14898  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_112\n        /* \"contracts/BEP20Token.sol\":14824:14836  _msgSender() */\n      tag_113\n        /* \"contracts/BEP20Token.sol\":14824:14834  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":14824:14836  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP20Token.sol\":14838:14845  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14847:14897  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_114\n        /* \"contracts/BEP20Token.sol\":14886:14896  addedValue */\n      dup6\n        /* \"contracts/BEP20Token.sol\":14847:14858  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":14847:14872  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14859:14871  _msgSender() */\n      tag_115\n        /* \"contracts/BEP20Token.sol\":14859:14869  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":14859:14871  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/BEP20Token.sol\":14847:14872  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":14847:14881  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14873:14880  spender */\n      dup10\n        /* \"contracts/BEP20Token.sol\":14847:14881  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":14847:14885  _allowances[_msgSender()][spender].add */\n      tag_116\n      swap1\n        /* \"contracts/BEP20Token.sol\":14847:14897  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/BEP20Token.sol\":14815:14823  _approve */\n      tag_100\n        /* \"contracts/BEP20Token.sol\":14815:14898  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/BEP20Token.sol\":14912:14916  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":14905:14916  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":14722:14922  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":16050:16160  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_49:\n        /* \"contracts/BEP20Token.sol\":16096:16100  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16109:16136  _burn(_msgSender(), amount) */\n      tag_118\n        /* \"contracts/BEP20Token.sol\":16115:16127  _msgSender() */\n      tag_119\n        /* \"contracts/BEP20Token.sol\":16115:16125  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":16115:16127  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/BEP20Token.sol\":16129:16135  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":16109:16114  _burn */\n      tag_120\n        /* \"contracts/BEP20Token.sol\":16109:16136  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/BEP20Token.sol\":16150:16154  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16143:16154  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":16050:16160  function burn(uint256 amount) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12695:12801  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_52:\n        /* \"contracts/BEP20Token.sol\":12754:12761  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12777:12786  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":12777:12795  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12787:12794  account */\n      dup4\n        /* \"contracts/BEP20Token.sol\":12777:12795  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":12770:12795  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12695:12801  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":10679:10809  function renounceOwnership() public onlyOwner {\r... */\n    tag_54:\n        /* \"contracts/BEP20Token.sol\":10281:10293  _msgSender() */\n      tag_123\n        /* \"contracts/BEP20Token.sol\":10281:10291  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":10281:10293  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/BEP20Token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10271:10277  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20Token.sol\":10263:10330  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/BEP20Token.sol\":10774:10775  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10737:10777  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10758:10764  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10737:10777  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":10801:10802  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10784:10790  _owner */\n      dup1\n      0x00\n        /* \"contracts/BEP20Token.sol\":10784:10803  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":10679:10809  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12009:12088  function getOwner() external view returns (address) {\r... */\n    tag_56:\n        /* \"contracts/BEP20Token.sol\":12052:12059  address */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12075:12082  owner() */\n      tag_127\n        /* \"contracts/BEP20Token.sol\":12075:12080  owner */\n      tag_58\n        /* \"contracts/BEP20Token.sol\":12075:12082  owner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/BEP20Token.sol\":12068:12082  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12009:12088  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":10077:10150  function owner() public view returns (address) {\r... */\n    tag_58:\n        /* \"contracts/BEP20Token.sol\":10115:10122  address */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10138:10144  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10131:10144  return _owner */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":10077:10150  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12283:12366  function symbol() external view returns (string memory) {\r... */\n    tag_60:\n        /* \"contracts/BEP20Token.sol\":12324:12337  string memory */\n      0x60\n        /* \"contracts/BEP20Token.sol\":12353:12360  _symbol */\n      0x05\n        /* \"contracts/BEP20Token.sol\":12346:12360  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12283:12366  function symbol() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":15845:15965  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_67:\n        /* \"contracts/BEP20Token.sol\":15901:15905  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10281:10293  _msgSender() */\n      tag_134\n        /* \"contracts/BEP20Token.sol\":10281:10291  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":10281:10293  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/BEP20Token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10271:10277  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20Token.sol\":10263:10330  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/BEP20Token.sol\":15914:15941  _mint(_msgSender(), amount) */\n      tag_137\n        /* \"contracts/BEP20Token.sol\":15920:15932  _msgSender() */\n      tag_138\n        /* \"contracts/BEP20Token.sol\":15920:15930  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":15920:15932  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/BEP20Token.sol\":15934:15940  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":15914:15919  _mint */\n      tag_139\n        /* \"contracts/BEP20Token.sol\":15914:15941  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/BEP20Token.sol\":15955:15959  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":15948:15959  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":15845:15965  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":15394:15645  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_70:\n        /* \"contracts/BEP20Token.sol\":15479:15483  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":15492:15621  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_141\n        /* \"contracts/BEP20Token.sol\":15501:15513  _msgSender() */\n      tag_142\n        /* \"contracts/BEP20Token.sol\":15501:15511  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":15501:15513  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/BEP20Token.sol\":15515:15522  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":15524:15620  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_143\n        /* \"contracts/BEP20Token.sol\":15563:15578  subtractedValue */\n      dup6\n        /* \"contracts/BEP20Token.sol\":15524:15620  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":15524:15535  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":15524:15549  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":15536:15548  _msgSender() */\n      tag_144\n        /* \"contracts/BEP20Token.sol\":15536:15546  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":15536:15548  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/BEP20Token.sol\":15524:15549  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":15524:15558  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":15550:15557  spender */\n      dup11\n        /* \"contracts/BEP20Token.sol\":15524:15558  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":15524:15562  _allowances[_msgSender()][spender].sub */\n      tag_109\n      swap1\n        /* \"contracts/BEP20Token.sol\":15524:15620  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/BEP20Token.sol\":15492:15500  _approve */\n      tag_100\n        /* \"contracts/BEP20Token.sol\":15492:15621  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/BEP20Token.sol\":15635:15639  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":15628:15639  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":15394:15645  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12995:13145  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_73:\n        /* \"contracts/BEP20Token.sol\":13066:13070  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13079:13121  _transfer(_msgSender(), recipient, amount) */\n      tag_146\n        /* \"contracts/BEP20Token.sol\":13089:13101  _msgSender() */\n      tag_147\n        /* \"contracts/BEP20Token.sol\":13089:13099  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":13089:13101  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/BEP20Token.sol\":13103:13112  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13114:13120  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13079:13088  _transfer */\n      tag_104\n        /* \"contracts/BEP20Token.sol\":13079:13121  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/BEP20Token.sol\":13135:13139  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":13128:13139  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":12995:13145  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11652:11673  string public _symbol */\n    tag_75:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11678:11697  string public _name */\n    tag_81:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":13199:13329  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/BEP20Token.sol\":13273:13280  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13296:13307  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":13296:13314  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13308:13313  owner */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13296:13314  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":13296:13323  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13315:13322  spender */\n      dup4\n        /* \"contracts/BEP20Token.sol\":13296:13323  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":13289:13323  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":13199:13329  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_91:\n        /* \"contracts/BEP20Token.sol\":10281:10293  _msgSender() */\n      tag_156\n        /* \"contracts/BEP20Token.sol\":10281:10291  _msgSender */\n      tag_99\n        /* \"contracts/BEP20Token.sol\":10281:10293  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/BEP20Token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10271:10277  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20Token.sol\":10263:10330  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/BEP20Token.sol\":11023:11051  _transferOwnership(newOwner) */\n      tag_159\n        /* \"contracts/BEP20Token.sol\":11042:11050  newOwner */\n      dup2\n        /* \"contracts/BEP20Token.sol\":11023:11041  _transferOwnership */\n      tag_160\n        /* \"contracts/BEP20Token.sol\":11023:11051  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/BEP20Token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\n    tag_99:\n        /* \"contracts/BEP20Token.sol\":3819:3834  address payable */\n      0x00\n        /* \"contracts/BEP20Token.sol\":3850:3860  msg.sender */\n      caller\n        /* \"contracts/BEP20Token.sol\":3843:3860  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":18670:18990  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_100:\n        /* \"contracts/BEP20Token.sol\":18777:18778  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18760:18779  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":18760:18765  owner */\n      dup4\n        /* \"contracts/BEP20Token.sol\":18760:18779  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":18752:18820  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/BEP20Token.sol\":18854:18855  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18835:18856  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":18835:18842  spender */\n      dup3\n        /* \"contracts/BEP20Token.sol\":18835:18856  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":18827:18895  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/BEP20Token.sol\":18934:18940  amount */\n      dup1\n        /* \"contracts/BEP20Token.sol\":18904:18915  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":18904:18922  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18916:18921  owner */\n      dup6\n        /* \"contracts/BEP20Token.sol\":18904:18922  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":18904:18931  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18923:18930  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":18904:18931  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":18904:18940  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":18968:18975  spender */\n      dup2\n        /* \"contracts/BEP20Token.sol\":18952:18984  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":18961:18966  owner */\n      dup4\n        /* \"contracts/BEP20Token.sol\":18952:18984  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BEP20Token.sol\":18977:18983  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":18952:18984  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":18670:18990  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":16620:17069  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_104:\n        /* \"contracts/BEP20Token.sol\":16732:16733  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16714:16734  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":16714:16720  sender */\n      dup4\n        /* \"contracts/BEP20Token.sol\":16714:16734  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":16706:16776  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/BEP20Token.sol\":16812:16813  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16791:16814  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":16791:16800  recipient */\n      dup3\n        /* \"contracts/BEP20Token.sol\":16791:16814  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":16783:16854  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/BEP20Token.sol\":16883:16954  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"contracts/BEP20Token.sol\":16905:16911  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":16883:16954  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":16883:16892  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16883:16900  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16893:16899  sender */\n      dup8\n        /* \"contracts/BEP20Token.sol\":16883:16900  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":16883:16904  _balances[sender].sub */\n      tag_109\n      swap1\n        /* \"contracts/BEP20Token.sol\":16883:16954  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/BEP20Token.sol\":16863:16872  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16863:16880  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16873:16879  sender */\n      dup6\n        /* \"contracts/BEP20Token.sol\":16863:16880  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":16863:16954  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":16984:17016  _balances[recipient].add(amount) */\n      tag_169\n        /* \"contracts/BEP20Token.sol\":17009:17015  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":16984:16993  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16984:17004  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16994:17003  recipient */\n      dup6\n        /* \"contracts/BEP20Token.sol\":16984:17004  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":16984:17008  _balances[recipient].add */\n      tag_116\n      swap1\n        /* \"contracts/BEP20Token.sol\":16984:17016  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/BEP20Token.sol\":16961:16970  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16961:16981  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":16971:16980  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":16961:16981  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":16961:17016  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":17045:17054  recipient */\n      dup2\n        /* \"contracts/BEP20Token.sol\":17028:17063  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":17037:17043  sender */\n      dup4\n        /* \"contracts/BEP20Token.sol\":17028:17063  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20Token.sol\":17056:17062  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":17028:17063  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":16620:17069  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":5733:5911  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_109:\n        /* \"contracts/BEP20Token.sol\":5819:5826  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5848:5849  a */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5843:5844  b */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5843:5849  b <= a */\n      gt\n      iszero\n        /* \"contracts/BEP20Token.sol\":5851:5863  errorMessage */\n      dup3\n        /* \"contracts/BEP20Token.sol\":5835:5864  require(b <= a, errorMessage) */\n      swap1\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_172:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_172)\n    tag_174:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":5835:5864  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n      pop\n        /* \"contracts/BEP20Token.sol\":5871:5880  uint256 c */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5887:5888  b */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5883:5884  a */\n      dup6\n        /* \"contracts/BEP20Token.sol\":5883:5888  a - b */\n      sub\n        /* \"contracts/BEP20Token.sol\":5871:5888  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":5904:5905  c */\n      dup1\n        /* \"contracts/BEP20Token.sol\":5897:5905  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP20Token.sol\":5733:5911  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":4906:5073  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_116:\n        /* \"contracts/BEP20Token.sol\":4964:4971  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":4980:4989  uint256 c */\n      dup1\n        /* \"contracts/BEP20Token.sol\":4996:4997  b */\n      dup3\n        /* \"contracts/BEP20Token.sol\":4992:4993  a */\n      dup5\n        /* \"contracts/BEP20Token.sol\":4992:4997  a + b */\n      add\n        /* \"contracts/BEP20Token.sol\":4980:4997  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":5017:5018  a */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5012:5013  c */\n      dup2\n        /* \"contracts/BEP20Token.sol\":5012:5018  c >= a */\n      lt\n      iszero\n        /* \"contracts/BEP20Token.sol\":5004:5050  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/BEP20Token.sol\":5066:5067  c */\n      dup1\n        /* \"contracts/BEP20Token.sol\":5059:5067  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP20Token.sol\":4906:5073  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":17928:18258  function _burn(address account, uint256 amount) internal {\r... */\n    tag_120:\n        /* \"contracts/BEP20Token.sol\":18019:18020  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18000:18021  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":18000:18007  account */\n      dup3\n        /* \"contracts/BEP20Token.sol\":18000:18021  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":17992:18059  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/BEP20Token.sol\":18089:18157  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_180\n        /* \"contracts/BEP20Token.sol\":18112:18118  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":18089:18157  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":18089:18098  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":18089:18107  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18099:18106  account */\n      dup7\n        /* \"contracts/BEP20Token.sol\":18089:18107  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":18089:18111  _balances[account].sub */\n      tag_109\n      swap1\n        /* \"contracts/BEP20Token.sol\":18089:18157  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"contracts/BEP20Token.sol\":18068:18077  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":18068:18086  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18078:18085  account */\n      dup5\n        /* \"contracts/BEP20Token.sol\":18068:18086  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":18068:18157  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":18179:18203  _totalSupply.sub(amount) */\n      tag_181\n        /* \"contracts/BEP20Token.sol\":18196:18202  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":18179:18191  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":18179:18195  _totalSupply.sub */\n      tag_182\n      swap1\n        /* \"contracts/BEP20Token.sol\":18179:18203  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/BEP20Token.sol\":18164:18176  _totalSupply */\n      0x03\n        /* \"contracts/BEP20Token.sol\":18164:18203  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":18241:18242  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":18215:18252  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":18224:18231  account */\n      dup3\n        /* \"contracts/BEP20Token.sol\":18215:18252  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20Token.sol\":18245:18251  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":18215:18252  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":17928:18258  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":17330:17620  function _mint(address account, uint256 amount) internal {\r... */\n    tag_139:\n        /* \"contracts/BEP20Token.sol\":17421:17422  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":17402:17423  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":17402:17409  account */\n      dup3\n        /* \"contracts/BEP20Token.sol\":17402:17423  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":17394:17459  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/BEP20Token.sol\":17483:17507  _totalSupply.add(amount) */\n      tag_185\n        /* \"contracts/BEP20Token.sol\":17500:17506  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":17483:17495  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":17483:17499  _totalSupply.add */\n      tag_116\n      swap1\n        /* \"contracts/BEP20Token.sol\":17483:17507  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/BEP20Token.sol\":17468:17480  _totalSupply */\n      0x03\n        /* \"contracts/BEP20Token.sol\":17468:17507  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":17535:17565  _balances[account].add(amount) */\n      tag_186\n        /* \"contracts/BEP20Token.sol\":17558:17564  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":17535:17544  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":17535:17553  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":17545:17552  account */\n      dup6\n        /* \"contracts/BEP20Token.sol\":17535:17553  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":17535:17557  _balances[account].add */\n      tag_116\n      swap1\n        /* \"contracts/BEP20Token.sol\":17535:17565  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/BEP20Token.sol\":17514:17523  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":17514:17532  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":17524:17531  account */\n      dup5\n        /* \"contracts/BEP20Token.sol\":17514:17532  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":17514:17565  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":17598:17605  account */\n      dup2\n        /* \"contracts/BEP20Token.sol\":17577:17614  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":17594:17595  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":17577:17614  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20Token.sol\":17607:17613  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":17577:17614  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":17330:17620  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11155:11370  function _transferOwnership(address newOwner) internal {\r... */\n    tag_160:\n        /* \"contracts/BEP20Token.sol\":11245:11246  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":11225:11247  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":11225:11233  newOwner */\n      dup2\n        /* \"contracts/BEP20Token.sol\":11225:11247  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":11217:11290  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/BEP20Token.sol\":11331:11339  newOwner */\n      dup1\n        /* \"contracts/BEP20Token.sol\":11302:11340  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":11323:11329  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":11302:11340  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":11356:11364  newOwner */\n      dup1\n        /* \"contracts/BEP20Token.sol\":11347:11353  _owner */\n      0x00\n      dup1\n        /* \"contracts/BEP20Token.sol\":11347:11364  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":11155:11370  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":5328:5458  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_182:\n        /* \"contracts/BEP20Token.sol\":5386:5393  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5409:5452  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_190\n        /* \"contracts/BEP20Token.sol\":5413:5414  a */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5416:5417  b */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5409:5452  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/BEP20Token.sol\":5409:5412  sub */\n      tag_109\n        /* \"contracts/BEP20Token.sol\":5409:5452  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_190:\n        /* \"contracts/BEP20Token.sol\":5402:5452  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":5328:5458  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582053551e6671496b2f998197486338f00c4c5b2d768cd979e1a7bc582b17f6f4fb64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600a81526020017f4245503230544f4b454e00000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600a81526020017f4245503230544f4b454e00000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a01dc74be914d16aa400000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b611e5380620003076000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582053551e6671496b2f998197486338f00c4c5b2d768cd979e1a7bc582b17f6f4fb64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4245503230544F4B454E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4245503230544F4B454E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x1DC74BE914D16AA400000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E53 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582053551E6671496B 0x2F SWAP10 DUP2 SWAP8 0x48 PUSH4 0x38F00C4C JUMPDEST 0x2D PUSH23 0x8CD979E1A7BC582B17F6F4FB64736F6C63430005100032 ",
							"sourceMap": "11377:8010:0:-;;;11704:245;8:9:-1;5:2;;;30:1;27;20:12;5:2;11704:245:0;9886:17;9906:12;:10;;;:12;;:::i;:::-;9886:32;;9934:9;9925:6;;:18;;;;;;;;;;;;;;;;;;9988:9;9955:43;;9984:1;9955:43;;;;;;;;;;;;9855:149;11732:20;;;;;;;;;;;;;;;;;:5;:20;;;;;;;;;;;;:::i;:::-;;11759:22;;;;;;;;;;;;;;;;;:7;:22;;;;;;;;;;;;:::i;:::-;;11800:2;11788:9;;:14;;;;;;;;;;;;;;;;;;11824:16;11809:12;:31;;;;11871:12;;11847:9;:21;11857:10;11847:21;;;;;;;;;;;;;;;:36;;;;11918:10;11897:46;;11914:1;11897:46;;;11930:12;;11897:46;;;;;;;;;;;;;;;;;;11377:8010;;3774:92;3819:15;3850:10;3843:17;;3774:92;:::o;11377:8010::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582053551e6671496b2f998197486338f00c4c5b2d768cd979e1a7bc582b17f6f4fb64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582053551E6671496B 0x2F SWAP10 DUP2 SWAP8 0x48 PUSH4 0x38F00C4C JUMPDEST 0x2D PUSH23 0x8CD979E1A7BC582B17F6F4FB64736F6C63430005100032 ",
							"sourceMap": "11377:8010:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11377:8010:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12419:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12419:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13459:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13459:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12554:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14048:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14048:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12147:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11625:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14722:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14722:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16050:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16050:110:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12695:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12695:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10679:130;;;:::i;:::-;;12009:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10077:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12283:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12283:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15845:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15845:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15394:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15394:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12995:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12995:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11652:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11652:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11678:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11678:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13199:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13199:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10954:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10954:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12419:79;12458:13;12487:5;12480:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12419:79;:::o;13459:144::-;13527:4;13540:39;13549:12;:10;:12::i;:::-;13563:7;13572:6;13540:8;:39::i;:::-;13593:4;13586:11;;13459:144;;;;:::o;12554:87::-;12600:7;12623:12;;12616:19;;12554:87;:::o;14048:292::-;14139:4;14152:36;14162:6;14170:9;14181:6;14152:9;:36::i;:::-;14195:121;14204:6;14212:12;:10;:12::i;:::-;14226:89;14264:6;14226:89;;;;;;;;;;;;;;;;;:11;:19;14238:6;14226:19;;;;;;;;;;;;;;;:33;14246:12;:10;:12::i;:::-;14226:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;14195:8;:121::i;:::-;14330:4;14323:11;;14048:292;;;;;:::o;12147:79::-;12190:5;12211:9;;;;;;;;;;;12204:16;;12147:79;:::o;11625:22::-;;;;;;;;;;;;;:::o;14722:200::-;14802:4;14815:83;14824:12;:10;:12::i;:::-;14838:7;14847:50;14886:10;14847:11;:25;14859:12;:10;:12::i;:::-;14847:25;;;;;;;;;;;;;;;:34;14873:7;14847:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14815:8;:83::i;:::-;14912:4;14905:11;;14722:200;;;;:::o;16050:110::-;16096:4;16109:27;16115:12;:10;:12::i;:::-;16129:6;16109:5;:27::i;:::-;16150:4;16143:11;;16050:110;;;:::o;12695:106::-;12754:7;12777:9;:18;12787:7;12777:18;;;;;;;;;;;;;;;;12770:25;;12695:106;;;:::o;10679:130::-;10281:12;:10;:12::i;:::-;10271:22;;:6;;;;;;;;;;;:22;;;10263:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10774:1;10737:40;;10758:6;;;;;;;;;;;10737:40;;;;;;;;;;;;10801:1;10784:6;;:19;;;;;;;;;;;;;;;;;;10679:130::o;12009:79::-;12052:7;12075;:5;:7::i;:::-;12068:14;;12009:79;:::o;10077:73::-;10115:7;10138:6;;;;;;;;;;;10131:13;;10077:73;:::o;12283:83::-;12324:13;12353:7;12346:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12283:83;:::o;15845:120::-;15901:4;10281:12;:10;:12::i;:::-;10271:22;;:6;;;;;;;;;;;:22;;;10263:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15914:27;15920:12;:10;:12::i;:::-;15934:6;15914:5;:27::i;:::-;15955:4;15948:11;;15845:120;;;:::o;15394:251::-;15479:4;15492:129;15501:12;:10;:12::i;:::-;15515:7;15524:96;15563:15;15524:96;;;;;;;;;;;;;;;;;:11;:25;15536:12;:10;:12::i;:::-;15524:25;;;;;;;;;;;;;;;:34;15550:7;15524:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;15492:8;:129::i;:::-;15635:4;15628:11;;15394:251;;;;:::o;12995:150::-;13066:4;13079:42;13089:12;:10;:12::i;:::-;13103:9;13114:6;13079:9;:42::i;:::-;13135:4;13128:11;;12995:150;;;;:::o;11652:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11678:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13199:130::-;13273:7;13296:11;:18;13308:5;13296:18;;;;;;;;;;;;;;;:27;13315:7;13296:27;;;;;;;;;;;;;;;;13289:34;;13199:130;;;;:::o;10954:103::-;10281:12;:10;:12::i;:::-;10271:22;;:6;;;;;;;;;;;:22;;;10263:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11023:28;11042:8;11023:18;:28::i;:::-;10954:103;:::o;3774:92::-;3819:15;3850:10;3843:17;;3774:92;:::o;18670:320::-;18777:1;18760:19;;:5;:19;;;;18752:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18854:1;18835:21;;:7;:21;;;;18827:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18934:6;18904:11;:18;18916:5;18904:18;;;;;;;;;;;;;;;:27;18923:7;18904:27;;;;;;;;;;;;;;;:36;;;;18968:7;18952:32;;18961:5;18952:32;;;18977:6;18952:32;;;;;;;;;;;;;;;;;;18670:320;;;:::o;16620:449::-;16732:1;16714:20;;:6;:20;;;;16706:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16812:1;16791:23;;:9;:23;;;;16783:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16883;16905:6;16883:71;;;;;;;;;;;;;;;;;:9;:17;16893:6;16883:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16863:9;:17;16873:6;16863:17;;;;;;;;;;;;;;;:91;;;;16984:32;17009:6;16984:9;:20;16994:9;16984:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16961:9;:20;16971:9;16961:20;;;;;;;;;;;;;;;:55;;;;17045:9;17028:35;;17037:6;17028:35;;;17056:6;17028:35;;;;;;;;;;;;;;;;;;16620:449;;;:::o;5733:178::-;5819:7;5848:1;5843;:6;;5851:12;5835:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5835:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:9;5887:1;5883;:5;5871:17;;5904:1;5897:8;;;5733:178;;;;;:::o;4906:167::-;4964:7;4980:9;4996:1;4992;:5;4980:17;;5017:1;5012;:6;;5004:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5066:1;5059:8;;;4906:167;;;;:::o;17928:330::-;18019:1;18000:21;;:7;:21;;;;17992:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18089:68;18112:6;18089:68;;;;;;;;;;;;;;;;;:9;:18;18099:7;18089:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;18068:9;:18;18078:7;18068:18;;;;;;;;;;;;;;;:89;;;;18179:24;18196:6;18179:12;;:16;;:24;;;;:::i;:::-;18164:12;:39;;;;18241:1;18215:37;;18224:7;18215:37;;;18245:6;18215:37;;;;;;;;;;;;;;;;;;17928:330;;:::o;17330:290::-;17421:1;17402:21;;:7;:21;;;;17394:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17483:24;17500:6;17483:12;;:16;;:24;;;;:::i;:::-;17468:12;:39;;;;17535:30;17558:6;17535:9;:18;17545:7;17535:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;17514:9;:18;17524:7;17514:18;;;;;;;;;;;;;;;:51;;;;17598:7;17577:37;;17594:1;17577:37;;;17607:6;17577:37;;;;;;;;;;;;;;;;;;17330:290;;:::o;11155:215::-;11245:1;11225:22;;:8;:22;;;;11217:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11331:8;11302:38;;11323:6;;;;;;;;;;;11302:38;;;;;;;;;;;;11356:8;11347:6;;:17;;;;;;;;;;;;;;;;;;11155:215;:::o;5328:130::-;5386:7;5409:43;5413:1;5416;5409:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5402:50;;5328:130;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1552600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1076",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(uint256)": "infinite",
								"decimals()": "1173",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24408",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "MSTORE"
								},
								{
									"begin": 11704,
									"end": 11949,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11704,
									"end": 11949,
									"name": "POP"
								},
								{
									"begin": 9886,
									"end": 9903,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9906,
									"end": 9916,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9906,
									"end": 9916,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9906,
									"end": 9916,
									"name": "SHL"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "SHR"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "JUMPDEST"
								},
								{
									"begin": 9886,
									"end": 9918,
									"name": "SWAP1"
								},
								{
									"begin": 9886,
									"end": 9918,
									"name": "POP"
								},
								{
									"begin": 9934,
									"end": 9943,
									"name": "DUP1"
								},
								{
									"begin": 9925,
									"end": 9931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9925,
									"end": 9931,
									"name": "DUP1"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "EXP"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "DUP2"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SLOAD"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "DUP2"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "MUL"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "NOT"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "AND"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SWAP1"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "DUP4"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "AND"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "MUL"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "OR"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SWAP1"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SSTORE"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "POP"
								},
								{
									"begin": 9988,
									"end": 9997,
									"name": "DUP1"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "AND"
								},
								{
									"begin": 9984,
									"end": 9985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "AND"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "MLOAD"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "MLOAD"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "DUP1"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "SWAP2"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "SUB"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "SWAP1"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "LOG3"
								},
								{
									"begin": 9855,
									"end": 10004,
									"name": "POP"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "MLOAD"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "DUP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "ADD"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "MSTORE"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "DUP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "DUP2"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "MSTORE"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "ADD"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "4245503230544F4B454E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "DUP2"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "MSTORE"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "POP"
								},
								{
									"begin": 11732,
									"end": 11737,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "SWAP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "DUP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "MLOAD"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "SWAP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "ADD"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "SWAP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "SWAP3"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "SWAP2"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "SWAP1"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "JUMPDEST"
								},
								{
									"begin": 11732,
									"end": 11752,
									"name": "POP"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "MLOAD"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "DUP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "ADD"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "MSTORE"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "DUP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "DUP2"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "MSTORE"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "ADD"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "4245503230544F4B454E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "DUP2"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "MSTORE"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "POP"
								},
								{
									"begin": 11759,
									"end": 11766,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "SWAP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "DUP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "MLOAD"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "SWAP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "ADD"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "SWAP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "SWAP3"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "SWAP2"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "SWAP1"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "JUMPDEST"
								},
								{
									"begin": 11759,
									"end": 11781,
									"name": "POP"
								},
								{
									"begin": 11800,
									"end": 11802,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11788,
									"end": 11797,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11788,
									"end": 11797,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "EXP"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "DUP2"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "SLOAD"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "DUP2"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "MUL"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "NOT"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "AND"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "SWAP1"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "DUP4"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "AND"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "MUL"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "OR"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "SWAP1"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "SSTORE"
								},
								{
									"begin": 11788,
									"end": 11802,
									"name": "POP"
								},
								{
									"begin": 11824,
									"end": 11840,
									"name": "PUSH",
									"value": "1DC74BE914D16AA400000"
								},
								{
									"begin": 11809,
									"end": 11821,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11809,
									"end": 11840,
									"name": "DUP2"
								},
								{
									"begin": 11809,
									"end": 11840,
									"name": "SWAP1"
								},
								{
									"begin": 11809,
									"end": 11840,
									"name": "SSTORE"
								},
								{
									"begin": 11809,
									"end": 11840,
									"name": "POP"
								},
								{
									"begin": 11871,
									"end": 11883,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11871,
									"end": 11883,
									"name": "SLOAD"
								},
								{
									"begin": 11847,
									"end": 11856,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11857,
									"end": 11867,
									"name": "CALLER"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "AND"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "AND"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "DUP2"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "MSTORE"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "ADD"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "SWAP1"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "DUP2"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "MSTORE"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "ADD"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11847,
									"end": 11868,
									"name": "KECCAK256"
								},
								{
									"begin": 11847,
									"end": 11883,
									"name": "DUP2"
								},
								{
									"begin": 11847,
									"end": 11883,
									"name": "SWAP1"
								},
								{
									"begin": 11847,
									"end": 11883,
									"name": "SSTORE"
								},
								{
									"begin": 11847,
									"end": 11883,
									"name": "POP"
								},
								{
									"begin": 11918,
									"end": 11928,
									"name": "CALLER"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "AND"
								},
								{
									"begin": 11914,
									"end": 11915,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "AND"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11930,
									"end": 11942,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11930,
									"end": 11942,
									"name": "SLOAD"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "MLOAD"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "DUP1"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "DUP3"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "DUP2"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "MSTORE"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "ADD"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "SWAP2"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "POP"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "POP"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "MLOAD"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "DUP1"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "SWAP2"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "SUB"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "SWAP1"
								},
								{
									"begin": 11897,
									"end": 11943,
									"name": "LOG3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "JUMPDEST"
								},
								{
									"begin": 3819,
									"end": 3834,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3850,
									"end": 3860,
									"name": "CALLER"
								},
								{
									"begin": 3843,
									"end": 3860,
									"name": "SWAP1"
								},
								{
									"begin": 3843,
									"end": 3860,
									"name": "POP"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "SWAP1"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SLOAD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "AND"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "MUL"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SUB"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "AND"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DIV"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "MSTORE"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "KECCAK256"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DIV"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "LT"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "MLOAD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "NOT"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "AND"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP4"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "OR"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP6"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP6"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "GT"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "MLOAD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "GT"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "CODECOPY"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 19387,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582053551e6671496b2f998197486338f00c4c5b2d768cd979e1a7bc582b17f6f4fb64736f6c63430005100032",
									".code": [
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "MSTORE"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "POP"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "LT"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "SHR"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "GT"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "GT"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMP"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMP"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "GT"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMP"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 19387,
											"name": "REVERT"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMPDEST"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMPDEST"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MLOAD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SUB"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MLOAD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MLOAD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "AND"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "ISZERO"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMPI"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SUB"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MLOAD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SUB"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "EXP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SUB"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "NOT"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "AND"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMPDEST"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP3"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "MLOAD"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SUB"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "RETURN"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "JUMPDEST"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "AND"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP3"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP3"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "JUMPDEST"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "MLOAD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP3"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ISZERO"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "MSTORE"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "ADD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "MLOAD"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SUB"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "RETURN"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "JUMPDEST"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "JUMPDEST"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "MLOAD"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "DUP1"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "DUP3"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "DUP2"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "MSTORE"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "ADD"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "SWAP2"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "POP"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "POP"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "MLOAD"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "DUP1"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "SWAP2"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "SUB"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "SWAP1"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "RETURN"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "JUMPDEST"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ADD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "AND"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ADD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP3"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "AND"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ADD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP3"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ADD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP3"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "JUMPDEST"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "MLOAD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP3"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ISZERO"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ISZERO"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ISZERO"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ISZERO"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "MSTORE"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "ADD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "MLOAD"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "DUP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP2"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SUB"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "RETURN"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "JUMPDEST"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "JUMPDEST"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "DUP3"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "AND"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "AND"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "MSTORE"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "SWAP2"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "SWAP2"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "SUB"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "RETURN"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "JUMPDEST"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "JUMPDEST"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "MLOAD"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "DUP1"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "DUP3"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "AND"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "AND"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "DUP2"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "MSTORE"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "ADD"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SWAP2"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "POP"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "POP"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "MLOAD"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "DUP1"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SWAP2"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SUB"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SWAP1"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "RETURN"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "JUMPDEST"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ADD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "AND"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ADD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP3"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ADD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP3"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "JUMPDEST"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "MLOAD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP3"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ISZERO"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ISZERO"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ISZERO"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ISZERO"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "MSTORE"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "ADD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "MLOAD"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SUB"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "RETURN"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "JUMPDEST"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP2"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ADD"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ADD"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP3"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP2"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "JUMPDEST"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "MLOAD"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP3"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ISZERO"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ISZERO"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ISZERO"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ISZERO"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP2"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "MSTORE"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "ADD"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP2"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "MLOAD"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "DUP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP2"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SUB"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "RETURN"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "JUMPDEST"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP2"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "ADD"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "AND"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "ADD"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP3"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP2"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "JUMPDEST"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "MLOAD"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP3"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP2"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "MSTORE"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "ADD"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP2"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "MLOAD"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "DUP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP2"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SUB"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "RETURN"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "STOP"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "JUMPDEST"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "JUMPDEST"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "MLOAD"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "DUP3"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "AND"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "AND"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "DUP2"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "MSTORE"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "SWAP2"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "POP"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "POP"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "MLOAD"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "SWAP2"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "SUB"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "RETURN"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMPDEST"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMPDEST"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "MLOAD"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP3"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "AND"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "AND"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP2"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "MSTORE"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "ADD"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP2"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "POP"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "POP"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "MLOAD"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP2"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SUB"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "RETURN"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMPDEST"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMPDEST"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "ADD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP3"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SUB"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP3"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MSTORE"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP4"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MSTORE"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "ADD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "ADD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP4"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "ADD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "AND"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "ISZERO"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMPI"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP3"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SUB"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP4"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SUB"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "EXP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SUB"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "NOT"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "AND"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MSTORE"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "ADD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMPDEST"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP3"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "DUP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP2"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SUB"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "RETURN"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "JUMPDEST"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP2"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ADD"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ADD"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP3"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP2"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "JUMPDEST"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "MLOAD"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP3"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ISZERO"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ISZERO"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ISZERO"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ISZERO"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP2"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "MSTORE"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "ADD"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP2"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "MLOAD"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "DUP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP2"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SUB"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "RETURN"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "JUMPDEST"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ADD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "AND"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ADD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP3"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ADD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP3"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "JUMPDEST"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "MLOAD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP3"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ISZERO"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ISZERO"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ISZERO"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ISZERO"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "MSTORE"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "ADD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "MLOAD"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "DUP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SUB"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP1"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "RETURN"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "JUMPDEST"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ADD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "AND"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ADD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP3"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ADD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP3"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "JUMPDEST"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "MLOAD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP3"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ISZERO"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ISZERO"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ISZERO"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ISZERO"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "MSTORE"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "ADD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "MLOAD"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "DUP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SUB"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "RETURN"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ISZERO"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPI"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "EXP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "NOT"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "RETURN"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ISZERO"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPI"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "EXP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "NOT"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "RETURN"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "JUMPDEST"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "ADD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "AND"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "ADD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP3"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "AND"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "ADD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP3"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "JUMPDEST"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "MLOAD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP3"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "MSTORE"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "ADD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "MLOAD"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "DUP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SUB"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP1"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "RETURN"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP2"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "ADD"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "AND"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "ADD"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP3"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP2"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "STOP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMPDEST"
										},
										{
											"begin": 12458,
											"end": 12471,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12487,
											"end": 12492,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SLOAD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "AND"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ISZERO"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MUL"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SUB"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "AND"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DIV"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DIV"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MUL"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MLOAD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MSTORE"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP3"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MSTORE"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP3"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SLOAD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "AND"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ISZERO"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MUL"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SUB"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "AND"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DIV"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ISZERO"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMPI"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "LT"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMPI"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP4"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SLOAD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DIV"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MUL"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP4"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MSTORE"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMP"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMPDEST"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP3"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MSTORE"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "KECCAK256"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMPDEST"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SLOAD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "MSTORE"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP4"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "GT"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMPI"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP3"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SUB"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "AND"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "DUP3"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "ADD"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP2"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "JUMPDEST"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "POP"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "POP"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "POP"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "POP"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "POP"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "SWAP1"
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12498,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "JUMPDEST"
										},
										{
											"begin": 13527,
											"end": 13531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13540,
											"end": 13579,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 13549,
											"end": 13561,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13549,
											"end": 13559,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13549,
											"end": 13561,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13549,
											"end": 13561,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 13549,
											"end": 13561,
											"name": "JUMPDEST"
										},
										{
											"begin": 13563,
											"end": 13570,
											"name": "DUP5"
										},
										{
											"begin": 13572,
											"end": 13578,
											"name": "DUP5"
										},
										{
											"begin": 13540,
											"end": 13548,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13540,
											"end": 13579,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13540,
											"end": 13579,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 13540,
											"end": 13579,
											"name": "JUMPDEST"
										},
										{
											"begin": 13593,
											"end": 13597,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13586,
											"end": 13597,
											"name": "SWAP1"
										},
										{
											"begin": 13586,
											"end": 13597,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP3"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "SWAP2"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "POP"
										},
										{
											"begin": 13459,
											"end": 13603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "JUMPDEST"
										},
										{
											"begin": 12600,
											"end": 12607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12635,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12623,
											"end": 12635,
											"name": "SLOAD"
										},
										{
											"begin": 12616,
											"end": 12635,
											"name": "SWAP1"
										},
										{
											"begin": 12616,
											"end": 12635,
											"name": "POP"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "SWAP1"
										},
										{
											"begin": 12554,
											"end": 12641,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "JUMPDEST"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14188,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 14162,
											"end": 14168,
											"name": "DUP5"
										},
										{
											"begin": 14170,
											"end": 14179,
											"name": "DUP5"
										},
										{
											"begin": 14181,
											"end": 14187,
											"name": "DUP5"
										},
										{
											"begin": 14152,
											"end": 14161,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 14152,
											"end": 14188,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14152,
											"end": 14188,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 14152,
											"end": 14188,
											"name": "JUMPDEST"
										},
										{
											"begin": 14195,
											"end": 14316,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 14204,
											"end": 14210,
											"name": "DUP5"
										},
										{
											"begin": 14212,
											"end": 14224,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 14212,
											"end": 14222,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14212,
											"end": 14224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14212,
											"end": 14224,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 14212,
											"end": 14224,
											"name": "JUMPDEST"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 14264,
											"end": 14270,
											"name": "DUP6"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "MLOAD"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "DUP1"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "DUP1"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "SWAP2"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "CODECOPY"
										},
										{
											"begin": 14226,
											"end": 14237,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14244,
											"name": "DUP12"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "SWAP1"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "KECCAK256"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14258,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 14246,
											"end": 14256,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14246,
											"end": 14258,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14246,
											"end": 14258,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 14246,
											"end": 14258,
											"name": "JUMPDEST"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "SWAP1"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "KECCAK256"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "SLOAD"
										},
										{
											"begin": 14226,
											"end": 14263,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14226,
											"end": 14263,
											"name": "SWAP1"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "SWAP3"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "SWAP2"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "SWAP1"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 14226,
											"end": 14315,
											"name": "JUMPDEST"
										},
										{
											"begin": 14195,
											"end": 14203,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14195,
											"end": 14316,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14195,
											"end": 14316,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 14195,
											"end": 14316,
											"name": "JUMPDEST"
										},
										{
											"begin": 14330,
											"end": 14334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14323,
											"end": 14334,
											"name": "SWAP1"
										},
										{
											"begin": 14323,
											"end": 14334,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP4"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "SWAP3"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "POP"
										},
										{
											"begin": 14048,
											"end": 14340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "JUMPDEST"
										},
										{
											"begin": 12190,
											"end": 12195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "SWAP1"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "SLOAD"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "SWAP1"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "EXP"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "SWAP1"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "DIV"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "AND"
										},
										{
											"begin": 12204,
											"end": 12220,
											"name": "SWAP1"
										},
										{
											"begin": 12204,
											"end": 12220,
											"name": "POP"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12147,
											"end": 12226,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "JUMPDEST"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SWAP1"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SLOAD"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SWAP1"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "EXP"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "SWAP1"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "DIV"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "AND"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "DUP2"
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "JUMPDEST"
										},
										{
											"begin": 14802,
											"end": 14806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14815,
											"end": 14898,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14824,
											"end": 14836,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 14824,
											"end": 14834,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14824,
											"end": 14836,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14824,
											"end": 14836,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 14824,
											"end": 14836,
											"name": "JUMPDEST"
										},
										{
											"begin": 14838,
											"end": 14845,
											"name": "DUP5"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 14886,
											"end": 14896,
											"name": "DUP6"
										},
										{
											"begin": 14847,
											"end": 14858,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 14871,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 14859,
											"end": 14869,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14859,
											"end": 14871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14859,
											"end": 14871,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 14859,
											"end": 14871,
											"name": "JUMPDEST"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "AND"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "AND"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "DUP2"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "MSTORE"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "ADD"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "SWAP1"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "DUP2"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "MSTORE"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "ADD"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "KECCAK256"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14873,
											"end": 14880,
											"name": "DUP10"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "AND"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "AND"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "DUP2"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "MSTORE"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "ADD"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "SWAP1"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "DUP2"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "MSTORE"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "ADD"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "KECCAK256"
										},
										{
											"begin": 14847,
											"end": 14881,
											"name": "SLOAD"
										},
										{
											"begin": 14847,
											"end": 14885,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 14847,
											"end": 14885,
											"name": "SWAP1"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "SWAP2"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "SWAP1"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "AND"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 14847,
											"end": 14897,
											"name": "JUMPDEST"
										},
										{
											"begin": 14815,
											"end": 14823,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14815,
											"end": 14898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14815,
											"end": 14898,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 14815,
											"end": 14898,
											"name": "JUMPDEST"
										},
										{
											"begin": 14912,
											"end": 14916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14905,
											"end": 14916,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14916,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP3"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "POP"
										},
										{
											"begin": 14722,
											"end": 14922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "JUMPDEST"
										},
										{
											"begin": 16096,
											"end": 16100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16136,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 16115,
											"end": 16127,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 16115,
											"end": 16125,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 16115,
											"end": 16127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16115,
											"end": 16127,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 16115,
											"end": 16127,
											"name": "JUMPDEST"
										},
										{
											"begin": 16129,
											"end": 16135,
											"name": "DUP4"
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 16109,
											"end": 16136,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16109,
											"end": 16136,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 16109,
											"end": 16136,
											"name": "JUMPDEST"
										},
										{
											"begin": 16150,
											"end": 16154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16143,
											"end": 16154,
											"name": "SWAP1"
										},
										{
											"begin": 16143,
											"end": 16154,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP2"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16160,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "JUMPDEST"
										},
										{
											"begin": 12754,
											"end": 12761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "DUP4"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "AND"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "AND"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "DUP2"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "MSTORE"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "ADD"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "SWAP1"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "DUP2"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "MSTORE"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "ADD"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "KECCAK256"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "SLOAD"
										},
										{
											"begin": 12770,
											"end": 12795,
											"name": "SWAP1"
										},
										{
											"begin": 12770,
											"end": 12795,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP2"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "SWAP1"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "POP"
										},
										{
											"begin": 12695,
											"end": 12801,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 10281,
											"end": 10291,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMPDEST"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DUP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SLOAD"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "EXP"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DIV"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "EQ"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPI"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "REVERT"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPDEST"
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "AND"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "DUP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SWAP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SLOAD"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SWAP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "EXP"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SWAP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "DIV"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "AND"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "AND"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "MLOAD"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "MLOAD"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "DUP1"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "SWAP2"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "SUB"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "SWAP1"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "LOG3"
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "DUP1"
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "EXP"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "DUP2"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SLOAD"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "DUP2"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "MUL"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "NOT"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "AND"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SWAP1"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "DUP4"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "AND"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "MUL"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "OR"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SWAP1"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SSTORE"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "POP"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "JUMPDEST"
										},
										{
											"begin": 12052,
											"end": 12059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 12075,
											"end": 12080,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "JUMPDEST"
										},
										{
											"begin": 12068,
											"end": 12082,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12082,
											"name": "POP"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12088,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMPDEST"
										},
										{
											"begin": 10115,
											"end": 10122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SLOAD"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "EXP"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "DIV"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "AND"
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "POP"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMPDEST"
										},
										{
											"begin": 12324,
											"end": 12337,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12353,
											"end": 12360,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SLOAD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ISZERO"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MUL"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SUB"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DIV"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DIV"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MUL"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MLOAD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP3"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP3"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SLOAD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ISZERO"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MUL"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SUB"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DIV"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ISZERO"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMPI"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "LT"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMPI"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP4"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SLOAD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DIV"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MUL"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP4"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMP"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMPDEST"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP3"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "KECCAK256"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMPDEST"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SLOAD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP4"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "GT"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMPI"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP3"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SUB"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "DUP3"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP2"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "JUMPDEST"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "POP"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "POP"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "POP"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "POP"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "POP"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12346,
											"end": 12360,
											"name": "POP"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12366,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "JUMPDEST"
										},
										{
											"begin": 15901,
											"end": 15905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 10281,
											"end": 10291,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMPDEST"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DUP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SLOAD"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "EXP"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DIV"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "EQ"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPI"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "REVERT"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPDEST"
										},
										{
											"begin": 15914,
											"end": 15941,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 15920,
											"end": 15932,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 15920,
											"end": 15930,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15920,
											"end": 15932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15920,
											"end": 15932,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 15920,
											"end": 15932,
											"name": "JUMPDEST"
										},
										{
											"begin": 15934,
											"end": 15940,
											"name": "DUP4"
										},
										{
											"begin": 15914,
											"end": 15919,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 15914,
											"end": 15941,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15914,
											"end": 15941,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 15914,
											"end": 15941,
											"name": "JUMPDEST"
										},
										{
											"begin": 15955,
											"end": 15959,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15948,
											"end": 15959,
											"name": "SWAP1"
										},
										{
											"begin": 15948,
											"end": 15959,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP2"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "SWAP1"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15845,
											"end": 15965,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "JUMPDEST"
										},
										{
											"begin": 15479,
											"end": 15483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15492,
											"end": 15621,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 15501,
											"end": 15513,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 15501,
											"end": 15511,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15501,
											"end": 15513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15501,
											"end": 15513,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 15501,
											"end": 15513,
											"name": "JUMPDEST"
										},
										{
											"begin": 15515,
											"end": 15522,
											"name": "DUP5"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 15563,
											"end": 15578,
											"name": "DUP6"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "MLOAD"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "DUP1"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "ADD"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "MSTORE"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "DUP1"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "DUP2"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "MSTORE"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "ADD"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "SWAP2"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "CODECOPY"
										},
										{
											"begin": 15524,
											"end": 15535,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15536,
											"end": 15548,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15536,
											"end": 15546,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15536,
											"end": 15548,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15536,
											"end": 15548,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 15536,
											"end": 15548,
											"name": "JUMPDEST"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "AND"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "AND"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "DUP2"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "MSTORE"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "ADD"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "SWAP1"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "DUP2"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "MSTORE"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "ADD"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15524,
											"end": 15549,
											"name": "KECCAK256"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15550,
											"end": 15557,
											"name": "DUP11"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "AND"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "AND"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "DUP2"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "MSTORE"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "ADD"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "SWAP1"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "DUP2"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "MSTORE"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "ADD"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "KECCAK256"
										},
										{
											"begin": 15524,
											"end": 15558,
											"name": "SLOAD"
										},
										{
											"begin": 15524,
											"end": 15562,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 15524,
											"end": 15562,
											"name": "SWAP1"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "SWAP3"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "SWAP2"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "SWAP1"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "AND"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 15524,
											"end": 15620,
											"name": "JUMPDEST"
										},
										{
											"begin": 15492,
											"end": 15500,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 15492,
											"end": 15621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15492,
											"end": 15621,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 15492,
											"end": 15621,
											"name": "JUMPDEST"
										},
										{
											"begin": 15635,
											"end": 15639,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15628,
											"end": 15639,
											"name": "SWAP1"
										},
										{
											"begin": 15628,
											"end": 15639,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP3"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "SWAP2"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "POP"
										},
										{
											"begin": 15394,
											"end": 15645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "JUMPDEST"
										},
										{
											"begin": 13066,
											"end": 13070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13121,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 13089,
											"end": 13101,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 13089,
											"end": 13099,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13089,
											"end": 13101,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13089,
											"end": 13101,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 13089,
											"end": 13101,
											"name": "JUMPDEST"
										},
										{
											"begin": 13103,
											"end": 13112,
											"name": "DUP5"
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "DUP5"
										},
										{
											"begin": 13079,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13079,
											"end": 13121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13079,
											"end": 13121,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 13079,
											"end": 13121,
											"name": "JUMPDEST"
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13128,
											"end": 13139,
											"name": "SWAP1"
										},
										{
											"begin": 13128,
											"end": 13139,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP3"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "SWAP2"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 12995,
											"end": 13145,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ISZERO"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MUL"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DIV"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DIV"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MUL"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ISZERO"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MUL"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DIV"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ISZERO"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPI"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "LT"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPI"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DIV"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MUL"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "KECCAK256"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SLOAD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "MSTORE"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "GT"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPI"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP1"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SUB"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP3"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "ADD"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "SWAP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "DUP2"
										},
										{
											"begin": 11652,
											"end": 11673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ISZERO"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MUL"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DIV"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DIV"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MUL"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ISZERO"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MUL"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DIV"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ISZERO"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPI"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "LT"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPI"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DIV"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MUL"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "KECCAK256"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SLOAD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "MSTORE"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "GT"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPI"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP1"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SUB"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "AND"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP3"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "ADD"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "DUP2"
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "JUMPDEST"
										},
										{
											"begin": 13273,
											"end": 13280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13307,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13308,
											"end": 13313,
											"name": "DUP5"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "AND"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "AND"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "DUP2"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "MSTORE"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "ADD"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "SWAP1"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "DUP2"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "MSTORE"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "ADD"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "KECCAK256"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13315,
											"end": 13322,
											"name": "DUP4"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "AND"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "AND"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "DUP2"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "MSTORE"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "ADD"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "SWAP1"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "DUP2"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "MSTORE"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "ADD"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "KECCAK256"
										},
										{
											"begin": 13296,
											"end": 13323,
											"name": "SLOAD"
										},
										{
											"begin": 13289,
											"end": 13323,
											"name": "SWAP1"
										},
										{
											"begin": 13289,
											"end": 13323,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP3"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "SWAP2"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "POP"
										},
										{
											"begin": 13199,
											"end": 13329,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 10281,
											"end": 10291,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMPDEST"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DUP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SLOAD"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "EXP"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DIV"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "EQ"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPI"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "REVERT"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPDEST"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 11042,
											"end": 11050,
											"name": "DUP2"
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "JUMPDEST"
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3860,
											"name": "CALLER"
										},
										{
											"begin": 3843,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3843,
											"end": 3860,
											"name": "POP"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18670,
											"end": 18990,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18670,
											"end": 18990,
											"name": "JUMPDEST"
										},
										{
											"begin": 18777,
											"end": 18778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "AND"
										},
										{
											"begin": 18760,
											"end": 18765,
											"name": "DUP4"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "AND"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "EQ"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "ISZERO"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "JUMPI"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "MLOAD"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP2"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "MSTORE"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "ADD"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP1"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP1"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "ADD"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP3"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP2"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "SUB"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP3"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "MSTORE"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP2"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "MSTORE"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "ADD"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP1"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "SWAP2"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "CODECOPY"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "ADD"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "SWAP2"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "POP"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "POP"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "MLOAD"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "DUP1"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "SWAP2"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "SUB"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "SWAP1"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "REVERT"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 18752,
											"end": 18820,
											"name": "JUMPDEST"
										},
										{
											"begin": 18854,
											"end": 18855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18835,
											"end": 18856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18835,
											"end": 18856,
											"name": "AND"
										},
										{
											"begin": 18835,
											"end": 18842,
											"name": "DUP3"
										},
										{
											"begin": 18835,
											"end": 18856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18835,
											"end": 18856,
											"name": "AND"
										},
										{
											"begin": 18835,
											"end": 18856,
											"name": "EQ"
										},
										{
											"begin": 18835,
											"end": 18856,
											"name": "ISZERO"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "JUMPI"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "MLOAD"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP2"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "MSTORE"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "ADD"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP1"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP1"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "ADD"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP3"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP2"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "SUB"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP3"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "MSTORE"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP2"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "MSTORE"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "ADD"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP1"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "SWAP2"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "CODECOPY"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "ADD"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "SWAP2"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "POP"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "POP"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "MLOAD"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "DUP1"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "SWAP2"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "SUB"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "SWAP1"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "REVERT"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 18827,
											"end": 18895,
											"name": "JUMPDEST"
										},
										{
											"begin": 18934,
											"end": 18940,
											"name": "DUP1"
										},
										{
											"begin": 18904,
											"end": 18915,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18916,
											"end": 18921,
											"name": "DUP6"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "AND"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "AND"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "DUP2"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "MSTORE"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "ADD"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "SWAP1"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "DUP2"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "MSTORE"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "ADD"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18904,
											"end": 18922,
											"name": "KECCAK256"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18930,
											"name": "DUP5"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "AND"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "AND"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "DUP2"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "MSTORE"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "ADD"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "SWAP1"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "DUP2"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "MSTORE"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "ADD"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18904,
											"end": 18931,
											"name": "KECCAK256"
										},
										{
											"begin": 18904,
											"end": 18940,
											"name": "DUP2"
										},
										{
											"begin": 18904,
											"end": 18940,
											"name": "SWAP1"
										},
										{
											"begin": 18904,
											"end": 18940,
											"name": "SSTORE"
										},
										{
											"begin": 18904,
											"end": 18940,
											"name": "POP"
										},
										{
											"begin": 18968,
											"end": 18975,
											"name": "DUP2"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "AND"
										},
										{
											"begin": 18961,
											"end": 18966,
											"name": "DUP4"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "AND"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18977,
											"end": 18983,
											"name": "DUP4"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "MLOAD"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "DUP1"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "DUP3"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "DUP2"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "MSTORE"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "ADD"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "SWAP2"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "POP"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "POP"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "MLOAD"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "DUP1"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "SWAP2"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "SUB"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "SWAP1"
										},
										{
											"begin": 18952,
											"end": 18984,
											"name": "LOG3"
										},
										{
											"begin": 18670,
											"end": 18990,
											"name": "POP"
										},
										{
											"begin": 18670,
											"end": 18990,
											"name": "POP"
										},
										{
											"begin": 18670,
											"end": 18990,
											"name": "POP"
										},
										{
											"begin": 18670,
											"end": 18990,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16620,
											"end": 17069,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 16620,
											"end": 17069,
											"name": "JUMPDEST"
										},
										{
											"begin": 16732,
											"end": 16733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16720,
											"name": "DUP4"
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "EQ"
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "ISZERO"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "JUMPI"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP3"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP3"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "CODECOPY"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "REVERT"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 16706,
											"end": 16776,
											"name": "JUMPDEST"
										},
										{
											"begin": 16812,
											"end": 16813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16791,
											"end": 16814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16791,
											"end": 16814,
											"name": "AND"
										},
										{
											"begin": 16791,
											"end": 16800,
											"name": "DUP3"
										},
										{
											"begin": 16791,
											"end": 16814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16791,
											"end": 16814,
											"name": "AND"
										},
										{
											"begin": 16791,
											"end": 16814,
											"name": "EQ"
										},
										{
											"begin": 16791,
											"end": 16814,
											"name": "ISZERO"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "JUMPI"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "MLOAD"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "MSTORE"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "ADD"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP1"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP1"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "ADD"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP3"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "SUB"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP3"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "MSTORE"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "MSTORE"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "ADD"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP1"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "SWAP2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "CODECOPY"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "ADD"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "SWAP2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "POP"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "POP"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "MLOAD"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "DUP1"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "SWAP2"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "SUB"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "SWAP1"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "REVERT"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 16783,
											"end": 16854,
											"name": "JUMPDEST"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16905,
											"end": 16911,
											"name": "DUP2"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "MLOAD"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "DUP1"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "ADD"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "MSTORE"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "DUP1"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "DUP2"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "MSTORE"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "ADD"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "SWAP2"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "CODECOPY"
										},
										{
											"begin": 16883,
											"end": 16892,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16893,
											"end": 16899,
											"name": "DUP8"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "AND"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "AND"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "DUP2"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "MSTORE"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "ADD"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "SWAP1"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "DUP2"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "MSTORE"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "ADD"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "KECCAK256"
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "SLOAD"
										},
										{
											"begin": 16883,
											"end": 16904,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 16883,
											"end": 16904,
											"name": "SWAP1"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "SWAP3"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "SWAP2"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "SWAP1"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "AND"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16883,
											"end": 16954,
											"name": "JUMPDEST"
										},
										{
											"begin": 16863,
											"end": 16872,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16873,
											"end": 16879,
											"name": "DUP6"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "AND"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "AND"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "DUP2"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "MSTORE"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "ADD"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "SWAP1"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "DUP2"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "MSTORE"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "ADD"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16863,
											"end": 16880,
											"name": "KECCAK256"
										},
										{
											"begin": 16863,
											"end": 16954,
											"name": "DUP2"
										},
										{
											"begin": 16863,
											"end": 16954,
											"name": "SWAP1"
										},
										{
											"begin": 16863,
											"end": 16954,
											"name": "SSTORE"
										},
										{
											"begin": 16863,
											"end": 16954,
											"name": "POP"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 17009,
											"end": 17015,
											"name": "DUP2"
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16994,
											"end": 17003,
											"name": "DUP6"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "AND"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "AND"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "DUP2"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "MSTORE"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "ADD"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "SWAP1"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "DUP2"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "MSTORE"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "ADD"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "KECCAK256"
										},
										{
											"begin": 16984,
											"end": 17004,
											"name": "SLOAD"
										},
										{
											"begin": 16984,
											"end": 17008,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16984,
											"end": 17008,
											"name": "SWAP1"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "SWAP2"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "SWAP1"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "AND"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16984,
											"end": 17016,
											"name": "JUMPDEST"
										},
										{
											"begin": 16961,
											"end": 16970,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16971,
											"end": 16980,
											"name": "DUP5"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "AND"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "AND"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "DUP2"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "MSTORE"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "ADD"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "SWAP1"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "DUP2"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "MSTORE"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "ADD"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16961,
											"end": 16981,
											"name": "KECCAK256"
										},
										{
											"begin": 16961,
											"end": 17016,
											"name": "DUP2"
										},
										{
											"begin": 16961,
											"end": 17016,
											"name": "SWAP1"
										},
										{
											"begin": 16961,
											"end": 17016,
											"name": "SSTORE"
										},
										{
											"begin": 16961,
											"end": 17016,
											"name": "POP"
										},
										{
											"begin": 17045,
											"end": 17054,
											"name": "DUP2"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "AND"
										},
										{
											"begin": 17037,
											"end": 17043,
											"name": "DUP4"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "AND"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17056,
											"end": 17062,
											"name": "DUP4"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "MLOAD"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "DUP1"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "DUP3"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "DUP2"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "MSTORE"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "ADD"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "SWAP2"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "POP"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "POP"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "MLOAD"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "DUP1"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "SWAP2"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "SUB"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "SWAP1"
										},
										{
											"begin": 17028,
											"end": 17063,
											"name": "LOG3"
										},
										{
											"begin": 16620,
											"end": 17069,
											"name": "POP"
										},
										{
											"begin": 16620,
											"end": 17069,
											"name": "POP"
										},
										{
											"begin": 16620,
											"end": 17069,
											"name": "POP"
										},
										{
											"begin": 16620,
											"end": 17069,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "JUMPDEST"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "DUP4"
										},
										{
											"begin": 5843,
											"end": 5844,
											"name": "DUP4"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "GT"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "ISZERO"
										},
										{
											"begin": 5851,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPI"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "AND"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ISZERO"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPI"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "EXP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "NOT"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "AND"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPDEST"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "REVERT"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPDEST"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "DUP4"
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "DUP6"
										},
										{
											"begin": 5883,
											"end": 5888,
											"name": "SUB"
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "SWAP1"
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "DUP1"
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "SWAP2"
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "POP"
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "SWAP4"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "SWAP3"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "JUMPDEST"
										},
										{
											"begin": 4964,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4989,
											"name": "DUP1"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP3"
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "DUP5"
										},
										{
											"begin": 4992,
											"end": 4997,
											"name": "ADD"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "SWAP1"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "POP"
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "DUP4"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP2"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "LT"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "ISZERO"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "JUMPI"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MLOAD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP3"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SUB"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP3"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SWAP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MLOAD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SWAP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SUB"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "REVERT"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "JUMPDEST"
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "DUP1"
										},
										{
											"begin": 5059,
											"end": 5067,
											"name": "SWAP2"
										},
										{
											"begin": 5059,
											"end": 5067,
											"name": "POP"
										},
										{
											"begin": 5059,
											"end": 5067,
											"name": "POP"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "SWAP3"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "SWAP2"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "POP"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "POP"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17928,
											"end": 18258,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17928,
											"end": 18258,
											"name": "JUMPDEST"
										},
										{
											"begin": 18019,
											"end": 18020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18000,
											"end": 18021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18000,
											"end": 18021,
											"name": "AND"
										},
										{
											"begin": 18000,
											"end": 18007,
											"name": "DUP3"
										},
										{
											"begin": 18000,
											"end": 18021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18000,
											"end": 18021,
											"name": "AND"
										},
										{
											"begin": 18000,
											"end": 18021,
											"name": "EQ"
										},
										{
											"begin": 18000,
											"end": 18021,
											"name": "ISZERO"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "JUMPI"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "MLOAD"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP2"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "MSTORE"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "ADD"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP1"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP1"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "ADD"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP3"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP2"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "SUB"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP3"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "MSTORE"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP2"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "MSTORE"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "ADD"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP1"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "SWAP2"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "CODECOPY"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "ADD"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "SWAP2"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "POP"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "POP"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "MLOAD"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "DUP1"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "SWAP2"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "SUB"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "SWAP1"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "REVERT"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "JUMPDEST"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 18112,
											"end": 18118,
											"name": "DUP2"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "MLOAD"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "DUP1"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "ADD"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "MSTORE"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "DUP1"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "DUP2"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "MSTORE"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "ADD"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "SWAP2"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "CODECOPY"
										},
										{
											"begin": 18089,
											"end": 18098,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18099,
											"end": 18106,
											"name": "DUP7"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "AND"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "AND"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "DUP2"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "MSTORE"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "ADD"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "SWAP1"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "DUP2"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "MSTORE"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "ADD"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "KECCAK256"
										},
										{
											"begin": 18089,
											"end": 18107,
											"name": "SLOAD"
										},
										{
											"begin": 18089,
											"end": 18111,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 18089,
											"end": 18111,
											"name": "SWAP1"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "SWAP3"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "SWAP2"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "SWAP1"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "AND"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 18089,
											"end": 18157,
											"name": "JUMPDEST"
										},
										{
											"begin": 18068,
											"end": 18077,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18078,
											"end": 18085,
											"name": "DUP5"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "AND"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "AND"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP2"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "MSTORE"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "ADD"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "SWAP1"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP2"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "MSTORE"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "ADD"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "KECCAK256"
										},
										{
											"begin": 18068,
											"end": 18157,
											"name": "DUP2"
										},
										{
											"begin": 18068,
											"end": 18157,
											"name": "SWAP1"
										},
										{
											"begin": 18068,
											"end": 18157,
											"name": "SSTORE"
										},
										{
											"begin": 18068,
											"end": 18157,
											"name": "POP"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 18196,
											"end": 18202,
											"name": "DUP2"
										},
										{
											"begin": 18179,
											"end": 18191,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18179,
											"end": 18191,
											"name": "SLOAD"
										},
										{
											"begin": 18179,
											"end": 18195,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 18179,
											"end": 18195,
											"name": "SWAP1"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "SWAP2"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "SWAP1"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "AND"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 18179,
											"end": 18203,
											"name": "JUMPDEST"
										},
										{
											"begin": 18164,
											"end": 18176,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18164,
											"end": 18203,
											"name": "DUP2"
										},
										{
											"begin": 18164,
											"end": 18203,
											"name": "SWAP1"
										},
										{
											"begin": 18164,
											"end": 18203,
											"name": "SSTORE"
										},
										{
											"begin": 18164,
											"end": 18203,
											"name": "POP"
										},
										{
											"begin": 18241,
											"end": 18242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "AND"
										},
										{
											"begin": 18224,
											"end": 18231,
											"name": "DUP3"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "AND"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18245,
											"end": 18251,
											"name": "DUP4"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "MLOAD"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "DUP1"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "DUP3"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "DUP2"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "MSTORE"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "ADD"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "SWAP2"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "POP"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "POP"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "MLOAD"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "DUP1"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "SWAP2"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "SUB"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "SWAP1"
										},
										{
											"begin": 18215,
											"end": 18252,
											"name": "LOG3"
										},
										{
											"begin": 17928,
											"end": 18258,
											"name": "POP"
										},
										{
											"begin": 17928,
											"end": 18258,
											"name": "POP"
										},
										{
											"begin": 17928,
											"end": 18258,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17330,
											"end": 17620,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 17330,
											"end": 17620,
											"name": "JUMPDEST"
										},
										{
											"begin": 17421,
											"end": 17422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "AND"
										},
										{
											"begin": 17402,
											"end": 17409,
											"name": "DUP3"
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "AND"
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "EQ"
										},
										{
											"begin": 17402,
											"end": 17423,
											"name": "ISZERO"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "JUMPI"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "MLOAD"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP3"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "SUB"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP3"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP2"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "MSTORE"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "POP"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "ADD"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "SWAP2"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "POP"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "POP"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "MLOAD"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "DUP1"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "SWAP2"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "SUB"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "SWAP1"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "REVERT"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 17394,
											"end": 17459,
											"name": "JUMPDEST"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 17500,
											"end": 17506,
											"name": "DUP2"
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "SLOAD"
										},
										{
											"begin": 17483,
											"end": 17499,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 17483,
											"end": 17499,
											"name": "SWAP1"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "SWAP2"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "SWAP1"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "AND"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 17483,
											"end": 17507,
											"name": "JUMPDEST"
										},
										{
											"begin": 17468,
											"end": 17480,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17468,
											"end": 17507,
											"name": "DUP2"
										},
										{
											"begin": 17468,
											"end": 17507,
											"name": "SWAP1"
										},
										{
											"begin": 17468,
											"end": 17507,
											"name": "SSTORE"
										},
										{
											"begin": 17468,
											"end": 17507,
											"name": "POP"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 17558,
											"end": 17564,
											"name": "DUP2"
										},
										{
											"begin": 17535,
											"end": 17544,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "DUP6"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "AND"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "AND"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "DUP2"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "MSTORE"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "ADD"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "SWAP1"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "DUP2"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "MSTORE"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "ADD"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "KECCAK256"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "SLOAD"
										},
										{
											"begin": 17535,
											"end": 17557,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 17535,
											"end": 17557,
											"name": "SWAP1"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "SWAP2"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "SWAP1"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "AND"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 17535,
											"end": 17565,
											"name": "JUMPDEST"
										},
										{
											"begin": 17514,
											"end": 17523,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17524,
											"end": 17531,
											"name": "DUP5"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "AND"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "AND"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "DUP2"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "MSTORE"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "ADD"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "SWAP1"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "DUP2"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "MSTORE"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "ADD"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "KECCAK256"
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "DUP2"
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "SWAP1"
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "SSTORE"
										},
										{
											"begin": 17514,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17598,
											"end": 17605,
											"name": "DUP2"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "AND"
										},
										{
											"begin": 17594,
											"end": 17595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "AND"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP4"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "MLOAD"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "DUP1"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "DUP3"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "DUP2"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "MSTORE"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "ADD"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "SWAP2"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "POP"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "POP"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "MLOAD"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "DUP1"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "SWAP2"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "SUB"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "SWAP1"
										},
										{
											"begin": 17577,
											"end": 17614,
											"name": "LOG3"
										},
										{
											"begin": 17330,
											"end": 17620,
											"name": "POP"
										},
										{
											"begin": 17330,
											"end": 17620,
											"name": "POP"
										},
										{
											"begin": 17330,
											"end": 17620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "JUMPDEST"
										},
										{
											"begin": 11245,
											"end": 11246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "AND"
										},
										{
											"begin": 11225,
											"end": 11233,
											"name": "DUP2"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "AND"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "EQ"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "ISZERO"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "JUMPI"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "CODECOPY"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "REVERT"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11331,
											"end": 11339,
											"name": "DUP1"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "AND"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "DUP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SLOAD"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "EXP"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "DIV"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "AND"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "AND"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "MLOAD"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "MLOAD"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "DUP1"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SWAP2"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SUB"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SWAP1"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "LOG3"
										},
										{
											"begin": 11356,
											"end": 11364,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "EXP"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "DUP2"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SLOAD"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "DUP2"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "MUL"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "NOT"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "AND"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "DUP4"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "AND"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "MUL"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "OR"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SSTORE"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "POP"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "JUMPDEST"
										},
										{
											"begin": 5386,
											"end": 5393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "DUP4"
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "DUP4"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MLOAD"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP1"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "ADD"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MSTORE"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP1"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP2"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MSTORE"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "ADD"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP2"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MSTORE"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "POP"
										},
										{
											"begin": 5409,
											"end": 5412,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "JUMPDEST"
										},
										{
											"begin": 5402,
											"end": 5452,
											"name": "SWAP1"
										},
										{
											"begin": 5402,
											"end": 5452,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "SWAP3"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"BEP20TOKEN\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x45919a8b98c751818071d22a0a164d5722e503d9874fa219aefcc3c4413b964d\",\"urls\":[\"bzz-raw://d9521bb602b6fc1c13e209fc86b6ce47ecfa33bba965ce99f772ce3af53b2a52\",\"dweb:/ipfs/QmSsnZsUoXZ59sKp1SsELVxu7kjEHXaSCMmxLcD6hPSnUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/BEP20Token.sol:BEP20TOKEN",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x45919a8b98c751818071d22a0a164d5722e503d9874fa219aefcc3c4413b964d\",\"urls\":[\"bzz-raw://d9521bb602b6fc1c13e209fc86b6ce47ecfa33bba965ce99f772ce3af53b2a52\",\"dweb:/ipfs/QmSsnZsUoXZ59sKp1SsELVxu7kjEHXaSCMmxLcD6hPSnUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x45919a8b98c751818071d22a0a164d5722e503d9874fa219aefcc3c4413b964d\",\"urls\":[\"bzz-raw://d9521bb602b6fc1c13e209fc86b6ce47ecfa33bba965ce99f772ce3af53b2a52\",\"dweb:/ipfs/QmSsnZsUoXZ59sKp1SsELVxu7kjEHXaSCMmxLcD6hPSnUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x45919a8b98c751818071d22a0a164d5722e503d9874fa219aefcc3c4413b964d\",\"urls\":[\"bzz-raw://d9521bb602b6fc1c13e209fc86b6ce47ecfa33bba965ce99f772ce3af53b2a52\",\"dweb:/ipfs/QmSsnZsUoXZ59sKp1SsELVxu7kjEHXaSCMmxLcD6hPSnUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20Token.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20Token.sol\":4671:9099  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20Token.sol\":4671:9099  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158201456b23712630e4acb68665241dd457bf9127b490c7aa085b8b5d5fe5f206fe564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201456b23712630e4acb68665241dd457bf9127b490c7aa085b8b5d5fe5f206fe564736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 EQ JUMP 0xB2 CALLDATACOPY SLT PUSH4 0xE4ACB68 PUSH7 0x5241DD457BF912 PUSH28 0x490C7AA085B8B5D5FE5F206FE564736F6C6343000510003200000000 ",
							"sourceMap": "4671:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201456b23712630e4acb68665241dd457bf9127b490c7aa085b8b5d5fe5f206fe564736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 EQ JUMP 0xB2 CALLDATACOPY SLT PUSH4 0xE4ACB68 PUSH7 0x5241DD457BF912 PUSH28 0x490C7AA085B8B5D5FE5F206FE564736F6C6343000510003200000000 ",
							"sourceMap": "4671:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4671,
									"end": 9099,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4671,
									"end": 9099,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201456b23712630e4acb68665241dd457bf9127b490c7aa085b8b5d5fe5f206fe564736f6c63430005100032",
									".code": [
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "ADDRESS"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "EQ"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "MSTORE"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "DUP1"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x45919a8b98c751818071d22a0a164d5722e503d9874fa219aefcc3c4413b964d\",\"urls\":[\"bzz-raw://d9521bb602b6fc1c13e209fc86b6ce47ecfa33bba965ce99f772ce3af53b2a52\",\"dweb:/ipfs/QmSsnZsUoXZ59sKp1SsELVxu7kjEHXaSCMmxLcD6hPSnUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEP20Token.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20Token.sol",
					"exportedSymbols": {
						"BEP20TOKEN": [
							919
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 920,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "71:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "233:9:0"
									},
									"scope": 88,
									"src": "188:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "345:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "344:7:0"
									},
									"scope": 88,
									"src": "302:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "450:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:15:0"
									},
									"scope": 88,
									"src": "409:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "557:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "556:15:0"
									},
									"scope": 88,
									"src": "518:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:9:0"
									},
									"scope": 88,
									"src": "632:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "783:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:9:0"
									},
									"scope": 88,
									"src": "764:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1063:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1082:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1062:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1115:6:0"
									},
									"scope": 88,
									"src": "1045:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1408:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1464:9:0"
									},
									"scope": 88,
									"src": "1390:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2130:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2129:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2181:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2180:6:0"
									},
									"scope": 88,
									"src": "2113:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2507:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2523:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2506:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2576:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2575:6:0"
									},
									"scope": 88,
									"src": "2485:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2760:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2782:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2759:57:0"
									},
									"src": "2745:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2987:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3010:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2986:63:0"
									},
									"src": "2972:78:0"
								}
							],
							"scope": 920,
							"src": "98:2955:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3765:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:0:0"
									},
									"scope": 113,
									"src": "3741:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3836:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3850:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3850:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3843:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3819:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3818:17:0"
									},
									"scope": 113,
									"src": "3774:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3929:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "3936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3936:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "4073:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4073:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "4066:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3889:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3915:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3915:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3914:14:0"
									},
									"scope": 113,
									"src": "3872:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "3567:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4973:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4980:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4992:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4996:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "5012:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5017:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5020:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "5004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5004:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "5004:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5066:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "5059:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4919:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4918:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4963:9:0"
									},
									"scope": 298,
									"src": "4906:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5395:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5413:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5416:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5419:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5409:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5409:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5402:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5340:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5386:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5385:9:0"
									},
									"scope": 298,
									"src": "5328:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5828:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5848:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5851:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "5835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5835:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5835:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5871:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5871:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5904:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5897:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5746:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5757:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5768:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5768:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5745:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5819:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5818:9:0"
									},
									"scope": 298,
									"src": "5733:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6209:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6429:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6434:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6425:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6437:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6453:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6446:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6470:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6486:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6482:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6470:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6506:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6502:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6502:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6514:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "6494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6494:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6494:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6566:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6559:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6155:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6166:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6154:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6200:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6199:9:0"
									},
									"scope": 298,
									"src": "6142:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7084:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7108:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7098:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7091:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7029:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7074:9:0"
									},
									"scope": 298,
									"src": "7017:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7702:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7780:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7784:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7780:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7787:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "7772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7772:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7772:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7807:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7807:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7819:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7807:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7923:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7916:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7620:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7642:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7619:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7692:9:0"
									},
									"scope": 298,
									"src": "7607:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8430:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8448:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8451:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8454:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8444:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8444:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8437:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8376:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8387:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8375:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8420:9:0"
									},
									"scope": 298,
									"src": "8363:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "9035:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "9050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9055:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "9058:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "9042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9042:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "9042:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9085:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9089:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9085:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9078:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8975:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8975:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8952:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9025:9:0"
									},
									"scope": 298,
									"src": "8940:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "4671:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9630:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9630:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9643:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9643:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9699:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9730:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9698:57:0"
									},
									"src": "9672:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9879:125:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9886:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9886:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9906:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9906:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9886:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9925:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9934:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9925:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9925:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9984:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9976:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9976:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9988:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9955:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9955:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9950:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9867:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9879:0:0"
									},
									"scope": 404,
									"src": "9855:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10124:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "10138:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "10131:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10091:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10115:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10114:9:0"
									},
									"scope": 404,
									"src": "10077:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10256:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10281:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10281:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10271:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10295:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "10263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10263:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10263:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10337:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10253:2:0"
									},
									"src": "10235:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10725:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10774:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10766:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10766:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10737:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10737:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10732:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10784:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10801:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10793:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10784:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10784:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10715:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10715:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10705:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10725:0:0"
									},
									"scope": 404,
									"src": "10679:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "11016:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "11042:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "11023:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11023:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "11023:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "11006:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11006:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10981:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10980:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11016:0:0"
									},
									"scope": 404,
									"src": "10954:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11210:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "11225:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11245:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11225:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11249:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "11217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11217:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "11217:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11331:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11302:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11302:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11297:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11347:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11356:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11347:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11347:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "11183:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11182:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11210:0:0"
									},
									"scope": 404,
									"src": "11155:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "9610:1763:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11400:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11400:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11409:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11409:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11417:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11417:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 919,
							"linearizedBaseContracts": [
								919,
								404,
								88,
								113
							],
							"name": "BEP20TOKEN",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11436:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11430:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11449:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11463:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11472:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11463:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11483:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11516:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11525:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11516:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11545:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11536:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11556:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11592:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11592:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11625:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11625:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11652:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11652:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11678:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11678:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11725:224:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11732:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4245503230544f4b454e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11740:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_4196c022f786fd4cf927a0fc441222003cfd9fc4cbafe3a849898b4893e695e6",
															"typeString": "literal_string \"BEP20TOKEN\""
														},
														"value": "BEP20TOKEN"
													},
													"src": "11732:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11732:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4245503230544f4b454e",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11769:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_4196c022f786fd4cf927a0fc441222003cfd9fc4cbafe3a849898b4893e695e6",
															"typeString": "literal_string \"BEP20TOKEN\""
														},
														"value": "BEP20TOKEN"
													},
													"src": "11759:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11759:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11788:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11800:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11788:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11788:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_2250000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32323530303030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11824:7:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2250000_by_1",
																"typeString": "int_const 2250000"
															},
															"value": "2250000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11834:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11838:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11824:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2250000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000"
														}
													},
													"src": "11809:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11809:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11847:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11857:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11857:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11847:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11871:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11847:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "11847:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11914:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11906:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11918:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11918:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11897:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11897:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "11892:51:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11715:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11725:0:0"
									},
									"scope": 919,
									"src": "11704:245:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "12061:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "12075:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 478,
												"nodeType": "Return",
												"src": "12068:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12026:2:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12052:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12051:9:0"
									},
									"scope": 919,
									"src": "12009:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "12197:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 485,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "12211:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "12204:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:2:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "12190:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12190:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12189:7:0"
									},
									"scope": 919,
									"src": "12147:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "12339:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "12353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "12346:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12298:2:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "12324:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12323:15:0"
									},
									"scope": 919,
									"src": "12283:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "12473:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "12480:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12432:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12458:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12458:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12457:15:0"
									},
									"scope": 919,
									"src": "12419:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "12609:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12623:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 510,
												"nodeType": "Return",
												"src": "12616:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12574:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "12600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12599:9:0"
									},
									"scope": 919,
									"src": "12554:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "12763:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12777:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "12787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12777:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "12770:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12713:17:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12753:9:0"
									},
									"scope": 919,
									"src": "12695:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "13072:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 534,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13089:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13089:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13103:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13114:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "13079:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13079:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "13079:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13135:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "13128:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "13013:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "13032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13012:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "13066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13065:6:0"
									},
									"scope": 919,
									"src": "12995:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "13282:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "13296:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "13308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13296:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "13315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13296:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "13289:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "13218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "13233:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13217:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "13273:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13272:9:0"
									},
									"scope": 919,
									"src": "13199:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13533:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13549:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "13563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13572:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13540:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13540:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "13540:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13593:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 576,
												"nodeType": "Return",
												"src": "13586:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13493:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13475:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13526:6:0"
									},
									"scope": 919,
									"src": "13459:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "14145:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 590,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "14162:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "14170:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "14181:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "14152:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14152:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "14152:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "14204:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 597,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14212:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14212:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "14264:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14272:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14226:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 601,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "14238:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14226:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 604,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "14246:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14246:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14226:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14226:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14226:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14195:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "14195:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14330:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 612,
												"nodeType": "Return",
												"src": "14323:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14086:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14105:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14069:51:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14139:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14139:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14138:6:0"
									},
									"scope": 919,
									"src": "14048:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "14808:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14824:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14824:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 634,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "14886:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 627,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14847:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 628,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14859:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14859:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14847:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "14873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14847:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14847:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14847:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14815:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14815:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "14815:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14912:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 639,
												"nodeType": "Return",
												"src": "14905:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14749:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14766:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14748:37:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14802:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14802:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14801:6:0"
									},
									"scope": 919,
									"src": "14722:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "15485:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15501:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15501:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "15563:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15580:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15524:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 655,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15536:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15536:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15524:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "15550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15524:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15524:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15524:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "15492:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15492:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "15492:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15635:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 649,
												"id": 667,
												"nodeType": "Return",
												"src": "15628:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "15421:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "15438:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15420:42:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "15479:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15478:6:0"
									},
									"scope": 919,
									"src": "15394:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "15907:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15920:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15920:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "15934:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "15914:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15914:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "15914:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15955:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 677,
												"id": 685,
												"nodeType": "Return",
												"src": "15948:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 674,
											"modifierName": {
												"argumentTypes": null,
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15882:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15882:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15859:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15858:16:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15901:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15901:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15900:6:0"
									},
									"scope": 919,
									"src": "15845:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "16102:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "16115:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16115:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 697,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16129:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "16109:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16109:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "16109:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16150:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 693,
												"id": 701,
												"nodeType": "Return",
												"src": "16143:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "16064:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16063:16:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "16096:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16095:6:0"
									},
									"scope": 919,
									"src": "16050:110:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "16699:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 713,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "16714:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16732:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16724:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16714:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16736:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16706:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "16706:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 722,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "16791:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16812:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16804:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16804:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16791:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16816:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16783:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "16783:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 730,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16863:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16863:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16905:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16913:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 733,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16883:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 735,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "16893:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16883:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16883:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16883:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16863:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "16863:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 742,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16961:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 744,
														"indexExpression": {
															"argumentTypes": null,
															"id": 743,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16971:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16961:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 749,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "17009:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 745,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16984:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 747,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "16994:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16984:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16984:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16984:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16961:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "16961:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "17037:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "17045:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "17056:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17028:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "17023:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16639:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16655:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16674:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16638:51:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16699:0:0"
									},
									"scope": 919,
									"src": "16620:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "17387:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 768,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "17402:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17421:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17413:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17413:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17402:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17425:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "17394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17394:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "17394:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17468:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "17500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 777,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17483:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17483:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17483:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17468:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "17468:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 783,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 785,
														"indexExpression": {
															"argumentTypes": null,
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "17524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17514:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "17558:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17535:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 788,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 787,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "17545:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17535:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17535:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17535:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17514:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "17514:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17594:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17586:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "17598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "17607:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17577:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17577:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "17572:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "17345:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "17362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17344:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17387:0:0"
									},
									"scope": 919,
									"src": "17330:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "17985:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 811,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "18000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18019:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18011:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18011:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18000:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18023:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "17992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17992:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "17992:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 819,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "18068:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"argumentTypes": null,
															"id": 820,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "18078:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18068:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 826,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "18112:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18120:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 822,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "18089:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 824,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "18099:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18089:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "18089:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18089:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18068:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "18068:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 831,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "18164:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 834,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "18196:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 832,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "18179:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "18179:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18179:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18164:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "18164:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 839,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "18224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18241:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "18245:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "18215:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18215:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "18210:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17960:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17942:33:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17985:0:0"
									},
									"scope": 919,
									"src": "17928:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "18745:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 857,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18777:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18760:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18781:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18752:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "18752:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 866,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "18835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18854:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18846:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18846:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18835:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18858:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18827:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "18827:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18904:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 877,
															"indexExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18904:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 878,
														"indexExpression": {
															"argumentTypes": null,
															"id": 876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18904:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 879,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "18934:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18904:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "18904:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "18961:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "18977:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18952:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "18947:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18688:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18720:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18687:48:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18745:0:0"
									},
									"scope": 919,
									"src": "18670:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "19223:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 897,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "19236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "19245:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "19230:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19230:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "19230:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 902,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "19268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 903,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "19277:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19277:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 912,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "19330:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19338:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 905,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "19291:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 907,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 906,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 891,
																			"src": "19303:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 910,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 908,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "19312:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19312:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19291:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "19291:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19291:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "19259:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19259:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "19259:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "19181:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "19198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19180:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19223:0:0"
									},
									"scope": 919,
									"src": "19162:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "11377:8010:0"
						}
					],
					"src": "71:19316:0"
				},
				"id": 0
			}
		}
	}
}