{
	"id": "867e791fc10d18d411eda64958e29cb6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SushiToken.sol": {
				"content": "pragma solidity 0.6.12;\r\n\r\n\r\nimport \"../deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"../deps/npm/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n// SushiToken with Governance.\r\ncontract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\r\n    function mint(address _to, uint256 _amount) public onlyOwner {\r\n        _mint(_to, _amount);\r\n        _moveDelegates(address(0), _delegates[_to], _amount);\r\n    }\r\n\r\n    // Copied and modified from YAM code:\r\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\r\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\r\n    // Which is copied and modified from COMPOUND:\r\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\r\n\r\n    /// @notice A record of each accounts delegate\r\n    mapping (address => address) internal _delegates;\r\n\r\n    /// @notice A checkpoint for marking number of votes from a given block\r\n    struct Checkpoint {\r\n        uint32 fromBlock;\r\n        uint256 votes;\r\n    }\r\n\r\n    /// @notice A record of votes checkpoints for each account, by index\r\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\r\n\r\n    /// @notice The number of checkpoints for each account\r\n    mapping (address => uint32) public numCheckpoints;\r\n\r\n    /// @notice The EIP-712 typehash for the contract's domain\r\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\r\n\r\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\r\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\r\n\r\n    /// @notice A record of states for signing / validating signatures\r\n    mapping (address => uint) public nonces;\r\n\r\n      /// @notice An event thats emitted when an account changes its delegate\r\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\r\n\r\n    /// @notice An event thats emitted when a delegate account's vote balance changes\r\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\r\n\r\n    /**\r\n     * @notice Delegate votes from `msg.sender` to `delegatee`\r\n     * @param delegator The address to get delegatee for\r\n     */\r\n    function delegates(address delegator)\r\n        external\r\n        view\r\n        returns (address)\r\n    {\r\n        return _delegates[delegator];\r\n    }\r\n\r\n   /**\r\n    * @notice Delegate votes from `msg.sender` to `delegatee`\r\n    * @param delegatee The address to delegate votes to\r\n    */\r\n    function delegate(address delegatee) external {\r\n        return _delegate(msg.sender, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Delegates votes from signatory to `delegatee`\r\n     * @param delegatee The address to delegate votes to\r\n     * @param nonce The contract state required to match the signature\r\n     * @param expiry The time at which to expire the signature\r\n     * @param v The recovery byte of the signature\r\n     * @param r Half of the ECDSA signature pair\r\n     * @param s Half of the ECDSA signature pair\r\n     */\r\n    function delegateBySig(\r\n        address delegatee,\r\n        uint nonce,\r\n        uint expiry,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    )\r\n        external\r\n    {\r\n        bytes32 domainSeparator = keccak256(\r\n            abi.encode(\r\n                DOMAIN_TYPEHASH,\r\n                keccak256(bytes(name())),\r\n                getChainId(),\r\n                address(this)\r\n            )\r\n        );\r\n\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                DELEGATION_TYPEHASH,\r\n                delegatee,\r\n                nonce,\r\n                expiry\r\n            )\r\n        );\r\n\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\r\n                \"\\x19\\x01\",\r\n                domainSeparator,\r\n                structHash\r\n            )\r\n        );\r\n\r\n        address signatory = ecrecover(digest, v, r, s);\r\n        require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\");\r\n        require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\");\r\n        require(now <= expiry, \"SUSHI::delegateBySig: signature expired\");\r\n        return _delegate(signatory, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Gets the current votes balance for `account`\r\n     * @param account The address to get votes balance\r\n     * @return The number of current votes for `account`\r\n     */\r\n    function getCurrentVotes(address account)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Determine the prior number of votes for an account as of a block number\r\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\r\n     * @param account The address of the account to check\r\n     * @param blockNumber The block number to get the vote balance at\r\n     * @return The number of votes the account had as of the given block\r\n     */\r\n    function getPriorVotes(address account, uint blockNumber)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\");\r\n\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        if (nCheckpoints == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // First check most recent balance\r\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r\n            return checkpoints[account][nCheckpoints - 1].votes;\r\n        }\r\n\r\n        // Next check implicit zero balance\r\n        if (checkpoints[account][0].fromBlock > blockNumber) {\r\n            return 0;\r\n        }\r\n\r\n        uint32 lower = 0;\r\n        uint32 upper = nCheckpoints - 1;\r\n        while (upper > lower) {\r\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\r\n            Checkpoint memory cp = checkpoints[account][center];\r\n            if (cp.fromBlock == blockNumber) {\r\n                return cp.votes;\r\n            } else if (cp.fromBlock < blockNumber) {\r\n                lower = center;\r\n            } else {\r\n                upper = center - 1;\r\n            }\r\n        }\r\n        return checkpoints[account][lower].votes;\r\n    }\r\n\r\n    function _delegate(address delegator, address delegatee)\r\n        internal\r\n    {\r\n        address currentDelegate = _delegates[delegator];\r\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying SUSHIs (not scaled);\r\n        _delegates[delegator] = delegatee;\r\n\r\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\r\n\r\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\r\n    }\r\n\r\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\r\n        if (srcRep != dstRep && amount > 0) {\r\n            if (srcRep != address(0)) {\r\n                // decrease old representative\r\n                uint32 srcRepNum = numCheckpoints[srcRep];\r\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\r\n                uint256 srcRepNew = srcRepOld.sub(amount);\r\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\r\n            }\r\n\r\n            if (dstRep != address(0)) {\r\n                // increase new representative\r\n                uint32 dstRepNum = numCheckpoints[dstRep];\r\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\r\n                uint256 dstRepNew = dstRepOld.add(amount);\r\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _writeCheckpoint(\r\n        address delegatee,\r\n        uint32 nCheckpoints,\r\n        uint256 oldVotes,\r\n        uint256 newVotes\r\n    )\r\n        internal\r\n    {\r\n        uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\");\r\n\r\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\r\n        } else {\r\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\r\n            numCheckpoints[delegatee] = nCheckpoints + 1;\r\n        }\r\n\r\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\r\n    }\r\n\r\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r\n        require(n < 2**32, errorMessage);\r\n        return uint32(n);\r\n    }\r\n\r\n    function getChainId() internal pure returns (uint) {\r\n        uint256 chainId;\r\n        assembly { chainId := chainid() }\r\n        return chainId;\r\n    }\r\n}"
			},
			"deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"deps/npm/@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SushiToken.sol": {
				"SushiToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"delegates(address)": {
								"params": {
									"delegator": "The address to get delegatee for"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SushiToken.sol\":200:9130  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5375736869546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5355534849000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_9\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_10)\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":884:916  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  0x05\n  0x01\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":992:1001  msgSender */\n  dup1\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":988:989  0 */\n  0x00\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"contracts/SushiToken.sol\":200:9130  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {\r... */\n  jump(tag_11)\n    /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_10:\n    /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/SushiToken.sol\":200:9130  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {\r... */\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SushiToken.sol\":200:9130  contract SushiToken is ERC20(\"SushiToken\", \"SUSHI\"), Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x39509351\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":1546:1668  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":366:528  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/SushiToken.sol\":2529:2678  function delegates(address delegator)\r... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":2822:2926  function delegate(address delegatee) external {\r... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/SushiToken.sol\":1424:1473  mapping (address => uint32) public numCheckpoints */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/SushiToken.sol\":5428:6682  function getPriorVotes(address account, uint blockNumber)\r... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":1960:1999  mapping (address => uint) public nonces */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_80:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_80)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_83:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":4742:4997  function getCurrentVotes(address account)\r... */\n    tag_22:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":3360:4541  function delegateBySig(\r... */\n    tag_23:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_24:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":1762:1879  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SushiToken.sol\":1285:1355  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_26:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_112\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_113\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_115\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_112:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_42:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":1546:1668  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_44:\n        /* \"contracts/SushiToken.sol\":1588:1668  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/SushiToken.sol\":1546:1668  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_47:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_118\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_119\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_118:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_120\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_121\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_122\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_123\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_124\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_115\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_120:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_127\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_128\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_129\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_130\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_131\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_115\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_127:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":366:528  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n    tag_55:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_133\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_134\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_77\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_134:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/SushiToken.sol\":438:457  _mint(_to, _amount) */\n      tag_137\n        /* \"contracts/SushiToken.sol\":444:447  _to */\n      dup3\n        /* \"contracts/SushiToken.sol\":449:456  _amount */\n      dup3\n        /* \"contracts/SushiToken.sol\":438:443  _mint */\n      tag_138\n        /* \"contracts/SushiToken.sol\":438:457  _mint(_to, _amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/SushiToken.sol\":468:520  _moveDelegates(address(0), _delegates[_to], _amount) */\n      tag_139\n        /* \"contracts/SushiToken.sol\":491:492  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":495:505  _delegates */\n      0x06\n        /* \"contracts/SushiToken.sol\":495:510  _delegates[_to] */\n      0x00\n        /* \"contracts/SushiToken.sol\":506:509  _to */\n      dup6\n        /* \"contracts/SushiToken.sol\":495:510  _delegates[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":512:519  _amount */\n      dup4\n        /* \"contracts/SushiToken.sol\":468:482  _moveDelegates */\n      tag_140\n        /* \"contracts/SushiToken.sol\":468:520  _moveDelegates(address(0), _delegates[_to], _amount) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/SushiToken.sol\":366:528  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":2529:2678  function delegates(address delegator)\r... */\n    tag_58:\n        /* \"contracts/SushiToken.sol\":2617:2624  address */\n      0x00\n        /* \"contracts/SushiToken.sol\":2649:2659  _delegates */\n      0x06\n        /* \"contracts/SushiToken.sol\":2649:2670  _delegates[delegator] */\n      0x00\n        /* \"contracts/SushiToken.sol\":2660:2669  delegator */\n      dup4\n        /* \"contracts/SushiToken.sol\":2649:2670  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":2642:2670  return _delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":2529:2678  function delegates(address delegator)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":2822:2926  function delegate(address delegatee) external {\r... */\n    tag_61:\n        /* \"contracts/SushiToken.sol\":2886:2918  _delegate(msg.sender, delegatee) */\n      tag_143\n        /* \"contracts/SushiToken.sol\":2896:2906  msg.sender */\n      caller\n        /* \"contracts/SushiToken.sol\":2908:2917  delegatee */\n      dup3\n        /* \"contracts/SushiToken.sol\":2886:2895  _delegate */\n      tag_144\n        /* \"contracts/SushiToken.sol\":2886:2918  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/SushiToken.sol\":2822:2926  function delegate(address delegatee) external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":1424:1473  mapping (address => uint32) public numCheckpoints */\n    tag_64:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_67:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_147\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_148\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_77\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_148:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1836:1842  _owner */\n      0x05\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":5428:6682  function getPriorVotes(address account, uint blockNumber)\r... */\n    tag_72:\n        /* \"contracts/SushiToken.sol\":5536:5543  uint256 */\n      0x00\n        /* \"contracts/SushiToken.sol\":5583:5595  block.number */\n      number\n        /* \"contracts/SushiToken.sol\":5569:5580  blockNumber */\n      dup3\n        /* \"contracts/SushiToken.sol\":5569:5595  blockNumber < block.number */\n      lt\n        /* \"contracts/SushiToken.sol\":5561:5640  require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/SushiToken.sol\":5653:5672  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/SushiToken.sol\":5675:5689  numCheckpoints */\n      0x08\n        /* \"contracts/SushiToken.sol\":5675:5698  numCheckpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":5690:5697  account */\n      dup6\n        /* \"contracts/SushiToken.sol\":5675:5698  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":5653:5698  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":5729:5730  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":5713:5725  nCheckpoints */\n      dup2\n        /* \"contracts/SushiToken.sol\":5713:5730  nCheckpoints == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/SushiToken.sol\":5709:5767  if (nCheckpoints == 0) {\r... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/SushiToken.sol\":5754:5755  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":5747:5755  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_151)\n        /* \"contracts/SushiToken.sol\":5709:5767  if (nCheckpoints == 0) {\r... */\n    tag_153:\n        /* \"contracts/SushiToken.sol\":5879:5890  blockNumber */\n      dup3\n        /* \"contracts/SushiToken.sol\":5827:5838  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":5827:5847  checkpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":5839:5846  account */\n      dup7\n        /* \"contracts/SushiToken.sol\":5827:5847  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":5827:5865  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":5863:5864  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":5848:5860  nCheckpoints */\n      dup5\n        /* \"contracts/SushiToken.sol\":5848:5864  nCheckpoints - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":5827:5865  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":5827:5875  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":5827:5890  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":5823:5970  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r... */\n      tag_154\n      jumpi\n        /* \"contracts/SushiToken.sol\":5914:5925  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":5914:5934  checkpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":5926:5933  account */\n      dup6\n        /* \"contracts/SushiToken.sol\":5914:5934  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":5914:5952  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":5950:5951  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":5935:5947  nCheckpoints */\n      dup4\n        /* \"contracts/SushiToken.sol\":5935:5951  nCheckpoints - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":5914:5952  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":5914:5958  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/SushiToken.sol\":5907:5958  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_151)\n        /* \"contracts/SushiToken.sol\":5823:5970  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r... */\n    tag_154:\n        /* \"contracts/SushiToken.sol\":6067:6078  blockNumber */\n      dup3\n        /* \"contracts/SushiToken.sol\":6031:6042  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":6031:6051  checkpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6043:6050  account */\n      dup7\n        /* \"contracts/SushiToken.sol\":6031:6051  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":6031:6054  checkpoints[account][0] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6052:6053  0 */\n      dup1\n        /* \"contracts/SushiToken.sol\":6031:6054  checkpoints[account][0] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":6031:6064  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":6031:6078  checkpoints[account][0].fromBlock > blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":6027:6115  if (checkpoints[account][0].fromBlock > blockNumber) {\r... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/SushiToken.sol\":6102:6103  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":6095:6103  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_151)\n        /* \"contracts/SushiToken.sol\":6027:6115  if (checkpoints[account][0].fromBlock > blockNumber) {\r... */\n    tag_155:\n        /* \"contracts/SushiToken.sol\":6127:6139  uint32 lower */\n      0x00\n        /* \"contracts/SushiToken.sol\":6154:6166  uint32 upper */\n      dup1\n        /* \"contracts/SushiToken.sol\":6184:6185  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":6169:6181  nCheckpoints */\n      dup4\n        /* \"contracts/SushiToken.sol\":6169:6185  nCheckpoints - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":6154:6185  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":6196:6624  while (upper > lower) {\r... */\n    tag_156:\n        /* \"contracts/SushiToken.sol\":6211:6216  lower */\n      dup2\n        /* \"contracts/SushiToken.sol\":6203:6216  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":6203:6208  upper */\n      dup2\n        /* \"contracts/SushiToken.sol\":6203:6216  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":6196:6624  while (upper > lower) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/SushiToken.sol\":6233:6246  uint32 center */\n      0x00\n        /* \"contracts/SushiToken.sol\":6275:6276  2 */\n      0x02\n        /* \"contracts/SushiToken.sol\":6266:6271  lower */\n      dup4\n        /* \"contracts/SushiToken.sol\":6258:6263  upper */\n      dup4\n        /* \"contracts/SushiToken.sol\":6258:6271  upper - lower */\n      sub\n        /* \"contracts/SushiToken.sol\":6257:6276  (upper - lower) / 2 */\n      0xffffffff\n      and\n      dup2\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      div\n        /* \"contracts/SushiToken.sol\":6249:6254  upper */\n      dup3\n        /* \"contracts/SushiToken.sol\":6249:6276  upper - (upper - lower) / 2 */\n      sub\n        /* \"contracts/SushiToken.sol\":6233:6276  uint32 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":6318:6338  Checkpoint memory cp */\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/SushiToken.sol\":6341:6352  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":6341:6361  checkpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6353:6360  account */\n      dup10\n        /* \"contracts/SushiToken.sol\":6341:6361  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":6341:6369  checkpoints[account][center] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6362:6368  center */\n      dup4\n        /* \"contracts/SushiToken.sol\":6341:6369  checkpoints[account][center] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":6318:6369  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":6404:6415  blockNumber */\n      dup7\n        /* \"contracts/SushiToken.sol\":6388:6390  cp */\n      dup2\n        /* \"contracts/SushiToken.sol\":6388:6400  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/SushiToken.sol\":6388:6415  cp.fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/SushiToken.sol\":6384:6613  if (cp.fromBlock == blockNumber) {\r... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/SushiToken.sol\":6443:6445  cp */\n      dup1\n        /* \"contracts/SushiToken.sol\":6443:6451  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/SushiToken.sol\":6436:6451  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_151)\n        /* \"contracts/SushiToken.sol\":6384:6613  if (cp.fromBlock == blockNumber) {\r... */\n    tag_161:\n        /* \"contracts/SushiToken.sol\":6492:6503  blockNumber */\n      dup7\n        /* \"contracts/SushiToken.sol\":6477:6479  cp */\n      dup2\n        /* \"contracts/SushiToken.sol\":6477:6489  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/SushiToken.sol\":6477:6503  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/SushiToken.sol\":6473:6613  if (cp.fromBlock < blockNumber) {\r... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/SushiToken.sol\":6532:6538  center */\n      dup2\n        /* \"contracts/SushiToken.sol\":6524:6538  lower = center */\n      swap4\n      pop\n        /* \"contracts/SushiToken.sol\":6473:6613  if (cp.fromBlock < blockNumber) {\r... */\n      jump(tag_164)\n    tag_163:\n        /* \"contracts/SushiToken.sol\":6596:6597  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":6587:6593  center */\n      dup3\n        /* \"contracts/SushiToken.sol\":6587:6597  center - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":6579:6597  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/SushiToken.sol\":6473:6613  if (cp.fromBlock < blockNumber) {\r... */\n    tag_164:\n        /* \"contracts/SushiToken.sol\":6196:6624  while (upper > lower) {\r... */\n      pop\n      pop\n      jump(tag_156)\n    tag_157:\n        /* \"contracts/SushiToken.sol\":6641:6652  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":6641:6661  checkpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6653:6660  account */\n      dup8\n        /* \"contracts/SushiToken.sol\":6641:6661  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":6641:6668  checkpoints[account][lower] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6662:6667  lower */\n      dup4\n        /* \"contracts/SushiToken.sol\":6641:6668  checkpoints[account][lower] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":6641:6674  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/SushiToken.sol\":6634:6674  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SushiToken.sol\":5428:6682  function getPriorVotes(address account, uint blockNumber)\r... */\n    tag_151:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":1960:1999  mapping (address => uint) public nonces */\n    tag_75:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1157:1163  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1150:1163  return _owner */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_79:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_86:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_171\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_172\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_173\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_174\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_124\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_115\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_171:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_89:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_176\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_177\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_119\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_176:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":4742:4997  function getCurrentVotes(address account)\r... */\n    tag_92:\n        /* \"contracts/SushiToken.sol\":4834:4841  uint256 */\n      0x00\n        /* \"contracts/SushiToken.sol\":4859:4878  uint32 nCheckpoints */\n      dup1\n        /* \"contracts/SushiToken.sol\":4881:4895  numCheckpoints */\n      0x08\n        /* \"contracts/SushiToken.sol\":4881:4904  numCheckpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":4896:4903  account */\n      dup5\n        /* \"contracts/SushiToken.sol\":4881:4904  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":4859:4904  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":4937:4938  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":4922:4934  nCheckpoints */\n      dup2\n        /* \"contracts/SushiToken.sol\":4922:4938  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":4922:4989  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_179\n      jumpi\n        /* \"contracts/SushiToken.sol\":4988:4989  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":4922:4989  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_180)\n    tag_179:\n        /* \"contracts/SushiToken.sol\":4941:4952  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":4941:4961  checkpoints[account] */\n      0x00\n        /* \"contracts/SushiToken.sol\":4953:4960  account */\n      dup5\n        /* \"contracts/SushiToken.sol\":4941:4961  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":4941:4979  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":4977:4978  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":4962:4974  nCheckpoints */\n      dup4\n        /* \"contracts/SushiToken.sol\":4962:4978  nCheckpoints - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":4941:4979  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":4941:4985  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/SushiToken.sol\":4922:4989  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_180:\n        /* \"contracts/SushiToken.sol\":4915:4989  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/SushiToken.sol\":4742:4997  function getCurrentVotes(address account)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":3360:4541  function delegateBySig(\r... */\n    tag_95:\n        /* \"contracts/SushiToken.sol\":3553:3576  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/SushiToken.sol\":1588:1668  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/SushiToken.sol\":3682:3688  name() */\n      tag_182\n        /* \"contracts/SushiToken.sol\":3682:3686  name */\n      tag_33\n        /* \"contracts/SushiToken.sol\":3682:3688  name() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/SushiToken.sol\":3666:3690  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SushiToken.sol\":3709:3721  getChainId() */\n      tag_183\n        /* \"contracts/SushiToken.sol\":3709:3719  getChainId */\n      tag_184\n        /* \"contracts/SushiToken.sol\":3709:3721  getChainId() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/SushiToken.sol\":3748:3752  this */\n      address\n        /* \"contracts/SushiToken.sol\":3603:3768  abi.encode(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SushiToken.sol\":3579:3779  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SushiToken.sol\":3553:3779  bytes32 domainSeparator = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":3792:3810  bytes32 structHash */\n      0x00\n        /* \"contracts/SushiToken.sol\":1808:1879  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/SushiToken.sol\":3904:3913  delegatee */\n      dup9\n        /* \"contracts/SushiToken.sol\":3932:3937  nonce */\n      dup9\n        /* \"contracts/SushiToken.sol\":3956:3962  expiry */\n      dup9\n        /* \"contracts/SushiToken.sol\":3837:3977  abi.encode(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SushiToken.sol\":3813:3988  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SushiToken.sol\":3792:3988  bytes32 structHash = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":4001:4015  bytes32 digest */\n      0x00\n        /* \"contracts/SushiToken.sol\":4106:4121  domainSeparator */\n      dup3\n        /* \"contracts/SushiToken.sol\":4140:4150  structHash */\n      dup3\n        /* \"contracts/SushiToken.sol\":4042:4165  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SushiToken.sol\":4018:4176  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SushiToken.sol\":4001:4176  bytes32 digest = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":4189:4206  address signatory */\n      0x00\n        /* \"contracts/SushiToken.sol\":4209:4235  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/SushiToken.sol\":4219:4225  digest */\n      dup3\n        /* \"contracts/SushiToken.sol\":4227:4228  v */\n      dup9\n        /* \"contracts/SushiToken.sol\":4230:4231  r */\n      dup9\n        /* \"contracts/SushiToken.sol\":4233:4234  s */\n      dup9\n        /* \"contracts/SushiToken.sol\":4209:4235  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/SushiToken.sol\":4189:4235  address signatory = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":4275:4276  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":4254:4277  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":4254:4263  signatory */\n      dup2\n        /* \"contracts/SushiToken.sol\":4254:4277  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SushiToken.sol\":4246:4321  require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/SushiToken.sol\":4349:4355  nonces */\n      0x09\n        /* \"contracts/SushiToken.sol\":4349:4366  nonces[signatory] */\n      0x00\n        /* \"contracts/SushiToken.sol\":4356:4365  signatory */\n      dup3\n        /* \"contracts/SushiToken.sol\":4349:4366  nonces[signatory] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SushiToken.sol\":4349:4368  nonces[signatory]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/SushiToken.sol\":4340:4345  nonce */\n      dup10\n        /* \"contracts/SushiToken.sol\":4340:4368  nonce == nonces[signatory]++ */\n      eq\n        /* \"contracts/SushiToken.sol\":4332:4408  require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/SushiToken.sol\":4434:4440  expiry */\n      dup8\n        /* \"contracts/SushiToken.sol\":4427:4430  now */\n      timestamp\n        /* \"contracts/SushiToken.sol\":4427:4440  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/SushiToken.sol\":4419:4484  require(now <= expiry, \"SUSHI::delegateBySig: signature expired\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/SushiToken.sol\":4502:4533  _delegate(signatory, delegatee) */\n      tag_190\n        /* \"contracts/SushiToken.sol\":4512:4521  signatory */\n      dup2\n        /* \"contracts/SushiToken.sol\":4523:4532  delegatee */\n      dup12\n        /* \"contracts/SushiToken.sol\":4502:4511  _delegate */\n      tag_144\n        /* \"contracts/SushiToken.sol\":4502:4533  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/SushiToken.sol\":4495:4533  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SushiToken.sol\":3360:4541  function delegateBySig(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_98:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":1762:1879  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_100:\n        /* \"contracts/SushiToken.sol\":1808:1879  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/SushiToken.sol\":1762:1879  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":1285:1355  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_103:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_193\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_114\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_194\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_77\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_194:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2119:2120  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2208:2216  newOwner */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2236:2244  newOwner */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x05\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_114:\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_115:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_119:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_205\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_206\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_205:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_207\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_124\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_208\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_131\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_211:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_213\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_211)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_214:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_138:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7934:7935  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7922  account */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      tag_219\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n      tag_206\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_219:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      tag_220\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n      sload(0x02)\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n      tag_131\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n      0x02\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      tag_221\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8123:8130  account */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n      tag_131\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8102:8109  account */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8179:8186  account */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8175:8176  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8188:8194  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":7137:8084  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\r... */\n    tag_140:\n        /* \"contracts/SushiToken.sol\":7243:7249  dstRep */\n      dup2\n        /* \"contracts/SushiToken.sol\":7233:7249  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7233:7239  srcRep */\n      dup4\n        /* \"contracts/SushiToken.sol\":7233:7249  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SushiToken.sol\":7233:7263  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"contracts/SushiToken.sol\":7262:7263  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":7253:7259  amount */\n      dup2\n        /* \"contracts/SushiToken.sol\":7253:7263  amount > 0 */\n      gt\n        /* \"contracts/SushiToken.sol\":7233:7263  srcRep != dstRep && amount > 0 */\n    tag_223:\n        /* \"contracts/SushiToken.sol\":7229:8077  if (srcRep != dstRep && amount > 0) {\r... */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/SushiToken.sol\":7302:7303  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":7284:7304  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7284:7290  srcRep */\n      dup4\n        /* \"contracts/SushiToken.sol\":7284:7304  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SushiToken.sol\":7280:7665  if (srcRep != address(0)) {\r... */\n      tag_225\n      jumpi\n        /* \"contracts/SushiToken.sol\":7373:7389  uint32 srcRepNum */\n      0x00\n        /* \"contracts/SushiToken.sol\":7392:7406  numCheckpoints */\n      0x08\n        /* \"contracts/SushiToken.sol\":7392:7414  numCheckpoints[srcRep] */\n      0x00\n        /* \"contracts/SushiToken.sol\":7407:7413  srcRep */\n      dup6\n        /* \"contracts/SushiToken.sol\":7392:7414  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7373:7414  uint32 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":7433:7450  uint256 srcRepOld */\n      0x00\n        /* \"contracts/SushiToken.sol\":7465:7466  0 */\n      dup1\n        /* \"contracts/SushiToken.sol\":7453:7462  srcRepNum */\n      dup3\n        /* \"contracts/SushiToken.sol\":7453:7466  srcRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":7453:7513  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_226\n      jumpi\n        /* \"contracts/SushiToken.sol\":7512:7513  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":7453:7513  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_227)\n    tag_226:\n        /* \"contracts/SushiToken.sol\":7469:7480  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":7469:7488  checkpoints[srcRep] */\n      0x00\n        /* \"contracts/SushiToken.sol\":7481:7487  srcRep */\n      dup7\n        /* \"contracts/SushiToken.sol\":7469:7488  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":7469:7503  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":7501:7502  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":7489:7498  srcRepNum */\n      dup5\n        /* \"contracts/SushiToken.sol\":7489:7502  srcRepNum - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":7469:7503  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":7469:7509  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/SushiToken.sol\":7453:7513  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_227:\n        /* \"contracts/SushiToken.sol\":7433:7513  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":7532:7549  uint256 srcRepNew */\n      0x00\n        /* \"contracts/SushiToken.sol\":7552:7573  srcRepOld.sub(amount) */\n      tag_228\n        /* \"contracts/SushiToken.sol\":7566:7572  amount */\n      dup5\n        /* \"contracts/SushiToken.sol\":7552:7561  srcRepOld */\n      dup4\n        /* \"contracts/SushiToken.sol\":7552:7565  srcRepOld.sub */\n      tag_229\n      swap1\n        /* \"contracts/SushiToken.sol\":7552:7573  srcRepOld.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/SushiToken.sol\":7532:7573  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":7592:7649  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_230\n        /* \"contracts/SushiToken.sol\":7609:7615  srcRep */\n      dup7\n        /* \"contracts/SushiToken.sol\":7617:7626  srcRepNum */\n      dup5\n        /* \"contracts/SushiToken.sol\":7628:7637  srcRepOld */\n      dup5\n        /* \"contracts/SushiToken.sol\":7639:7648  srcRepNew */\n      dup5\n        /* \"contracts/SushiToken.sol\":7592:7608  _writeCheckpoint */\n      tag_231\n        /* \"contracts/SushiToken.sol\":7592:7649  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/SushiToken.sol\":7280:7665  if (srcRep != address(0)) {\r... */\n      pop\n      pop\n      pop\n    tag_225:\n        /* \"contracts/SushiToken.sol\":7703:7704  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":7685:7705  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7685:7691  dstRep */\n      dup3\n        /* \"contracts/SushiToken.sol\":7685:7705  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SushiToken.sol\":7681:8066  if (dstRep != address(0)) {\r... */\n      tag_232\n      jumpi\n        /* \"contracts/SushiToken.sol\":7774:7790  uint32 dstRepNum */\n      0x00\n        /* \"contracts/SushiToken.sol\":7793:7807  numCheckpoints */\n      0x08\n        /* \"contracts/SushiToken.sol\":7793:7815  numCheckpoints[dstRep] */\n      0x00\n        /* \"contracts/SushiToken.sol\":7808:7814  dstRep */\n      dup5\n        /* \"contracts/SushiToken.sol\":7793:7815  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7774:7815  uint32 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":7834:7851  uint256 dstRepOld */\n      0x00\n        /* \"contracts/SushiToken.sol\":7866:7867  0 */\n      dup1\n        /* \"contracts/SushiToken.sol\":7854:7863  dstRepNum */\n      dup3\n        /* \"contracts/SushiToken.sol\":7854:7867  dstRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":7854:7914  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_233\n      jumpi\n        /* \"contracts/SushiToken.sol\":7913:7914  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":7854:7914  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_234)\n    tag_233:\n        /* \"contracts/SushiToken.sol\":7870:7881  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":7870:7889  checkpoints[dstRep] */\n      0x00\n        /* \"contracts/SushiToken.sol\":7882:7888  dstRep */\n      dup6\n        /* \"contracts/SushiToken.sol\":7870:7889  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":7870:7904  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":7902:7903  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":7890:7899  dstRepNum */\n      dup5\n        /* \"contracts/SushiToken.sol\":7890:7903  dstRepNum - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":7870:7904  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":7870:7910  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/SushiToken.sol\":7854:7914  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_234:\n        /* \"contracts/SushiToken.sol\":7834:7914  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":7933:7950  uint256 dstRepNew */\n      0x00\n        /* \"contracts/SushiToken.sol\":7953:7974  dstRepOld.add(amount) */\n      tag_235\n        /* \"contracts/SushiToken.sol\":7967:7973  amount */\n      dup5\n        /* \"contracts/SushiToken.sol\":7953:7962  dstRepOld */\n      dup4\n        /* \"contracts/SushiToken.sol\":7953:7966  dstRepOld.add */\n      tag_131\n      swap1\n        /* \"contracts/SushiToken.sol\":7953:7974  dstRepOld.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/SushiToken.sol\":7933:7974  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":7993:8050  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_236\n        /* \"contracts/SushiToken.sol\":8010:8016  dstRep */\n      dup6\n        /* \"contracts/SushiToken.sol\":8018:8027  dstRepNum */\n      dup5\n        /* \"contracts/SushiToken.sol\":8029:8038  dstRepOld */\n      dup5\n        /* \"contracts/SushiToken.sol\":8040:8049  dstRepNew */\n      dup5\n        /* \"contracts/SushiToken.sol\":7993:8009  _writeCheckpoint */\n      tag_231\n        /* \"contracts/SushiToken.sol\":7993:8050  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/SushiToken.sol\":7681:8066  if (dstRep != address(0)) {\r... */\n      pop\n      pop\n      pop\n    tag_232:\n        /* \"contracts/SushiToken.sol\":7229:8077  if (srcRep != dstRep && amount > 0) {\r... */\n    tag_224:\n        /* \"contracts/SushiToken.sol\":7137:8084  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":6690:7129  function _delegate(address delegator, address delegatee)\r... */\n    tag_144:\n        /* \"contracts/SushiToken.sol\":6781:6804  address currentDelegate */\n      0x00\n        /* \"contracts/SushiToken.sol\":6807:6817  _delegates */\n      0x06\n        /* \"contracts/SushiToken.sol\":6807:6828  _delegates[delegator] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6818:6827  delegator */\n      dup5\n        /* \"contracts/SushiToken.sol\":6807:6828  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":6781:6828  address currentDelegate = _delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":6839:6863  uint256 delegatorBalance */\n      0x00\n        /* \"contracts/SushiToken.sol\":6866:6886  balanceOf(delegator) */\n      tag_238\n        /* \"contracts/SushiToken.sol\":6876:6885  delegator */\n      dup5\n        /* \"contracts/SushiToken.sol\":6866:6875  balanceOf */\n      tag_67\n        /* \"contracts/SushiToken.sol\":6866:6886  balanceOf(delegator) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/SushiToken.sol\":6839:6886  uint256 delegatorBalance = balanceOf(delegator) */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":6967:6976  delegatee */\n      dup3\n        /* \"contracts/SushiToken.sol\":6943:6953  _delegates */\n      0x06\n        /* \"contracts/SushiToken.sol\":6943:6964  _delegates[delegator] */\n      0x00\n        /* \"contracts/SushiToken.sol\":6954:6963  delegator */\n      dup7\n        /* \"contracts/SushiToken.sol\":6943:6964  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SushiToken.sol\":6943:6976  _delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SushiToken.sol\":7038:7047  delegatee */\n      dup3\n        /* \"contracts/SushiToken.sol\":6994:7048  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7021:7036  currentDelegate */\n      dup3\n        /* \"contracts/SushiToken.sol\":6994:7048  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SushiToken.sol\":7010:7019  delegator */\n      dup6\n        /* \"contracts/SushiToken.sol\":6994:7048  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/SushiToken.sol\":7061:7121  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_239\n        /* \"contracts/SushiToken.sol\":7076:7091  currentDelegate */\n      dup3\n        /* \"contracts/SushiToken.sol\":7093:7102  delegatee */\n      dup5\n        /* \"contracts/SushiToken.sol\":7104:7120  delegatorBalance */\n      dup4\n        /* \"contracts/SushiToken.sol\":7061:7075  _moveDelegates */\n      tag_140\n        /* \"contracts/SushiToken.sol\":7061:7121  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/SushiToken.sol\":6690:7129  function _delegate(address delegator, address delegatee)\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":8974:9127  function getChainId() internal pure returns (uint) {\r... */\n    tag_184:\n        /* \"contracts/SushiToken.sol\":9019:9023  uint */\n      0x00\n        /* \"contracts/SushiToken.sol\":9036:9051  uint256 chainId */\n      dup1\n        /* \"contracts/SushiToken.sol\":9084:9093  chainid() */\n      chainid\n        /* \"contracts/SushiToken.sol\":9073:9093  chainId := chainid() */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":9112:9119  chainId */\n      dup1\n        /* \"contracts/SushiToken.sol\":9105:9119  return chainId */\n      swap2\n      pop\n      pop\n        /* \"contracts/SushiToken.sol\":8974:9127  function getChainId() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_206:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_229:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":8092:8797  function _writeCheckpoint(\r... */\n    tag_231:\n        /* \"contracts/SushiToken.sol\":8271:8289  uint32 blockNumber */\n      0x00\n        /* \"contracts/SushiToken.sol\":8292:8369  safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_245\n        /* \"contracts/SushiToken.sol\":8299:8311  block.number */\n      number\n        /* \"contracts/SushiToken.sol\":8292:8369  safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      data_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74\n      0x35\n      swap2\n      codecopy\n        /* \"contracts/SushiToken.sol\":8292:8298  safe32 */\n      tag_246\n        /* \"contracts/SushiToken.sol\":8292:8369  safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_245:\n        /* \"contracts/SushiToken.sol\":8271:8369  uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":8401:8402  0 */\n      0x00\n        /* \"contracts/SushiToken.sol\":8386:8398  nCheckpoints */\n      dup5\n        /* \"contracts/SushiToken.sol\":8386:8402  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/SushiToken.sol\":8386:8471  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n        /* \"contracts/SushiToken.sol\":8460:8471  blockNumber */\n      dup1\n        /* \"contracts/SushiToken.sol\":8406:8471  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":8406:8417  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":8406:8428  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8418:8427  delegatee */\n      dup8\n        /* \"contracts/SushiToken.sol\":8406:8428  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":8406:8446  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8444:8445  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":8429:8441  nCheckpoints */\n      dup8\n        /* \"contracts/SushiToken.sol\":8429:8445  nCheckpoints - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":8406:8446  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":8406:8456  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/SushiToken.sol\":8406:8471  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/SushiToken.sol\":8386:8471  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_247:\n        /* \"contracts/SushiToken.sol\":8382:8721  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/SushiToken.sol\":8537:8545  newVotes */\n      dup2\n        /* \"contracts/SushiToken.sol\":8488:8499  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":8488:8510  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8500:8509  delegatee */\n      dup8\n        /* \"contracts/SushiToken.sol\":8488:8510  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":8488:8528  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8526:8527  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":8511:8523  nCheckpoints */\n      dup8\n        /* \"contracts/SushiToken.sol\":8511:8527  nCheckpoints - 1 */\n      sub\n        /* \"contracts/SushiToken.sol\":8488:8528  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":8488:8534  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x01\n      add\n        /* \"contracts/SushiToken.sol\":8488:8545  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SushiToken.sol\":8382:8721  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n      jump(tag_249)\n    tag_248:\n        /* \"contracts/SushiToken.sol\":8617:8650  Checkpoint(blockNumber, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SushiToken.sol\":8628:8639  blockNumber */\n      dup3\n        /* \"contracts/SushiToken.sol\":8617:8650  Checkpoint(blockNumber, newVotes) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SushiToken.sol\":8641:8649  newVotes */\n      dup4\n        /* \"contracts/SushiToken.sol\":8617:8650  Checkpoint(blockNumber, newVotes) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SushiToken.sol\":8578:8589  checkpoints */\n      0x07\n        /* \"contracts/SushiToken.sol\":8578:8600  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8590:8599  delegatee */\n      dup8\n        /* \"contracts/SushiToken.sol\":8578:8600  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":8578:8614  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8601:8613  nCheckpoints */\n      dup7\n        /* \"contracts/SushiToken.sol\":8578:8614  checkpoints[delegatee][nCheckpoints] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SushiToken.sol\":8578:8650  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/SushiToken.sol\":8708:8709  1 */\n      0x01\n        /* \"contracts/SushiToken.sol\":8693:8705  nCheckpoints */\n      dup5\n        /* \"contracts/SushiToken.sol\":8693:8709  nCheckpoints + 1 */\n      add\n        /* \"contracts/SushiToken.sol\":8665:8679  numCheckpoints */\n      0x08\n        /* \"contracts/SushiToken.sol\":8665:8690  numCheckpoints[delegatee] */\n      0x00\n        /* \"contracts/SushiToken.sol\":8680:8689  delegatee */\n      dup8\n        /* \"contracts/SushiToken.sol\":8665:8690  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SushiToken.sol\":8665:8709  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SushiToken.sol\":8382:8721  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n    tag_249:\n        /* \"contracts/SushiToken.sol\":8759:8768  delegatee */\n      dup5\n        /* \"contracts/SushiToken.sol\":8738:8789  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"contracts/SushiToken.sol\":8770:8778  oldVotes */\n      dup5\n        /* \"contracts/SushiToken.sol\":8780:8788  newVotes */\n      dup5\n        /* \"contracts/SushiToken.sol\":8738:8789  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SushiToken.sol\":8092:8797  function _writeCheckpoint(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SushiToken.sol\":8805:8966  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r... */\n    tag_246:\n        /* \"contracts/SushiToken.sol\":8880:8886  uint32 */\n      0x00\n        /* \"contracts/SushiToken.sol\":8911:8916  2**32 */\n      0x0100000000\n        /* \"contracts/SushiToken.sol\":8907:8908  n */\n      dup4\n        /* \"contracts/SushiToken.sol\":8907:8916  n < 2**32 */\n      lt\n        /* \"contracts/SushiToken.sol\":8918:8930  errorMessage */\n      dup3\n        /* \"contracts/SushiToken.sol\":8899:8931  require(n < 2**32, errorMessage) */\n      swap1\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_252:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_254\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_252)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_255\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_255:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n      pop\n        /* \"contracts/SushiToken.sol\":8956:8957  n */\n      dup3\n        /* \"contracts/SushiToken.sol\":8942:8958  return uint32(n) */\n      swap1\n      pop\n        /* \"contracts/SushiToken.sol\":8805:8966  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_160:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c 53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74 53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33 53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e 53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633 53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212204bf0b2f06c96b39da24ddde562a4a9833f7065fa9bfacb47b4fcdb1a5560218a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f5375736869546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f53555348490000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200018d565b508060049080519060200190620000af9291906200018d565b506012600560006101000a81548160ff021916908360ff16021790555050506000620000e06200018560201b60201c565b905080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000233565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d057805160ff191683800117855562000201565b8280016001018555821562000201579182015b8281111562000200578251825591602001919060010190620001e3565b5b50905062000210919062000214565b5090565b5b808211156200022f57600081600090555060010162000215565b5090565b612e7880620002436000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461086e578063e7a324dc146108e6578063f1127ed814610904578063f2fde38b1461097957610173565b8063a9059cbb14610739578063b4b5ea571461079d578063c3cda520146107f557610173565b8063715018a61461055a578063782d6fe1146105645780637ecebe00146105c65780638da5cb5b1461061e57806395d89b4114610652578063a457c2d7146106d557610173565b80633950935111610130578063395093511461034057806340c10f19146103a4578063587cde1e146103f25780635c19a95c146104605780636fcfff45146104a457806370a082311461050257610173565b806306fdde0314610178578063095ea7b3146101fb57806318160ddd1461025f57806320606b701461027d57806323b872dd1461029b578063313ce5671461031f575b600080fd5b6101806109bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a5f565b60405180821515815260200191505060405180910390f35b610267610a7d565b6040518082815260200191505060405180910390f35b610285610a87565b6040518082815260200191505060405180910390f35b610307600480360360608110156102b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aab565b60405180821515815260200191505060405180910390f35b610327610b84565b604051808260ff16815260200191505060405180910390f35b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9b565b60405180821515815260200191505060405180910390f35b6103f0600480360360408110156103ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4e565b005b6104346004803603602081101561040857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d76565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ddf565b005b6104e6600480360360208110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dec565b604051808263ffffffff16815260200191505060405180910390f35b6105446004803603602081101561051857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e0f565b6040518082815260200191505060405180910390f35b610562610e57565b005b6105b06004803603604081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc7565b6040518082815260200191505060405180910390f35b610608600480360360208110156105dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611388565b6040518082815260200191505060405180910390f35b6106266113a0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61065a6113ca565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069a57808201518184015260208101905061067f565b50505050905090810190601f1680156106c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610721600480360360408110156106eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061146c565b60405180821515815260200191505060405180910390f35b6107856004803603604081101561074f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611539565b60405180821515815260200191505060405180910390f35b6107df600480360360208110156107b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611557565b6040518082815260200191505060405180910390f35b61086c600480360360c081101561080b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061162d565b005b6108d06004803603604081101561088457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611991565b6040518082815260200191505060405180910390f35b6108ee611a18565b6040518082815260200191505060405180910390f35b6109566004803603604081101561091a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611a3c565b604051808363ffffffff1681526020018281526020019250505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a7d565b005b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b5050505050905090565b6000610a73610a6c611c72565b8484611c7a565b6001905092915050565b6000600254905090565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610ab8848484611e71565b610b7984610ac4611c72565b610b7485604051806060016040528060288152602001612d6360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b2a611c72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121329092919063ffffffff16565b611c7a565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610c44610ba8611c72565b84610c3f8560016000610bb9611c72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ec90919063ffffffff16565b611c7a565b6001905092915050565b610c56611c72565b73ffffffffffffffffffffffffffffffffffffffff16610c746113a0565b73ffffffffffffffffffffffffffffffffffffffff1614610cfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d078282612274565b610d726000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361243b565b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610de933826126d8565b50565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e5f611c72565b73ffffffffffffffffffffffffffffffffffffffff16610e7d6113a0565b73ffffffffffffffffffffffffffffffffffffffff1614610f06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000438210611021576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612d3b6028913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16141561108e576000915050611382565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161161117857600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060010154915050611382565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611156111f9576000915050611382565b6000806001830390505b8163ffffffff168163ffffffff16111561131c576000600283830363ffffffff168161122b57fe5b0482039050611238612c2d565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff1614156112f457806020015195505050505050611382565b86816000015163ffffffff16101561130e57819350611315565b6001820392505b5050611203565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b60096020528060005260406000206000915090505481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b5050505050905090565b600061152f611479611c72565b8461152a85604051806060016040528060258152602001612e1e60259139600160006114a3611c72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121329092919063ffffffff16565b611c7a565b6001905092915050565b600061154d611546611c72565b8484611e71565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116115c1576000611625565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666116586109bd565b80519060200120611667612849565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156117eb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561187d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612dae6027913960400191505060405180910390fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612d8b6023913960400191505060405180910390fd5b8742111561197b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612c716027913960400191505060405180910390fd5b611985818b6126d8565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6007602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611a85611c72565b73ffffffffffffffffffffffffffffffffffffffff16611aa36113a0565b73ffffffffffffffffffffffffffffffffffffffff1614611b2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c986026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612dfa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cbe6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612dd56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c4e6023913960400191505060405180910390fd5b611f88838383612856565b611ff381604051806060016040528060268152602001612ce0602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121329092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612086816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ec90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906121df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121a4578082015181840152602081019050612189565b50505050905090810190601f1680156121d15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b60008082840190508381101561226a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61232360008383612856565b612338816002546121ec90919063ffffffff16565b60028190555061238f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ec90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156124775750600081115b156126d357600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125a7576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff161161251a57600061257e565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612595848361285b90919063ffffffff16565b90506125a3868484846128de565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146126d2576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116126455760006126a9565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b905060006126c084836121ec90919063ffffffff16565b90506126ce858484846128de565b5050505b5b505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600061274784610e0f565b905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461284382848361243b565b50505050565b6000804690508091505090565b505050565b6000828211156128d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600061290243604051806060016040528060358152602001612d0660359139612b72565b905060008463ffffffff1611801561299757508063ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612a085781600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612b15565b60405180604001604052808263ffffffff16815260200183815250600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612be8578082015181840152602081019050612bcd565b50505050905090810190601f168015612c155780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737353555348493a3a64656c656761746542795369673a207369676e617475726520657870697265644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636553555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747353555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636553555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e636553555348493a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204bf0b2f06c96b39da24ddde562a4a9833f7065fa9bfacb47b4fcdb1a5560218a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5375736869546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355534849000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x18D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x18D JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH3 0xE0 PUSH3 0x185 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x233 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1D0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x201 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x201 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x200 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x210 SWAP2 SWAP1 PUSH3 0x214 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x215 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2E78 DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x979 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x7F5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6D5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x502 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0xE57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65A PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x785 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x162D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8EE PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x956 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH2 0xA6C PUSH2 0x1C72 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 DUP5 DUP5 DUP5 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0xB79 DUP5 PUSH2 0xAC4 PUSH2 0x1C72 JUMP JUMPDEST PUSH2 0xB74 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D63 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB2A PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2132 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0xBA8 PUSH2 0x1C72 JUMP JUMPDEST DUP5 PUSH2 0xC3F DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBB9 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC56 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC74 PUSH2 0x13A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD07 DUP3 DUP3 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0xD72 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x243B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE9 CALLER DUP3 PUSH2 0x26D8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5F PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE7D PUSH2 0x13A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D3B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x108E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x1178 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x122B JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x1238 PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x12F4 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x1382 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x130E JUMPI DUP2 SWAP4 POP PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1462 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1437 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1462 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1445 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152F PUSH2 0x1479 PUSH2 0x1C72 JUMP JUMPDEST DUP5 PUSH2 0x152A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E1E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x14A3 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2132 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D PUSH2 0x1546 PUSH2 0x1C72 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x15C1 JUMPI PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x1658 PUSH2 0x9BD JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1667 PUSH2 0x2849 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x187D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DAE PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D8B PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x197B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C71 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1985 DUP2 DUP12 PUSH2 0x26D8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1A85 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AA3 PUSH2 0x13A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C98 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DFA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DD5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C4E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F88 DUP4 DUP4 DUP4 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x1FF3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CE0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2132 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2086 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x21DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21A4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2189 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2317 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2323 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x2338 DUP2 PUSH1 0x2 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x238F DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2477 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x26D3 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25A7 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x251A JUMPI PUSH1 0x0 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2595 DUP5 DUP4 PUSH2 0x285B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x25A3 DUP7 DUP5 DUP5 DUP5 PUSH2 0x28DE JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26D2 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2645 JUMPI PUSH1 0x0 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26C0 DUP5 DUP4 PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x26CE DUP6 DUP5 DUP5 DUP5 PUSH2 0x28DE JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2747 DUP5 PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2843 DUP3 DUP5 DUP4 PUSH2 0x243B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x28D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2902 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D06 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x2B72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2997 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2A08 JUMPI DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2C23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BE8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BCD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C15 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x7265644F776E61626C65 GASPRICE KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65535553 0x48 0x49 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204BF0 0xB2 CREATE PUSH13 0x96B39DA24DDDE562A4A9833F70 PUSH6 0xFA9BFACB47B4 0xFC 0xDB BYTE SSTORE PUSH1 0x21 DUP11 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "200:8930:0:-:0;;;;;;;;;;;;;1958:145:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;884:17:1;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;200:8930:0;;598:104:5;651:15;685:10;678:17;;598:104;:::o;200:8930:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461086e578063e7a324dc146108e6578063f1127ed814610904578063f2fde38b1461097957610173565b8063a9059cbb14610739578063b4b5ea571461079d578063c3cda520146107f557610173565b8063715018a61461055a578063782d6fe1146105645780637ecebe00146105c65780638da5cb5b1461061e57806395d89b4114610652578063a457c2d7146106d557610173565b80633950935111610130578063395093511461034057806340c10f19146103a4578063587cde1e146103f25780635c19a95c146104605780636fcfff45146104a457806370a082311461050257610173565b806306fdde0314610178578063095ea7b3146101fb57806318160ddd1461025f57806320606b701461027d57806323b872dd1461029b578063313ce5671461031f575b600080fd5b6101806109bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a5f565b60405180821515815260200191505060405180910390f35b610267610a7d565b6040518082815260200191505060405180910390f35b610285610a87565b6040518082815260200191505060405180910390f35b610307600480360360608110156102b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aab565b60405180821515815260200191505060405180910390f35b610327610b84565b604051808260ff16815260200191505060405180910390f35b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9b565b60405180821515815260200191505060405180910390f35b6103f0600480360360408110156103ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4e565b005b6104346004803603602081101561040857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d76565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ddf565b005b6104e6600480360360208110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dec565b604051808263ffffffff16815260200191505060405180910390f35b6105446004803603602081101561051857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e0f565b6040518082815260200191505060405180910390f35b610562610e57565b005b6105b06004803603604081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc7565b6040518082815260200191505060405180910390f35b610608600480360360208110156105dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611388565b6040518082815260200191505060405180910390f35b6106266113a0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61065a6113ca565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069a57808201518184015260208101905061067f565b50505050905090810190601f1680156106c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610721600480360360408110156106eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061146c565b60405180821515815260200191505060405180910390f35b6107856004803603604081101561074f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611539565b60405180821515815260200191505060405180910390f35b6107df600480360360208110156107b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611557565b6040518082815260200191505060405180910390f35b61086c600480360360c081101561080b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061162d565b005b6108d06004803603604081101561088457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611991565b6040518082815260200191505060405180910390f35b6108ee611a18565b6040518082815260200191505060405180910390f35b6109566004803603604081101561091a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611a3c565b604051808363ffffffff1681526020018281526020019250505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a7d565b005b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b5050505050905090565b6000610a73610a6c611c72565b8484611c7a565b6001905092915050565b6000600254905090565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610ab8848484611e71565b610b7984610ac4611c72565b610b7485604051806060016040528060288152602001612d6360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b2a611c72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121329092919063ffffffff16565b611c7a565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610c44610ba8611c72565b84610c3f8560016000610bb9611c72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ec90919063ffffffff16565b611c7a565b6001905092915050565b610c56611c72565b73ffffffffffffffffffffffffffffffffffffffff16610c746113a0565b73ffffffffffffffffffffffffffffffffffffffff1614610cfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d078282612274565b610d726000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361243b565b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610de933826126d8565b50565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e5f611c72565b73ffffffffffffffffffffffffffffffffffffffff16610e7d6113a0565b73ffffffffffffffffffffffffffffffffffffffff1614610f06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000438210611021576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612d3b6028913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16141561108e576000915050611382565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161161117857600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060010154915050611382565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611156111f9576000915050611382565b6000806001830390505b8163ffffffff168163ffffffff16111561131c576000600283830363ffffffff168161122b57fe5b0482039050611238612c2d565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff1614156112f457806020015195505050505050611382565b86816000015163ffffffff16101561130e57819350611315565b6001820392505b5050611203565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b60096020528060005260406000206000915090505481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b5050505050905090565b600061152f611479611c72565b8461152a85604051806060016040528060258152602001612e1e60259139600160006114a3611c72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121329092919063ffffffff16565b611c7a565b6001905092915050565b600061154d611546611c72565b8484611e71565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116115c1576000611625565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666116586109bd565b80519060200120611667612849565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156117eb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561187d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612dae6027913960400191505060405180910390fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612d8b6023913960400191505060405180910390fd5b8742111561197b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612c716027913960400191505060405180910390fd5b611985818b6126d8565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6007602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611a85611c72565b73ffffffffffffffffffffffffffffffffffffffff16611aa36113a0565b73ffffffffffffffffffffffffffffffffffffffff1614611b2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c986026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612dfa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cbe6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612dd56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c4e6023913960400191505060405180910390fd5b611f88838383612856565b611ff381604051806060016040528060268152602001612ce0602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121329092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612086816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ec90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906121df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121a4578082015181840152602081019050612189565b50505050905090810190601f1680156121d15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b60008082840190508381101561226a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61232360008383612856565b612338816002546121ec90919063ffffffff16565b60028190555061238f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ec90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156124775750600081115b156126d357600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125a7576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff161161251a57600061257e565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612595848361285b90919063ffffffff16565b90506125a3868484846128de565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146126d2576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116126455760006126a9565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b905060006126c084836121ec90919063ffffffff16565b90506126ce858484846128de565b5050505b5b505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600061274784610e0f565b905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461284382848361243b565b50505050565b6000804690508091505090565b505050565b6000828211156128d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600061290243604051806060016040528060358152602001612d0660359139612b72565b905060008463ffffffff1611801561299757508063ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612a085781600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612b15565b60405180604001604052808263ffffffff16815260200183815250600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612be8578082015181840152602081019050612bcd565b50505050905090810190601f168015612c155780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737353555348493a3a64656c656761746542795369673a207369676e617475726520657870697265644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636553555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747353555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636553555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e636553555348493a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204bf0b2f06c96b39da24ddde562a4a9833f7065fa9bfacb47b4fcdb1a5560218a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x979 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x7F5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6D5 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x502 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0xE57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65A PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x785 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x162D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8EE PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x956 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH2 0xA6C PUSH2 0x1C72 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 DUP5 DUP5 DUP5 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0xB79 DUP5 PUSH2 0xAC4 PUSH2 0x1C72 JUMP JUMPDEST PUSH2 0xB74 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D63 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB2A PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2132 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0xBA8 PUSH2 0x1C72 JUMP JUMPDEST DUP5 PUSH2 0xC3F DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBB9 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC56 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC74 PUSH2 0x13A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD07 DUP3 DUP3 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0xD72 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x243B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE9 CALLER DUP3 PUSH2 0x26D8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5F PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE7D PUSH2 0x13A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D3B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x108E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x1178 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x122B JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x1238 PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x12F4 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x1382 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x130E JUMPI DUP2 SWAP4 POP PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1462 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1437 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1462 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1445 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152F PUSH2 0x1479 PUSH2 0x1C72 JUMP JUMPDEST DUP5 PUSH2 0x152A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E1E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x14A3 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2132 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D PUSH2 0x1546 PUSH2 0x1C72 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x15C1 JUMPI PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x1658 PUSH2 0x9BD JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1667 PUSH2 0x2849 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x187D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DAE PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D8B PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x197B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C71 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1985 DUP2 DUP12 PUSH2 0x26D8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1A85 PUSH2 0x1C72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AA3 PUSH2 0x13A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C98 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DFA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DD5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C4E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F88 DUP4 DUP4 DUP4 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x1FF3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CE0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2132 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2086 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x21DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21A4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2189 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21D1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2317 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2323 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x2338 DUP2 PUSH1 0x2 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x238F DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2477 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x26D3 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25A7 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x251A JUMPI PUSH1 0x0 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2595 DUP5 DUP4 PUSH2 0x285B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x25A3 DUP7 DUP5 DUP5 DUP5 PUSH2 0x28DE JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26D2 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2645 JUMPI PUSH1 0x0 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26C0 DUP5 DUP4 PUSH2 0x21EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x26CE DUP6 DUP5 DUP5 DUP5 PUSH2 0x28DE JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2747 DUP5 PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2843 DUP3 DUP5 DUP4 PUSH2 0x243B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x28D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2902 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D06 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x2B72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2997 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2A08 JUMPI DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2C23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BE8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BCD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C15 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x7265644F776E61626C65 GASPRICE KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65535553 0x48 0x49 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204BF0 0xB2 CREATE PUSH13 0x96B39DA24DDDE562A4A9833F70 PUSH6 0xFA9BFACB47B4 0xFC 0xDB BYTE SSTORE PUSH1 0x21 DUP11 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "200:8930:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1546:122:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;366:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2529:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2822:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1424:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:145:1;;;:::i;:::-;;5428:1254:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1960:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1085:85:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2370:93:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4742:255:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3360:1181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3957:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1762:117:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1285:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:240:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2168:89:3;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;1546:122:0:-;1588:80;1546:122;:::o;4877:317:3:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;366:162:0:-;1308:12:1;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;438:19:0::1;444:3;449:7;438:5;:19::i;:::-;468:52;491:1;495:10;:15;506:3;495:15;;;;;;;;;;;;;;;;;;;;;;;;;512:7;468:14;:52::i;:::-;366:162:::0;;:::o;2529:149::-;2617:7;2649:10;:21;2660:9;2649:21;;;;;;;;;;;;;;;;;;;;;;;;;2642:28;;2529:149;;;:::o;2822:104::-;2886:32;2896:10;2908:9;2886;:32::i;:::-;2822:104;:::o;1424:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;3399:125:3:-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;1717:145:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;5428:1254:0:-;5536:7;5583:12;5569:11;:26;5561:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:19;5675:14;:23;5690:7;5675:23;;;;;;;;;;;;;;;;;;;;;;;;;5653:45;;5729:1;5713:12;:17;;;5709:58;;;5754:1;5747:8;;;;;5709:58;5879:11;5827;:20;5839:7;5827:20;;;;;;;;;;;;;;;:38;5863:1;5848:12;:16;5827:38;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:63;;;5823:147;;5914:11;:20;5926:7;5914:20;;;;;;;;;;;;;;;:38;5950:1;5935:12;:16;5914:38;;;;;;;;;;;;;;;:44;;;5907:51;;;;;5823:147;6067:11;6031;:20;6043:7;6031:20;;;;;;;;;;;;;;;:23;6052:1;6031:23;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;6027:88;;;6102:1;6095:8;;;;;6027:88;6127:12;6154;6184:1;6169:12;:16;6154:31;;6196:428;6211:5;6203:13;;:5;:13;;;6196:428;;;6233:13;6275:1;6266:5;6258;:13;6257:19;;;;;;;;6249:5;:27;6233:43;;6318:20;;:::i;:::-;6341:11;:20;6353:7;6341:20;;;;;;;;;;;;;;;:28;6362:6;6341:28;;;;;;;;;;;;;;;6318:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6404:11;6388:2;:12;;;:27;;;6384:229;;;6443:2;:8;;;6436:15;;;;;;;;;6384:229;6492:11;6477:2;:12;;;:26;;;6473:140;;;6532:6;6524:14;;6473:140;;;6596:1;6587:6;:10;6579:18;;6473:140;6196:428;;;;;6641:11;:20;6653:7;6641:20;;;;;;;;;;;;;;;:27;6662:5;6641:27;;;;;;;;;;;;;;;:33;;;6634:40;;;;;5428:1254;;;;;:::o;1960:39::-;;;;;;;;;;;;;;;;;:::o;1085:85:1:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;2370:93:3:-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;4742:255:0:-;4834:7;4859:19;4881:14;:23;4896:7;4881:23;;;;;;;;;;;;;;;;;;;;;;;;;4859:45;;4937:1;4922:12;:16;;;:67;;4988:1;4922:67;;;4941:11;:20;4953:7;4941:20;;;;;;;;;;;;;;;:38;4977:1;4962:12;:16;4941:38;;;;;;;;;;;;;;;:44;;;4922:67;4915:74;;;4742:255;;;:::o;3360:1181::-;3553:23;1588:80;3682:6;:4;:6::i;:::-;3666:24;;;;;;3709:12;:10;:12::i;:::-;3748:4;3603:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3579:200;;;;;;3553:226;;3792:18;1808:71;3904:9;3932:5;3956:6;3837:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3813:175;;;;;;3792:196;;4001:14;4106:15;4140:10;4042:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4018:158;;;;;;4001:175;;4189:17;4209:26;4219:6;4227:1;4230;4233;4209:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4189:46;;4275:1;4254:23;;:9;:23;;;;4246:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4349:6;:17;4356:9;4349:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;4340:5;:28;4332:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4434:6;4427:3;:13;;4419:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4502:31;4512:9;4523;4502;:31::i;:::-;4495:38;;;;3360:1181;;;;;;:::o;3957:149:3:-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;1762:117:0:-;1808:71;1762:117;:::o;1285:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;9355:340:3:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;7832:370:3:-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;:16;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;7137:947:0:-;7243:6;7233:16;;:6;:16;;;;:30;;;;;7262:1;7253:6;:10;7233:30;7229:848;;;7302:1;7284:20;;:6;:20;;;7280:385;;7373:16;7392:14;:22;7407:6;7392:22;;;;;;;;;;;;;;;;;;;;;;;;;7373:41;;7433:17;7465:1;7453:9;:13;;;:60;;7512:1;7453:60;;;7469:11;:19;7481:6;7469:19;;;;;;;;;;;;;;;:34;7501:1;7489:9;:13;7469:34;;;;;;;;;;;;;;;:40;;;7453:60;7433:80;;7532:17;7552:21;7566:6;7552:9;:13;;:21;;;;:::i;:::-;7532:41;;7592:57;7609:6;7617:9;7628;7639;7592:16;:57::i;:::-;7280:385;;;;7703:1;7685:20;;:6;:20;;;7681:385;;7774:16;7793:14;:22;7808:6;7793:22;;;;;;;;;;;;;;;;;;;;;;;;;7774:41;;7834:17;7866:1;7854:9;:13;;;:60;;7913:1;7854:60;;;7870:11;:19;7882:6;7870:19;;;;;;;;;;;;;;;:34;7902:1;7890:9;:13;7870:34;;;;;;;;;;;;;;;:40;;;7854:60;7834:80;;7933:17;7953:21;7967:6;7953:9;:13;;:21;;;;:::i;:::-;7933:41;;7993:57;8010:6;8018:9;8029;8040;7993:16;:57::i;:::-;7681:385;;;;7229:848;7137:947;;;:::o;6690:439::-;6781:23;6807:10;:21;6818:9;6807:21;;;;;;;;;;;;;;;;;;;;;;;;;6781:47;;6839:24;6866:20;6876:9;6866;:20::i;:::-;6839:47;;6967:9;6943:10;:21;6954:9;6943:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;7038:9;6994:54;;7021:15;6994:54;;7010:9;6994:54;;;;;;;;;;;;7061:60;7076:15;7093:9;7104:16;7061:14;:60::i;:::-;6690:439;;;;:::o;8974:153::-;9019:4;9036:15;9084:9;9073:20;;9112:7;9105:14;;;8974:153;:::o;10701:92:3:-;;;;:::o;3136:155:2:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;8092:705:0:-;8271:18;8292:77;8299:12;8292:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;8271:98;;8401:1;8386:12;:16;;;:85;;;;;8460:11;8406:65;;:11;:22;8418:9;8406:22;;;;;;;;;;;;;;;:40;8444:1;8429:12;:16;8406:40;;;;;;;;;;;;;;;:50;;;;;;;;;;;;:65;;;8386:85;8382:339;;;8537:8;8488:11;:22;8500:9;8488:22;;;;;;;;;;;;;;;:40;8526:1;8511:12;:16;8488:40;;;;;;;;;;;;;;;:46;;:57;;;;8382:339;;;8617:33;;;;;;;;8628:11;8617:33;;;;;;8641:8;8617:33;;;8578:11;:22;8590:9;8578:22;;;;;;;;;;;;;;;:36;8601:12;8578:36;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8708:1;8693:12;:16;8665:14;:25;8680:9;8665:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;8382:339;8759:9;8738:51;;;8770:8;8780;8738:51;;;;;;;;;;;;;;;;;;;;;;;;8092:705;;;;;:::o;8805:161::-;8880:6;8911:5;8907:1;:9;8918:12;8899:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8956:1;8942:16;;8805:161;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2379200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "271",
								"DOMAIN_TYPEHASH()": "295",
								"allowance(address,address)": "1365",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1329",
								"checkpoints(address,uint32)": "2243",
								"decimals()": "1189",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1305",
								"getCurrentVotes(address)": "2334",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1236",
								"numCheckpoints(address)": "1311",
								"owner()": "1194",
								"renounceOwnership()": "24505",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"getChainId()": "35",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "5375736869546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "5355534849000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 884,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 9130,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bf0b2f06c96b39da24ddde562a4a9833f7065fa9bfacb47b4fcdb1a5560218a64736f6c634300060c0033",
									".code": [
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "E7A324DC"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "F1127ED8"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "C3CDA520"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "20606B70"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 9130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 366,
											"end": 528,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1668,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 3,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 438,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 444,
											"end": 447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 449,
											"end": 456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 438,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 438,
											"end": 457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 438,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 509,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 512,
											"end": 519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 468,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 528,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1473,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5595,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5595,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH data",
											"source": 0,
											"value": "95F5BCA076212943AAD5C226142010AD55D0096DBA63CA905D770F4FE4AFFF33"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5561,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 5672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5689,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5675,
											"end": 5698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 5698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 5698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5709,
											"end": 5767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5747,
											"end": 5755,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5767,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5709,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5838,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5846,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5864,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5848,
											"end": 5864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5823,
											"end": 5970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5925,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 5933,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5935,
											"end": 5951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5958,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5914,
											"end": 5958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5907,
											"end": 5958,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5970,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5823,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6042,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6078,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6027,
											"end": 6115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6027,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6027,
											"end": 6115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6027,
											"end": 6115,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6027,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6203,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6203,
											"end": 6216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6203,
											"end": 6208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6203,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6203,
											"end": 6216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6203,
											"end": 6216,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 6246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6276,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6266,
											"end": 6271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6276,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6249,
											"end": 6276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 6276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 6276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6318,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6318,
											"end": 6338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6318,
											"end": 6338,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6318,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6352,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6360,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6415,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6388,
											"end": 6415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6384,
											"end": 6613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6443,
											"end": 6451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6613,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6384,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6503,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6477,
											"end": 6503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6532,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6538,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6579,
											"end": 6597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6579,
											"end": 6597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6473,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6196,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6641,
											"end": 6674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1999,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 3,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4859,
											"end": 4878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4895,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4903,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 4904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 4904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4922,
											"end": 4938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4938,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4962,
											"end": 4974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4979,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4941,
											"end": 4985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4922,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4997,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3682,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3709,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3709,
											"end": 3721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3709,
											"end": 3721,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3709,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3748,
											"end": 3752,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3937,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4121,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4189,
											"end": 4206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4189,
											"end": 4235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4189,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH data",
											"source": 0,
											"value": "AEEB870860C7451819EDC560C5520E1197C2D62C04CC23DEF3A21B91410D0633"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4246,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4340,
											"end": 4345,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4340,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH data",
											"source": 0,
											"value": "A1E65DB8426B65AD764814369E421D0B17D63E03DC4C1056A693E1CC89FB7A3E"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4332,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4440,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4430,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4440,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH data",
											"source": 0,
											"value": "18FECDF225B5E9A1D03E234E6893B777C717A928A78496F199BB78499B5DCD1C"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4419,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4502,
											"end": 4533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4502,
											"end": 4533,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4502,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 4541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1879,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 3,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 3,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 3,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 3,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 3,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8109,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8179,
											"end": 8186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8188,
											"end": 8194,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7137,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7137,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7263,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 8077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 7229,
											"end": 8077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7487,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7502,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7489,
											"end": 7498,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7509,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7469,
											"end": 7509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7453,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7552,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7617,
											"end": 7626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 7592,
											"end": 7649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7592,
											"end": 7649,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7592,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 7280,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7703,
											"end": 7704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7685,
											"end": 7705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7685,
											"end": 7705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7705,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7807,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7793,
											"end": 7815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7854,
											"end": 7867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7867,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7903,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7890,
											"end": 7899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7890,
											"end": 7903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7854,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7953,
											"end": 7966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8010,
											"end": 8016,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 7993,
											"end": 8050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7993,
											"end": 8050,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7993,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7681,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 8077,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 7229,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7137,
											"end": 8084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7137,
											"end": 8084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7137,
											"end": 8084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7137,
											"end": 8084,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6807,
											"end": 6828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6876,
											"end": 6885,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6967,
											"end": 6976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6953,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6954,
											"end": 6963,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7048,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7061,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7076,
											"end": 7091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7104,
											"end": 7120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7061,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7061,
											"end": 7121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7061,
											"end": 7121,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7061,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 7129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8974,
											"end": 9127,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8974,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9112,
											"end": 9119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8974,
											"end": 9127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8974,
											"end": 9127,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8299,
											"end": 8311,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH data",
											"source": 0,
											"value": "80202FADC1798AD44893C1A6A1A3B4079151936A969E36FA214486A4E00F3A74"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8292,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8398,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8417,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8427,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8429,
											"end": 8441,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8406,
											"end": 8471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8406,
											"end": 8471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 8386,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8499,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8534,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8488,
											"end": 8534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8590,
											"end": 8599,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8613,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8614,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8693,
											"end": 8705,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8382,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 8770,
											"end": 8778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8780,
											"end": 8788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8789,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8880,
											"end": 8886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8916,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8907,
											"end": 8916,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8966,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"18FECDF225B5E9A1D03E234E6893B777C717A928A78496F199BB78499B5DCD1C": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"80202FADC1798AD44893C1A6A1A3B4079151936A969E36FA214486A4E00F3A74": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"95F5BCA076212943AAD5C226142010AD55D0096DBA63CA905D770F4FE4AFFF33": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A1E65DB8426B65AD764814369E421D0B17D63E03DC4C1056A693E1CC89FB7A3E": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"AEEB870860C7451819EDC560C5520E1197C2D62C04CC23DEF3A21B91410D0633": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegates(address)\":{\"params\":{\"delegator\":\"The address to get delegatee for\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SushiToken.sol\":\"SushiToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SushiToken.sol\":{\"keccak256\":\"0x3e10a5c247805fdd23472433590b9e43b74da210e99fe43a81f46317a6ca4561\",\"urls\":[\"bzz-raw://df4fa8e52226ebe2df5a71bb6ae48495a82036a8ceac45cb4124cba6540e2dac\",\"dweb:/ipfs/QmPvsJH3J8RCUWwZpHeK8DYuC13FaHJeT1gHQp7AnHpsdx\"]},\"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1120,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1126,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1128,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1130,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1132,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1134,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 646,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 41,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "_delegates",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 53,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "checkpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)46_storage))"
							},
							{
								"astId": 58,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 75,
								"contract": "contracts/SushiToken.sol:SushiToken",
								"label": "nonces",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)46_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)46_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)46_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct SushiToken.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)46_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)46_storage": {
								"encoding": "inplace",
								"label": "struct SushiToken.Checkpoint",
								"members": [
									{
										"astId": 43,
										"contract": "contracts/SushiToken.sol:SushiToken",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 45,
										"contract": "contracts/SushiToken.sol:SushiToken",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							}
						},
						"version": 1
					}
				}
			},
			"deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 646,
								"contract": "deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"deps/npm/@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf096d74adb6058621162ffd2a1f7fc41a996212f9a3d931f4980499d97d81a664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf096d74adb6058621162ffd2a1f7fc41a996212f9a3d931f4980499d97d81a664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MULMOD PUSH14 0x74ADB6058621162FFD2A1F7FC41A SWAP10 PUSH3 0x12F9A3 0xD9 BALANCE DELEGATECALL SWAP9 DIV SWAP10 0xD9 PUSH30 0x81A664736F6C634300060C00330000000000000000000000000000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf096d74adb6058621162ffd2a1f7fc41a996212f9a3d931f4980499d97d81a664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MULMOD PUSH14 0x74ADB6058621162FFD2A1F7FC41A SWAP10 PUSH3 0x12F9A3 0xD9 BALANCE DELEGATECALL SWAP9 DIV SWAP10 0xD9 PUSH30 0x81A664736F6C634300060C00330000000000000000000000000000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf096d74adb6058621162ffd2a1f7fc41a996212f9a3d931f4980499d97d81a664736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220f816b4f647f230f3f230391f63ab848b40794c30d7d960c1a97e32bf2c8a261864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200139f3803806200139f833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110de80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f816b4f647f230f3f230391f63ab848b40794c30d7d960c1a97e32bf2c8a261864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x139F CODESIZE SUB DUP1 PUSH3 0x139F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220F816 0xB4 0xF6 SELFBALANCE CALLCODE ADDRESS RETURN CALLCODE ADDRESS CODECOPY 0x1F PUSH4 0xAB848B40 PUSH26 0x4C30D7D960C1A97E32BF2C8A261864736F6C634300060C003300 ",
							"sourceMap": "1321:9474:3:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f816b4f647f230f3f230391f63ab848b40794c30d7d960c1a97e32bf2c8a261864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220F816 0xB4 0xF6 SELFBALANCE CALLCODE ADDRESS RETURN CALLCODE ADDRESS CODECOPY 0x1F PUSH4 0xAB848B40 PUSH26 0x4C30D7D960C1A97E32BF2C8A261864736F6C634300060C003300 ",
							"sourceMap": "1321:9474:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;9355:340:3:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:3:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f816b4f647f230f3f230391f63ab848b40794c30d7d960c1a97e32bf2c8a261864736f6c634300060c0033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 3,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 3,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 3,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 3,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 3,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 3,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 3,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"deps/npm/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1120,
								"contract": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1126,
								"contract": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1128,
								"contract": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1130,
								"contract": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1132,
								"contract": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1134,
								"contract": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/SushiToken.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SushiToken.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "7816",
				"formattedMessage": "contracts/SushiToken.sol:22:5: Warning: Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.\n    /// @notice A record of each accounts delegate\n    ^--------------------------------------------^\n",
				"message": "Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.",
				"severity": "warning",
				"sourceLocation": {
					"end": 986,
					"file": "contracts/SushiToken.sol",
					"start": 940
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SushiToken.sol": {
				"ast": {
					"absolutePath": "contracts/SushiToken.sol",
					"exportedSymbols": {
						"SushiToken": [
							638
						]
					},
					"id": 639,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 1607,
							"src": "29:67:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "deps/npm/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../deps/npm/@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 749,
							"src": "98:64:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"hexValue": "5375736869546f6b656e",
											"id": 5,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "229:12:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_98c9bb91bdae9b7533d32a81c3a7219e9719600439224699b203450ac6111745",
												"typeString": "literal_string \"SushiToken\""
											},
											"value": "SushiToken"
										},
										{
											"argumentTypes": null,
											"hexValue": "5355534849",
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "243:7:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_bbf304add43db0a05d104474683215530b076be1dfdf72a4d53a1e443d8e4c21",
												"typeString": "literal_string \"SUSHI\""
											},
											"value": "SUSHI"
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1606,
										"src": "223:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1606",
											"typeString": "contract ERC20"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "223:28:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 8,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 748,
										"src": "253:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$748",
											"typeString": "contract Ownable"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:0"
								}
							],
							"contractDependencies": [
								748,
								1606,
								1684,
								1707
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								748,
								1606,
								1684,
								1707
							],
							"name": "SushiToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "427:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 20,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "444:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 21,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 19,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "438:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "438:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 25,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "483:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "483:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "_delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "495:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 31,
															"indexExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "506:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "495:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 32,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 24,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "468:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "468:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "468:52:0"
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "268:92:0",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 17,
											"modifierName": {
												"argumentTypes": null,
												"id": 16,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 697,
												"src": "417:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "417:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "380:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "393:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:30:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:0:0"
									},
									"scope": 638,
									"src": "366:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "940:46:0",
										"text": "@notice A record of each accounts delegate"
									},
									"id": 41,
									"mutability": "mutable",
									"name": "_delegates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 638,
									"src": "992:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 40,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1012:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "SushiToken.Checkpoint",
									"id": 46,
									"members": [
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 46,
											"src": "1155:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 42,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1155:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 46,
											"src": "1182:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 44,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1182:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 638,
									"src": "1126:77:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1211:68:0",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 53,
									"mutability": "mutable",
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 638,
									"src": "1285:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
									},
									"typeName": {
										"id": 52,
										"keyType": {
											"id": 48,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1294:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1285:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
										},
										"valueType": {
											"id": 51,
											"keyType": {
												"id": 49,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1314:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1305:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
												"typeString": "mapping(uint32 => struct SushiToken.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 50,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 46,
												"src": "1324:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$46_storage_ptr",
													"typeString": "struct SushiToken.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1364:54:0",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 58,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 638,
									"src": "1424:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 57,
										"keyType": {
											"id": 55,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1433:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1424:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 56,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1444:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1482:58:0",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 64,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 638,
									"src": "1546:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 60,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1546:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 62,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1598:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 61,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1588:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1588:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1677:79:0",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 70,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 638,
									"src": "1762:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 66,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1762:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 68,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1818:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 67,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1808:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 69,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1808:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1888:66:0",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 75,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 638,
									"src": "1960:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 74,
										"keyType": {
											"id": 72,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1969:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1960:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 73,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1980:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2010:71:0",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"id": 84,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2109:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2136:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2166:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2108:85:0"
									},
									"src": "2087:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2202:81:0",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"id": 93,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "2316:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "2342:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "2364:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2315:65:0"
									},
									"src": "2289:92:0"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "2631:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2649:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 103,
													"indexExpression": {
														"argumentTypes": null,
														"id": 102,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2660:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2649:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 100,
												"id": 104,
												"nodeType": "Return",
												"src": "2642:28:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "2389:134:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
									},
									"functionSelector": "587cde1e",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 106,
												"src": "2548:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2547:19:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 106,
												"src": "2617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2616:9:0"
									},
									"scope": 638,
									"src": "2529:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2868:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2896:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2896:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 115,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2908:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 112,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2886:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2886:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "2879:39:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2685:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "2840:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2839:19:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2868:0:0"
									},
									"scope": 638,
									"src": "2822:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "3542:999:0",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 221,
														"src": "3553:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 135,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 140,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "3632:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 144,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1164,
																						"src": "3682:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3682:6:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3676:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 142,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3676:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3676:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 141,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "3666:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3666:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 148,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "3709:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3709:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 152,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "3748:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SushiToken_$638",
																				"typeString": "contract SushiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SushiToken_$638",
																				"typeString": "contract SushiToken"
																			}
																		],
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3740:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 150,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3740:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3740:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 138,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3603:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3603:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3603:165:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 137,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3579:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3579:200:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:226:0"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 221,
														"src": "3792:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 157,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 162,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "3866:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 163,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "3904:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 164,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "3932:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 165,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "3956:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 160,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3837:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3837:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3837:140:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 159,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3813:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3813:175:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3792:196:0"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 221,
														"src": "4001:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 169,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4077:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 175,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "4106:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 176,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "4140:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 172,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "4042:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4042:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4042:123:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 171,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "4018:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:158:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4001:175:0"
											},
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 221,
														"src": "4189:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 180,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4189:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 183,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "4227:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 185,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "4230:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 186,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4233:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 182,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "4209:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4189:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 190,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "4254:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4275:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 191,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4267:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4254:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4279:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
															},
															"value": "SUSHI::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4246:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "4246:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 200,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "4340:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4349:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 201,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4349:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 203,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 202,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "4356:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4349:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4340:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
															},
															"value": "SUSHI::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
																"typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4332:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "4332:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 210,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "4427:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 211,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "4434:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4427:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4442:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
																"typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
															},
															"value": "SUSHI::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
																"typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4419:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "4419:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 217,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4512:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 218,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "4523:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 216,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "4502:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 134,
												"id": 220,
												"nodeType": "Return",
												"src": "4495:38:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2934:420:0",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3393:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3421:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3442:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3464:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3464:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3482:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3502:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3382:136:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:0:0"
									},
									"scope": 638,
									"src": "3360:1181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "4848:149:0",
										"statements": [
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "4859:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 230,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 235,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 232,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "4881:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 234,
													"indexExpression": {
														"argumentTypes": null,
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4881:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4859:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 236,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4922:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4937:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4922:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4988:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4922:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 239,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "4941:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 240,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "4953:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4941:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																	"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																}
															},
															"id": 245,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4962:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4977:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4962:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4941:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																"typeString": "struct SushiToken.Checkpoint storage ref"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "4941:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 249,
												"nodeType": "Return",
												"src": "4915:74:0"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4549:187:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "4767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4766:17:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "4834:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4833:9:0"
									},
									"scope": 638,
									"src": "4742:255:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "5550:1132:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 262,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "5569:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 263,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "5583:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5583:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5569:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5597:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
																"typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
															},
															"value": "SUSHI::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
																"typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5561:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "5561:79:0"
											},
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 382,
														"src": "5653:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 269,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 271,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "5675:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 273,
													"indexExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "5690:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5675:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5653:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 275,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "5713:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5729:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5713:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 281,
												"nodeType": "IfStatement",
												"src": "5709:58:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "5732:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5754:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 260,
															"id": 279,
															"nodeType": "Return",
															"src": "5747:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 282,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "5827:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																	}
																},
																"id": 284,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5839:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5827:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																	"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																}
															},
															"id": 288,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 285,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5863:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5848:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5827:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																"typeString": "struct SushiToken.Checkpoint storage ref"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "5827:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 290,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "5879:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5827:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 302,
												"nodeType": "IfStatement",
												"src": "5823:147:0",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "5892:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 292,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 53,
																			"src": "5914:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 294,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 293,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 254,
																			"src": "5926:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5914:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																			"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 298,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 295,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 270,
																			"src": "5935:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5950:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5935:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5914:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																		"typeString": "struct SushiToken.Checkpoint storage ref"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 45,
																"src": "5914:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 260,
															"id": 300,
															"nodeType": "Return",
															"src": "5907:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 303,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "6031:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																	}
																},
																"id": 305,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 304,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6043:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6031:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																	"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																}
															},
															"id": 307,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6052:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6031:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																"typeString": "struct SushiToken.Checkpoint storage ref"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "6031:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "6067:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6031:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 314,
												"nodeType": "IfStatement",
												"src": "6027:88:0",
												"trueBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "6080:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6102:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 260,
															"id": 312,
															"nodeType": "Return",
															"src": "6095:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													316
												],
												"declarations": [
													{
														"constant": false,
														"id": 316,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 382,
														"src": "6127:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 315,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "6127:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6142:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6127:16:0"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 382,
														"src": "6154:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 319,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "6154:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "6169:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6184:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6169:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6154:31:0"
											},
											{
												"body": {
													"id": 373,
													"nodeType": "Block",
													"src": "6218:406:0",
													"statements": [
														{
															"assignments": [
																329
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 329,
																	"mutability": "mutable",
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 373,
																	"src": "6233:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 328,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6233:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 338,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 330,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "6249:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 331,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 320,
																					"src": "6258:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 332,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 316,
																					"src": "6266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6258:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 334,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6257:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6275:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6257:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "6249:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6233:43:0"
														},
														{
															"assignments": [
																340
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 340,
																	"mutability": "mutable",
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 373,
																	"src": "6318:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$46_memory_ptr",
																		"typeString": "struct SushiToken.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 339,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 46,
																		"src": "6318:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$46_storage_ptr",
																			"typeString": "struct SushiToken.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 346,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 341,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "6341:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 343,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 342,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "6353:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6341:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																		"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																	}
																},
																"id": 345,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 344,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "6362:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6341:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																	"typeString": "struct SushiToken.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6318:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 347,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "6388:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$46_memory_ptr",
																			"typeString": "struct SushiToken.Checkpoint memory"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 43,
																	"src": "6388:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 349,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "6404:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6388:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 355,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "6477:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$46_memory_ptr",
																				"typeString": "struct SushiToken.Checkpoint memory"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 43,
																		"src": "6477:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 357,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "6492:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6477:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 370,
																	"nodeType": "Block",
																	"src": "6560:53:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 364,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 320,
																					"src": "6579:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 365,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 329,
																						"src": "6587:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6596:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6587:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6579:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 369,
																			"nodeType": "ExpressionStatement",
																			"src": "6579:18:0"
																		}
																	]
																},
																"id": 371,
																"nodeType": "IfStatement",
																"src": "6473:140:0",
																"trueBody": {
																	"id": 363,
																	"nodeType": "Block",
																	"src": "6505:49:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 359,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 316,
																					"src": "6524:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 360,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 329,
																					"src": "6532:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6524:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 362,
																			"nodeType": "ExpressionStatement",
																			"src": "6524:14:0"
																		}
																	]
																}
															},
															"id": 372,
															"nodeType": "IfStatement",
															"src": "6384:229:0",
															"trueBody": {
																"id": 354,
																"nodeType": "Block",
																"src": "6417:50:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 351,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 340,
																				"src": "6443:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$46_memory_ptr",
																					"typeString": "struct SushiToken.Checkpoint memory"
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 45,
																			"src": "6443:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 260,
																		"id": 353,
																		"nodeType": "Return",
																		"src": "6436:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 325,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "6203:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 326,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6211:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "6203:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "WhileStatement",
												"src": "6196:428:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 375,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "6641:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																}
															},
															"id": 377,
															"indexExpression": {
																"argumentTypes": null,
																"id": 376,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "6653:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6641:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
															}
														},
														"id": 379,
														"indexExpression": {
															"argumentTypes": null,
															"id": 378,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "6662:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6641:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
															"typeString": "struct SushiToken.Checkpoint storage ref"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 45,
													"src": "6641:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 381,
												"nodeType": "Return",
												"src": "6634:40:0"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "5005:417:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "5451:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "5468:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5450:35:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "5536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5535:9:0"
									},
									"scope": 638,
									"src": "5428:1254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "6770:359:0",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 420,
														"src": "6781:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 390,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6781:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 392,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "6807:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 394,
													"indexExpression": {
														"argumentTypes": null,
														"id": 393,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "6818:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6807:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6781:47:0"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 420,
														"src": "6839:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 399,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "6876:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "6866:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6866:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6839:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 402,
															"name": "_delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "6943:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 404,
														"indexExpression": {
															"argumentTypes": null,
															"id": 403,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "6954:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6943:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 405,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6943:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "6943:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7021:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 411,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7038:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "6994:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6994:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "EmitStatement",
												"src": "6989:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 415,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7076:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 416,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7093:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 417,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "7104:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 414,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "7061:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7061:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "7061:60:0"
											}
										]
									},
									"documentation": null,
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "6709:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "6728:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6708:38:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6770:0:0"
									},
									"scope": 638,
									"src": "6690:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "7218:866:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "7243:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7233:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 433,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7253:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7262:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7253:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7233:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 526,
												"nodeType": "IfStatement",
												"src": "7229:848:0",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "7265:812:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 437,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "7284:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7302:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7294:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 438,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7294:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7294:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "7284:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 480,
															"nodeType": "IfStatement",
															"src": "7280:385:0",
															"trueBody": {
																"id": 479,
																"nodeType": "Block",
																"src": "7306:359:0",
																"statements": [
																	{
																		"assignments": [
																			444
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 444,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 479,
																				"src": "7373:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 443,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7373:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 448,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 445,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "7392:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 447,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 446,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 423,
																				"src": "7407:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7392:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7373:41:0"
																	},
																	{
																		"assignments": [
																			450
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 450,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 479,
																				"src": "7433:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 449,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7433:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 464,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 451,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "7453:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7465:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7453:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7512:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7453:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 454,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 53,
																							"src": "7469:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 456,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 455,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 423,
																							"src": "7481:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7469:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																							"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 460,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 459,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 457,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 444,
																							"src": "7489:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 458,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7501:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7489:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7469:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																						"typeString": "struct SushiToken.Checkpoint storage ref"
																					}
																				},
																				"id": 461,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 45,
																				"src": "7469:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7433:80:0"
																	},
																	{
																		"assignments": [
																			466
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 466,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 479,
																				"src": "7532:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 465,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7532:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 471,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 469,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 427,
																					"src": "7566:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 467,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 450,
																					"src": "7552:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "7552:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7552:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7532:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 473,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 423,
																					"src": "7609:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 474,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "7617:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 475,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 450,
																					"src": "7628:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 476,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 466,
																					"src": "7639:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 472,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "7592:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7592:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 478,
																		"nodeType": "ExpressionStatement",
																		"src": "7592:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 481,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "7685:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7703:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7695:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 482,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7695:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7695:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "7685:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 524,
															"nodeType": "IfStatement",
															"src": "7681:385:0",
															"trueBody": {
																"id": 523,
																"nodeType": "Block",
																"src": "7707:359:0",
																"statements": [
																	{
																		"assignments": [
																			488
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 488,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 523,
																				"src": "7774:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 487,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7774:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 492,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 489,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "7793:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 491,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 490,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 425,
																				"src": "7808:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7793:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7774:41:0"
																	},
																	{
																		"assignments": [
																			494
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 494,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 523,
																				"src": "7834:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 493,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7834:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 508,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 495,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 488,
																					"src": "7854:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7866:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7854:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7913:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7854:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 498,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 53,
																							"src": "7870:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 500,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 499,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 425,
																							"src": "7882:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7870:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																							"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 504,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 503,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 501,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 488,
																							"src": "7890:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 502,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7902:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7890:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7870:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																						"typeString": "struct SushiToken.Checkpoint storage ref"
																					}
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 45,
																				"src": "7870:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7834:80:0"
																	},
																	{
																		"assignments": [
																			510
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 510,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 523,
																				"src": "7933:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 509,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7933:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 515,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 513,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 427,
																					"src": "7967:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 511,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "7953:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 930,
																				"src": "7953:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7953:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7933:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 517,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 425,
																					"src": "8010:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 518,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 488,
																					"src": "8018:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 519,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "8029:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 520,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 510,
																					"src": "8040:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 516,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "7993:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7993:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 522,
																		"nodeType": "ExpressionStatement",
																		"src": "7993:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "7161:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "7177:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "7193:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7160:48:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7218:0:0"
									},
									"scope": 638,
									"src": "7137:947:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "8260:537:0",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 600,
														"src": "8271:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 539,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8271:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 542,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "8299:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8299:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8313:55:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
																"typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "SUSHI::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
																"typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 541,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "8292:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8292:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8271:98:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 547,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "8386:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8401:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8386:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 550,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "8406:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 552,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 551,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "8418:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8406:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																		"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																	}
																},
																"id": 556,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 553,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "8429:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8444:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8429:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8406:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																	"typeString": "struct SushiToken.Checkpoint storage ref"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 43,
															"src": "8406:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 558,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8460:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8406:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8386:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "8563:158:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 573,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 53,
																			"src": "8578:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 576,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 574,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "8590:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8578:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																			"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 577,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 575,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "8601:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8578:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																		"typeString": "struct SushiToken.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 579,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 540,
																			"src": "8628:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 580,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "8641:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 578,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "8617:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$46_storage_ptr_$",
																			"typeString": "type(struct SushiToken.Checkpoint storage pointer)"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8617:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$46_memory_ptr",
																		"typeString": "struct SushiToken.Checkpoint memory"
																	}
																},
																"src": "8578:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																	"typeString": "struct SushiToken.Checkpoint storage ref"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "8578:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 584,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "8665:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 586,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 585,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "8680:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8665:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 587,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "8693:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8708:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8693:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8665:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 591,
															"nodeType": "ExpressionStatement",
															"src": "8665:44:0"
														}
													]
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "8382:339:0",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "8473:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 561,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 53,
																				"src": "8488:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
																				}
																			},
																			"id": 566,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 562,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "8500:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8488:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$46_storage_$",
																				"typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
																			}
																		},
																		"id": 567,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 563,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "8511:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8526:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8511:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8488:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$46_storage",
																			"typeString": "struct SushiToken.Checkpoint storage ref"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "8488:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 569,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "8537:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8488:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "8488:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 595,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "8759:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 596,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "8770:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 597,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "8780:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "8738:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8738:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "EmitStatement",
												"src": "8733:56:0"
											}
										]
									},
									"documentation": null,
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "8128:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "8156:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 531,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "8186:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "8213:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8117:119:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8260:0:0"
									},
									"scope": 638,
									"src": "8092:705:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "8888:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 611,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "8907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8911:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8911:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "8907:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 616,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "8918:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "8899:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 621,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "8956:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8949:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 619,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8949:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8949:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 609,
												"id": 623,
												"nodeType": "Return",
												"src": "8942:16:0"
											}
										]
									},
									"documentation": null,
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8821:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8821:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8829:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8829:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8820:36:0"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8880:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 607,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8880:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8879:8:0"
									},
									"scope": 638,
									"src": "8805:161:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "9025:102:0",
										"statements": [
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 636,
														"src": "9036:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9036:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9071:24:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9073:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "9084:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "9073:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 631,
														"isOffset": false,
														"isSlot": false,
														"src": "9073:7:0",
														"valueSize": 1
													}
												],
												"id": 633,
												"nodeType": "InlineAssembly",
												"src": "9062:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 634,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 631,
													"src": "9112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 629,
												"id": 635,
												"nodeType": "Return",
												"src": "9105:14:0"
											}
										]
									},
									"documentation": null,
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8993:2:0"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "9019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9018:6:0"
									},
									"scope": 638,
									"src": "8974:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 639,
							"src": "200:8930:0"
						}
					],
					"src": "0:9130:0"
				},
				"id": 0
			},
			"deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "deps/npm/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							748
						]
					},
					"id": 749,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 640,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 641,
							"nodeType": "ImportDirective",
							"scope": 749,
							"sourceUnit": 1708,
							"src": "66:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 643,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1707,
										"src": "621:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1707",
											"typeString": "contract Context"
										}
									},
									"id": 644,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:1"
								}
							],
							"contractDependencies": [
								1707
							],
							"contractKind": "contract",
							"documentation": {
								"id": 642,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 748,
							"linearizedBaseContracts": [
								748,
								1707
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 646,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 748,
									"src": "635:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 645,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 652,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 652,
												"src": "691:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 652,
												"src": "722:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:1"
									},
									"src": "664:84:1"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "874:135:1",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 673,
														"src": "884:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "904:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 661,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "926:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 662,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "935:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "926:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 670,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "992:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 665,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "959:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "EmitStatement",
												"src": "954:48:1"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 674,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:1"
									},
									"scope": 748,
									"src": "850:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1140:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 680,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 646,
													"src": "1157:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 679,
												"id": 681,
												"nodeType": "Return",
												"src": "1150:13:1"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:1"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 683,
												"src": "1131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:1"
									},
									"scope": 748,
									"src": "1085:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1279:96:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 687,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "1297:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 689,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "1308:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:1"
											},
											{
												"id": 695,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:1"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 697,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:1"
									},
									"src": "1258:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "1771:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 704,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "1807:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 705,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 703,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1786:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "EmitStatement",
												"src": "1781:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 711,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1836:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 712,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:1"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 701,
											"modifierName": {
												"argumentTypes": null,
												"id": 700,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 697,
												"src": "1761:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:1"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:1"
									},
									"scope": 748,
									"src": "1717:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "2081:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 728,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "2099:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 729,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "2200:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "2208:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 737,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2179:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "2174:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 742,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "2227:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 743,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "2236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:1"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 725,
											"modifierName": {
												"argumentTypes": null,
												"id": 724,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 697,
												"src": "2071:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "2038:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:1"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:1"
									},
									"scope": 748,
									"src": "2011:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 749,
							"src": "592:1661:1"
						}
					],
					"src": "33:2221:1"
				},
				"id": 1
			},
			"deps/npm/@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "deps/npm/@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1103
						]
					},
					"id": 1104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 750,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 751,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1103,
							"linearizedBaseContracts": [
								1103
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "865:98:2",
										"statements": [
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 781,
														"src": "875:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "891:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 769,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 770,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 776,
												"nodeType": "IfStatement",
												"src": "902:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 762,
													"id": 775,
													"nodeType": "Return",
													"src": "913:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "954:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 779,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 762,
												"id": 780,
												"nodeType": "Return",
												"src": "940:16:2"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 782,
												"src": "805:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 782,
												"src": "816:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 782,
												"src": "850:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 782,
												"src": "856:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:2"
									},
									"scope": 1103,
									"src": "789:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "1185:75:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 794,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "1199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1203:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 801,
												"nodeType": "IfStatement",
												"src": "1195:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 799,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 793,
													"id": 800,
													"nodeType": "Return",
													"src": "1206:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 803,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "1247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 804,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "1251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 806,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 793,
												"id": 807,
												"nodeType": "Return",
												"src": "1233:20:2"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "1125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "1136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:2"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "1176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:2"
									},
									"scope": 1103,
									"src": "1109:151:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1484:359:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 821,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 828,
												"nodeType": "IfStatement",
												"src": "1712:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 826,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 820,
													"id": 827,
													"nodeType": "Return",
													"src": "1724:16:2"
												}
											},
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 849,
														"src": "1750:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 829,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 831,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1762:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 832,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 835,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1781:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 836,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "1785:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 838,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 844,
												"nodeType": "IfStatement",
												"src": "1777:33:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 842,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 820,
													"id": 843,
													"nodeType": "Return",
													"src": "1793:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 846,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1834:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 847,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 820,
												"id": 848,
												"nodeType": "Return",
												"src": "1820:16:2"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "1424:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "1435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:2"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "1469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 850,
												"src": "1475:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:2"
									},
									"scope": 1103,
									"src": "1408:435:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2068:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 862,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2082:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 869,
												"nodeType": "IfStatement",
												"src": "2078:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 867,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 861,
													"id": 868,
													"nodeType": "Return",
													"src": "2090:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 871,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 874,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 861,
												"id": 875,
												"nodeType": "Return",
												"src": "2117:20:2"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "2019:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:2"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "2059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:2"
									},
									"scope": 1103,
									"src": "1992:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2379:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 889,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 896,
												"nodeType": "IfStatement",
												"src": "2389:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 894,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 888,
													"id": 895,
													"nodeType": "Return",
													"src": "2401:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 898,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "2442:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 899,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "2446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 901,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 888,
												"id": 902,
												"nodeType": "Return",
												"src": "2428:20:2"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "2319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "2330:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:2"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "2364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "2370:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:2"
									},
									"scope": 1103,
									"src": "2303:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2757:108:2",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 929,
														"src": "2767:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 914,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 916,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "2779:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 917,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 921,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 922,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "2807:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 927,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 915,
													"src": "2857:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 913,
												"id": 928,
												"nodeType": "Return",
												"src": "2850:8:2"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 930,
												"src": "2703:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 930,
												"src": "2714:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:2"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 930,
												"src": "2748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:2"
									},
									"scope": 1103,
									"src": "2690:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3203:88:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 941,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "3221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 942,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "3226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 950,
												"nodeType": "Return",
												"src": "3272:12:2"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "3149:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "3160:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:2"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "3194:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:2"
									},
									"scope": 1103,
									"src": "3136:155:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "3605:148:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 967,
												"nodeType": "IfStatement",
												"src": "3615:20:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 961,
													"id": 966,
													"nodeType": "Return",
													"src": "3627:8:2"
												}
											},
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 985,
														"src": "3645:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 970,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3657:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3661:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 975,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "3680:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 976,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "3684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 978,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "3689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 983,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 969,
													"src": "3745:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 984,
												"nodeType": "Return",
												"src": "3738:8:2"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "3551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "3562:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:2"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "3596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:2"
									},
									"scope": 1103,
									"src": "3538:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "4284:83:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "4302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1003,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "4355:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1004,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "4359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 995,
												"id": 1006,
												"nodeType": "Return",
												"src": "4348:12:2"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1008,
												"src": "4230:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1008,
												"src": "4241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:2"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1008,
												"src": "4275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:2"
									},
									"scope": 1103,
									"src": "4217:150:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "4887:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1019,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "4905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1025,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "4956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1026,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "4960:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1028,
												"nodeType": "Return",
												"src": "4949:12:2"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1030,
												"src": "4833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1030,
												"src": "4844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:2"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1030,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 1103,
									"src": "4820:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "5527:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1043,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "5545:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1044,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "5550:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1046,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1049,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "5583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1050,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "5587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1052,
												"nodeType": "Return",
												"src": "5576:12:2"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "5445:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "5456:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "5467:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:2"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "5518:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:2"
									},
									"scope": 1103,
									"src": "5432:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "6347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1070,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6372:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1073,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "6402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1074,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "6406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1076,
												"nodeType": "Return",
												"src": "6395:12:2"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "6265:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "6276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "6287:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:2"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "6338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:2"
									},
									"scope": 1103,
									"src": "6252:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "7155:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1091,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "7173:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1094,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "7180:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1097,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "7210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1098,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "7214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1100,
												"nodeType": "Return",
												"src": "7203:12:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1102,
												"src": "7073:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1102,
												"src": "7084:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1102,
												"src": "7095:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:2"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1102,
												"src": "7146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:2"
									},
									"scope": 1103,
									"src": "7060:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1104,
							"src": "630:6594:2"
						}
					],
					"src": "33:7192:2"
				},
				"id": 2
			},
			"deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1606
						]
					},
					"id": 1607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1105,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 1106,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1708,
							"src": "66:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1107,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1685,
							"src": "100:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "deps/npm/@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1108,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1104,
							"src": "123:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1110,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1707,
										"src": "1339:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1707",
											"typeString": "contract Context"
										}
									},
									"id": 1111,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1112,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1684,
										"src": "1348:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1684",
											"typeString": "contract IERC20"
										}
									},
									"id": 1113,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:3"
								}
							],
							"contractDependencies": [
								1684,
								1707
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1109,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1606,
							"linearizedBaseContracts": [
								1606,
								1684,
								1707
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1116,
									"libraryName": {
										"contractScope": null,
										"id": 1114,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1103,
										"src": "1367:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1103",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:3",
									"typeName": {
										"id": 1115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1120,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1606,
									"src": "1394:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1119,
										"keyType": {
											"id": 1117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1126,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1606,
									"src": "1447:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1125,
										"keyType": {
											"id": 1121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1124,
											"keyType": {
												"id": 1122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1128,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1606,
									"src": "1523:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1130,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1606,
									"src": "1558:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1132,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1606,
									"src": "1584:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1134,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1606,
									"src": "1612:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1133,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2022:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1142,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "2032:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1143,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2040:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1146,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2055:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1147,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "2065:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1150,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2082:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:3"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1155,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "1971:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "1992:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:3"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:3"
									},
									"scope": 1606,
									"src": "1958:145:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "2228:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1161,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1130,
													"src": "2245:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1162,
												"nodeType": "Return",
												"src": "2238:12:3"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:3"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1164,
												"src": "2213:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:3"
									},
									"scope": 1606,
									"src": "2168:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2432:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1170,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1169,
												"id": 1171,
												"nodeType": "Return",
												"src": "2442:14:3"
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:3"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1173,
												"src": "2417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:3"
									},
									"scope": 1606,
									"src": "2370:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "3142:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1179,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1134,
													"src": "3159:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1180,
												"nodeType": "Return",
												"src": "3152:16:3"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:3"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "3135:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1176,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:3"
									},
									"scope": 1606,
									"src": "3086:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1615
									],
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "3305:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1189,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1128,
													"src": "3322:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1190,
												"nodeType": "Return",
												"src": "3315:19:3"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:3"
									},
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:3"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1192,
												"src": "3296:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:3"
									},
									"scope": 1606,
									"src": "3235:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1623
									],
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "3482:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1201,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "3499:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1203,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1202,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1204,
												"nodeType": "Return",
												"src": "3492:25:3"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:3"
									},
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1206,
												"src": "3418:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:3"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1206,
												"src": "3473:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:3"
									},
									"scope": 1606,
									"src": "3399:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1633
									],
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "3819:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1218,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "3839:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1220,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "3853:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3864:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "3829:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1216,
												"id": 1225,
												"nodeType": "Return",
												"src": "3881:11:3"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:3"
									},
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "3745:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "3764:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:3"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "3813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:3"
									},
									"scope": 1606,
									"src": "3727:172:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1643
									],
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "4055:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1238,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "4072:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1240,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1239,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4084:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1242,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1241,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "4091:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1243,
												"nodeType": "Return",
												"src": "4065:34:3"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1234,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:3"
									},
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1245,
												"src": "3976:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1245,
												"src": "3991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:3"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1245,
												"src": "4046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:3"
									},
									"scope": 1606,
									"src": "3957:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1653
									],
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "4333:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1257,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "4352:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1259,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "4366:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1260,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "4375:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "4343:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1255,
												"id": 1264,
												"nodeType": "Return",
												"src": "4392:11:3"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:3",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:3"
									},
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1266,
												"src": "4261:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1266,
												"src": "4278:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:3"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1266,
												"src": "4327:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:3"
									},
									"scope": 1606,
									"src": "4244:166:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1665
									],
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "4989:205:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1280,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "5009:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1281,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "5017:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1282,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "5028:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1279,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "4999:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1286,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "5054:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1287,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "5062:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1296,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "5114:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1289,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "5076:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1291,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1290,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "5088:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1294,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1292,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "5096:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1054,
																"src": "5076:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "5045:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1278,
												"id": 1302,
												"nodeType": "Return",
												"src": "5176:11:3"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1275,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:3"
									},
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "4899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "4915:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "4934:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "4983:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:3"
									},
									"scope": 1606,
									"src": "4877:317:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "5683:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1315,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "5702:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1317,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5716:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1325,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "5764:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1318,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "5725:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1321,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1319,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1695,
																				"src": "5737:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1323,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1322,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "5751:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "5725:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1314,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "5693:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1313,
												"id": 1330,
												"nodeType": "Return",
												"src": "5786:11:3"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1332,
												"src": "5616:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1332,
												"src": "5633:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:3"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1332,
												"src": "5677:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:3"
									},
									"scope": 1606,
									"src": "5589:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "6390:167:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1343,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "6409:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1345,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "6423:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1353,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "6471:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1346,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "6432:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1349,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1347,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1695,
																				"src": "6444:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1351,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1350,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "6458:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1054,
																"src": "6432:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1342,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "6400:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1341,
												"id": 1359,
												"nodeType": "Return",
												"src": "6539:11:3"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1361,
												"src": "6318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1361,
												"src": "6335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:3"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1361,
												"src": "6384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:3"
									},
									"scope": 1606,
									"src": "6291:266:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "7118:443:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1372,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "7136:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1373,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1382,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "7216:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1383,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1392,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "7311:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1393,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "7319:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1394,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7330:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1391,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "7290:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "7348:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1399,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1398,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "7358:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1404,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7390:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1400,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "7368:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1402,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1401,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "7378:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1054,
															"src": "7368:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1409,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "7449:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1411,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1410,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "7459:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7497:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1412,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "7472:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1414,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1413,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "7482:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "7472:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "7528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1422,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "7536:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7547:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "7519:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "EmitStatement",
												"src": "7514:40:3"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "7050:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "7066:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "7085:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:3"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:3"
									},
									"scope": 1606,
									"src": "7031:530:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "7897:305:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1436,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "7915:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1437,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1450,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "8016:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1451,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "8025:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "7983:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "8043:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1457,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "8075:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1455,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "8058:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "8058:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "8092:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1463,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1462,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "8102:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1468,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "8136:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1464,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "8113:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1466,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1465,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "8123:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "8113:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1477,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "8179:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1478,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "8188:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1472,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "8158:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "EmitStatement",
												"src": "8153:42:3"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1482,
												"src": "7847:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1482,
												"src": "7864:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:3"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:3"
									},
									"scope": 1606,
									"src": "7832:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "8587:345:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1491,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "8605:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1492,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "8696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1502,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1506,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "8717:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1500,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "8675:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1509,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "8735:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1511,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1510,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "8745:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1516,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "8779:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "8756:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1514,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1513,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "8766:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1054,
															"src": "8756:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1521,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "8834:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1524,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "8866:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1522,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "8849:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 952,
															"src": "8849:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1529,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "8897:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "8918:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1528,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "8888:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "8883:42:3"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1538,
												"src": "8537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1538,
												"src": "8554:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:3"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:3"
									},
									"scope": 1606,
									"src": "8522:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "9438:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1549,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "9456:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1559,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "9534:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1560,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1568,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "9605:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1571,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1569,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "9617:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1572,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1570,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "9624:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1573,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "9635:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1577,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "9665:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1578,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "9672:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "9681:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1576,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "9656:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "EmitStatement",
												"src": "9651:37:3"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "9373:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "9388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "9405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:3"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:3"
									},
									"scope": 1606,
									"src": "9355:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "10076:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1589,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "10086:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1590,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "10098:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:3"
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:3",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "10042:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1585,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:3"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:3"
									},
									"scope": 1606,
									"src": "10018:96:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "10790:3:3",
										"statements": []
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1605,
												"src": "10731:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1605,
												"src": "10745:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1605,
												"src": "10757:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:3"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:3"
									},
									"scope": 1606,
									"src": "10701:92:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1607,
							"src": "1321:9474:3"
						}
					],
					"src": "33:10763:3"
				},
				"id": 3
			},
			"deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1684
						]
					},
					"id": 1685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1608,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1609,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1684,
							"linearizedBaseContracts": [
								1684
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:4"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1615,
												"src": "277:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:4"
									},
									"scope": 1684,
									"src": "231:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1623,
												"src": "388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:4"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1623,
												"src": "428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:4"
									},
									"scope": 1684,
									"src": "369:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1633,
												"src": "675:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1633,
												"src": "694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:4"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1633,
												"src": "728:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:4"
									},
									"scope": 1684,
									"src": "657:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "1028:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:4"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "1083:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:4"
									},
									"scope": 1684,
									"src": "1009:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "1762:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "1779:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:4"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "1813:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:4"
									},
									"scope": 1684,
									"src": "1745:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "2148:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "2164:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "2183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:4"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "2217:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:4"
									},
									"scope": 1684,
									"src": "2126:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1674,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1674,
												"src": "2407:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1674,
												"src": "2429:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1674,
												"src": "2449:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:4"
									},
									"src": "2392:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1683,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "2638:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "2661:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "2686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:4"
									},
									"src": "2623:78:4"
								}
							],
							"scope": 1685,
							"src": "137:2566:4"
						}
					],
					"src": "33:2671:4"
				},
				"id": 4
			},
			"deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "deps/npm/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1707
						]
					},
					"id": 1708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1686,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "668:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1691,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1693,
												"nodeType": "Return",
												"src": "678:17:5"
											}
										]
									},
									"documentation": null,
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "651:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:5"
									},
									"scope": 1707,
									"src": "598:104:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "773:165:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1700,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1707",
														"typeString": "contract Context"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "783:4:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1702,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1704,
												"nodeType": "Return",
												"src": "916:15:5"
											}
										]
									},
									"documentation": null,
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:5"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1706,
												"src": "759:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:5"
									},
									"scope": 1707,
									"src": "708:230:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1708,
							"src": "566:374:5"
						}
					],
					"src": "33:908:5"
				},
				"id": 5
			}
		}
	}
}